{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    static { this._instances = new Map(); }\n    static { this.CommandPalette = new MenuId('CommandPalette'); }\n    static { this.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext'); }\n    static { this.DebugCallStackContext = new MenuId('DebugCallStackContext'); }\n    static { this.DebugConsoleContext = new MenuId('DebugConsoleContext'); }\n    static { this.DebugVariablesContext = new MenuId('DebugVariablesContext'); }\n    static { this.NotebookVariablesContext = new MenuId('NotebookVariablesContext'); }\n    static { this.DebugHoverContext = new MenuId('DebugHoverContext'); }\n    static { this.DebugWatchContext = new MenuId('DebugWatchContext'); }\n    static { this.DebugToolBar = new MenuId('DebugToolBar'); }\n    static { this.DebugToolBarStop = new MenuId('DebugToolBarStop'); }\n    static { this.DebugCallStackToolbar = new MenuId('DebugCallStackToolbar'); }\n    static { this.DebugCreateConfiguration = new MenuId('DebugCreateConfiguration'); }\n    static { this.EditorContext = new MenuId('EditorContext'); }\n    static { this.SimpleEditorContext = new MenuId('SimpleEditorContext'); }\n    static { this.EditorContent = new MenuId('EditorContent'); }\n    static { this.EditorLineNumberContext = new MenuId('EditorLineNumberContext'); }\n    static { this.EditorContextCopy = new MenuId('EditorContextCopy'); }\n    static { this.EditorContextPeek = new MenuId('EditorContextPeek'); }\n    static { this.EditorContextShare = new MenuId('EditorContextShare'); }\n    static { this.EditorTitle = new MenuId('EditorTitle'); }\n    static { this.EditorTitleRun = new MenuId('EditorTitleRun'); }\n    static { this.EditorTitleContext = new MenuId('EditorTitleContext'); }\n    static { this.EditorTitleContextShare = new MenuId('EditorTitleContextShare'); }\n    static { this.EmptyEditorGroup = new MenuId('EmptyEditorGroup'); }\n    static { this.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext'); }\n    static { this.EditorTabsBarContext = new MenuId('EditorTabsBarContext'); }\n    static { this.EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu'); }\n    static { this.EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu'); }\n    static { this.EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu'); }\n    static { this.ExplorerContext = new MenuId('ExplorerContext'); }\n    static { this.ExplorerContextShare = new MenuId('ExplorerContextShare'); }\n    static { this.ExtensionContext = new MenuId('ExtensionContext'); }\n    static { this.GlobalActivity = new MenuId('GlobalActivity'); }\n    static { this.CommandCenter = new MenuId('CommandCenter'); }\n    static { this.CommandCenterCenter = new MenuId('CommandCenterCenter'); }\n    static { this.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu'); }\n    static { this.LayoutControlMenu = new MenuId('LayoutControlMenu'); }\n    static { this.MenubarMainMenu = new MenuId('MenubarMainMenu'); }\n    static { this.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu'); }\n    static { this.MenubarDebugMenu = new MenuId('MenubarDebugMenu'); }\n    static { this.MenubarEditMenu = new MenuId('MenubarEditMenu'); }\n    static { this.MenubarCopy = new MenuId('MenubarCopy'); }\n    static { this.MenubarFileMenu = new MenuId('MenubarFileMenu'); }\n    static { this.MenubarGoMenu = new MenuId('MenubarGoMenu'); }\n    static { this.MenubarHelpMenu = new MenuId('MenubarHelpMenu'); }\n    static { this.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu'); }\n    static { this.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu'); }\n    static { this.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu'); }\n    static { this.PanelPositionMenu = new MenuId('PanelPositionMenu'); }\n    static { this.ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu'); }\n    static { this.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu'); }\n    static { this.MenubarRecentMenu = new MenuId('MenubarRecentMenu'); }\n    static { this.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu'); }\n    static { this.MenubarShare = new MenuId('MenubarShare'); }\n    static { this.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu'); }\n    static { this.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu'); }\n    static { this.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu'); }\n    static { this.MenubarViewMenu = new MenuId('MenubarViewMenu'); }\n    static { this.MenubarHomeMenu = new MenuId('MenubarHomeMenu'); }\n    static { this.OpenEditorsContext = new MenuId('OpenEditorsContext'); }\n    static { this.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare'); }\n    static { this.ProblemsPanelContext = new MenuId('ProblemsPanelContext'); }\n    static { this.SCMInputBox = new MenuId('SCMInputBox'); }\n    static { this.SCMChangesSeparator = new MenuId('SCMChangesSeparator'); }\n    static { this.SCMChangesContext = new MenuId('SCMChangesContext'); }\n    static { this.SCMIncomingChanges = new MenuId('SCMIncomingChanges'); }\n    static { this.SCMIncomingChangesContext = new MenuId('SCMIncomingChangesContext'); }\n    static { this.SCMIncomingChangesSetting = new MenuId('SCMIncomingChangesSetting'); }\n    static { this.SCMOutgoingChanges = new MenuId('SCMOutgoingChanges'); }\n    static { this.SCMOutgoingChangesContext = new MenuId('SCMOutgoingChangesContext'); }\n    static { this.SCMOutgoingChangesSetting = new MenuId('SCMOutgoingChangesSetting'); }\n    static { this.SCMIncomingChangesAllChangesContext = new MenuId('SCMIncomingChangesAllChangesContext'); }\n    static { this.SCMIncomingChangesHistoryItemContext = new MenuId('SCMIncomingChangesHistoryItemContext'); }\n    static { this.SCMOutgoingChangesAllChangesContext = new MenuId('SCMOutgoingChangesAllChangesContext'); }\n    static { this.SCMOutgoingChangesHistoryItemContext = new MenuId('SCMOutgoingChangesHistoryItemContext'); }\n    static { this.SCMChangeContext = new MenuId('SCMChangeContext'); }\n    static { this.SCMResourceContext = new MenuId('SCMResourceContext'); }\n    static { this.SCMResourceContextShare = new MenuId('SCMResourceContextShare'); }\n    static { this.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext'); }\n    static { this.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext'); }\n    static { this.SCMSourceControl = new MenuId('SCMSourceControl'); }\n    static { this.SCMSourceControlInline = new MenuId('SCMSourceControlInline'); }\n    static { this.SCMSourceControlTitle = new MenuId('SCMSourceControlTitle'); }\n    static { this.SCMHistoryTitle = new MenuId('SCMHistoryTitle'); }\n    static { this.SCMTitle = new MenuId('SCMTitle'); }\n    static { this.SearchContext = new MenuId('SearchContext'); }\n    static { this.SearchActionMenu = new MenuId('SearchActionContext'); }\n    static { this.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu'); }\n    static { this.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu'); }\n    static { this.StickyScrollContext = new MenuId('StickyScrollContext'); }\n    static { this.TestItem = new MenuId('TestItem'); }\n    static { this.TestItemGutter = new MenuId('TestItemGutter'); }\n    static { this.TestProfilesContext = new MenuId('TestProfilesContext'); }\n    static { this.TestMessageContext = new MenuId('TestMessageContext'); }\n    static { this.TestMessageContent = new MenuId('TestMessageContent'); }\n    static { this.TestPeekElement = new MenuId('TestPeekElement'); }\n    static { this.TestPeekTitle = new MenuId('TestPeekTitle'); }\n    static { this.TestCallStack = new MenuId('TestCallStack'); }\n    static { this.TouchBarContext = new MenuId('TouchBarContext'); }\n    static { this.TitleBarContext = new MenuId('TitleBarContext'); }\n    static { this.TitleBarTitleContext = new MenuId('TitleBarTitleContext'); }\n    static { this.TunnelContext = new MenuId('TunnelContext'); }\n    static { this.TunnelPrivacy = new MenuId('TunnelPrivacy'); }\n    static { this.TunnelProtocol = new MenuId('TunnelProtocol'); }\n    static { this.TunnelPortInline = new MenuId('TunnelInline'); }\n    static { this.TunnelTitle = new MenuId('TunnelTitle'); }\n    static { this.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline'); }\n    static { this.TunnelOriginInline = new MenuId('TunnelOriginInline'); }\n    static { this.ViewItemContext = new MenuId('ViewItemContext'); }\n    static { this.ViewContainerTitle = new MenuId('ViewContainerTitle'); }\n    static { this.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext'); }\n    static { this.ViewTitle = new MenuId('ViewTitle'); }\n    static { this.ViewTitleContext = new MenuId('ViewTitleContext'); }\n    static { this.CommentEditorActions = new MenuId('CommentEditorActions'); }\n    static { this.CommentThreadTitle = new MenuId('CommentThreadTitle'); }\n    static { this.CommentThreadActions = new MenuId('CommentThreadActions'); }\n    static { this.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions'); }\n    static { this.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext'); }\n    static { this.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext'); }\n    static { this.CommentTitle = new MenuId('CommentTitle'); }\n    static { this.CommentActions = new MenuId('CommentActions'); }\n    static { this.CommentsViewThreadActions = new MenuId('CommentsViewThreadActions'); }\n    static { this.InteractiveToolbar = new MenuId('InteractiveToolbar'); }\n    static { this.InteractiveCellTitle = new MenuId('InteractiveCellTitle'); }\n    static { this.InteractiveCellDelete = new MenuId('InteractiveCellDelete'); }\n    static { this.InteractiveCellExecute = new MenuId('InteractiveCellExecute'); }\n    static { this.InteractiveInputExecute = new MenuId('InteractiveInputExecute'); }\n    static { this.InteractiveInputConfig = new MenuId('InteractiveInputConfig'); }\n    static { this.ReplInputExecute = new MenuId('ReplInputExecute'); }\n    static { this.IssueReporter = new MenuId('IssueReporter'); }\n    static { this.NotebookToolbar = new MenuId('NotebookToolbar'); }\n    static { this.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext'); }\n    static { this.NotebookCellTitle = new MenuId('NotebookCellTitle'); }\n    static { this.NotebookCellDelete = new MenuId('NotebookCellDelete'); }\n    static { this.NotebookCellInsert = new MenuId('NotebookCellInsert'); }\n    static { this.NotebookCellBetween = new MenuId('NotebookCellBetween'); }\n    static { this.NotebookCellListTop = new MenuId('NotebookCellTop'); }\n    static { this.NotebookCellExecute = new MenuId('NotebookCellExecute'); }\n    static { this.NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo'); }\n    static { this.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary'); }\n    static { this.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle'); }\n    static { this.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle'); }\n    static { this.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle'); }\n    static { this.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar'); }\n    static { this.NotebookOutlineFilter = new MenuId('NotebookOutlineFilter'); }\n    static { this.NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu'); }\n    static { this.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure'); }\n    static { this.NotebookKernelSource = new MenuId('NotebookKernelSource'); }\n    static { this.BulkEditTitle = new MenuId('BulkEditTitle'); }\n    static { this.BulkEditContext = new MenuId('BulkEditContext'); }\n    static { this.TimelineItemContext = new MenuId('TimelineItemContext'); }\n    static { this.TimelineTitle = new MenuId('TimelineTitle'); }\n    static { this.TimelineTitleContext = new MenuId('TimelineTitleContext'); }\n    static { this.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu'); }\n    static { this.AccountsContext = new MenuId('AccountsContext'); }\n    static { this.SidebarTitle = new MenuId('SidebarTitle'); }\n    static { this.PanelTitle = new MenuId('PanelTitle'); }\n    static { this.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle'); }\n    static { this.AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader'); }\n    static { this.TerminalInstanceContext = new MenuId('TerminalInstanceContext'); }\n    static { this.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext'); }\n    static { this.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext'); }\n    static { this.TerminalTabContext = new MenuId('TerminalTabContext'); }\n    static { this.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext'); }\n    static { this.TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext'); }\n    static { this.WebviewContext = new MenuId('WebviewContext'); }\n    static { this.InlineCompletionsActions = new MenuId('InlineCompletionsActions'); }\n    static { this.InlineEditsActions = new MenuId('InlineEditsActions'); }\n    static { this.InlineEditActions = new MenuId('InlineEditActions'); }\n    static { this.NewFile = new MenuId('NewFile'); }\n    static { this.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar'); }\n    static { this.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar'); }\n    static { this.MergeBaseToolbar = new MenuId('MergeBaseToolbar'); }\n    static { this.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar'); }\n    static { this.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar'); }\n    static { this.InlineEditToolbar = new MenuId('InlineEditToolbar'); }\n    static { this.ChatContext = new MenuId('ChatContext'); }\n    static { this.ChatCodeBlock = new MenuId('ChatCodeblock'); }\n    static { this.ChatCompareBlock = new MenuId('ChatCompareBlock'); }\n    static { this.ChatMessageTitle = new MenuId('ChatMessageTitle'); }\n    static { this.ChatExecute = new MenuId('ChatExecute'); }\n    static { this.ChatExecuteSecondary = new MenuId('ChatExecuteSecondary'); }\n    static { this.ChatInputSide = new MenuId('ChatInputSide'); }\n    static { this.AccessibleView = new MenuId('AccessibleView'); }\n    static { this.MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar'); }\n    static { this.DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar'); }\n    static { this.DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar'); }\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static { this._all = new Map(); }\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return options?.renderShortTitle && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n        this.hideActions = hideActions;\n        this.menuKeybinding = menuKeybinding;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        let runArgs = [];\n        if (this._options?.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if (this._options?.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = []; // not using `DisposableStore` to reduce startup perf cost\n    const action = new ctor();\n    const { f1, menu, keybinding, ...command } = action.desc;\n    if (CommandsRegistry.getCommand(command.id)) {\n        throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n    }\n    // command\n    disposables.push(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        metadata: command.metadata,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n        }\n    }\n    else if (menu) {\n        disposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n    }\n    if (f1) {\n        disposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.push(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.push(KeybindingsRegistry.registerKeybindingRule({\n                ...item,\n                id: command.id,\n                when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n            }));\n        }\n    }\n    else if (keybinding) {\n        disposables.push(KeybindingsRegistry.registerKeybindingRule({\n            ...keybinding,\n            id: command.id,\n            when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n        }));\n    }\n    return {\n        dispose() {\n            dispose(disposables);\n        }\n    };\n}\n//#endregion\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 883, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, optionsOrTarget, targetOrPrimaryGroup, primaryGroupOrUndefined) {\n    let target;\n    let primaryGroup;\n    let groups;\n    if (Array.isArray(menu)) {\n        groups = menu;\n        target = optionsOrTarget;\n        primaryGroup = targetOrPrimaryGroup;\n    }\n    else {\n        const options = optionsOrTarget;\n        groups = menu.getActions(options);\n        target = targetOrPrimaryGroup;\n        primaryGroup = primaryGroupOrUndefined;\n    }\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, optionsOrTarget, targetOrPrimaryGroup, primaryGroupOrShouldInlineSubmenu, shouldInlineSubmenuOrUseSeparatorsInPrimaryActions, useSeparatorsInPrimaryActionsOrUndefined) {\n    let target;\n    let primaryGroup;\n    let shouldInlineSubmenu;\n    let useSeparatorsInPrimaryActions;\n    let groups;\n    if (Array.isArray(menu)) {\n        groups = menu;\n        target = optionsOrTarget;\n        primaryGroup = targetOrPrimaryGroup;\n        shouldInlineSubmenu = primaryGroupOrShouldInlineSubmenu;\n        useSeparatorsInPrimaryActions = shouldInlineSubmenuOrUseSeparatorsInPrimaryActions;\n    }\n    else {\n        const options = optionsOrTarget;\n        groups = menu.getActions(options);\n        target = targetOrPrimaryGroup;\n        primaryGroup = primaryGroupOrShouldInlineSubmenu;\n        shouldInlineSubmenu = shouldInlineSubmenuOrUseSeparatorsInPrimaryActions;\n        useSeparatorsInPrimaryActions = useSeparatorsInPrimaryActionsOrUndefined;\n    }\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, _options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: _options?.draggable, keybinding: _options?.keybinding, hoverDelegate: _options?.hoverDelegate });\n        this._options = _options;\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._accessibilityService = _accessibilityService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    async onClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        try {\n            await this.actionRunner.run(this._commandAction, this._context);\n        }\n        catch (err) {\n            this._notificationService.error(err);\n        }\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        if (this._menuItemAction.alt) {\n            let isMouseOver = false;\n            const updateAltState = () => {\n                const wantsAltCommand = !!this._menuItemAction.alt?.enabled &&\n                    (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey ||\n                    (this._altKey.keyStatus.shiftKey && isMouseOver));\n                if (wantsAltCommand !== this._wantsAltCommand) {\n                    this._wantsAltCommand = wantsAltCommand;\n                    this.updateLabel();\n                    this.updateTooltip();\n                    this.updateClass();\n                }\n            };\n            this._register(this._altKey.event(updateAltState));\n            this._register(addDisposableListener(container, 'mouseleave', _ => {\n                isMouseOver = false;\n                updateAltState();\n            }));\n            this._register(addDisposableListener(container, 'mouseenter', _ => {\n                isMouseOver = true;\n                updateAltState();\n            }));\n            updateAltState();\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && this._menuItemAction.alt?.enabled) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url\n            label.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light));\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.style.backgroundImage = '';\n                label.classList.remove('icon');\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService),\n    __param(7, IAccessibilityService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nexport class TextOnlyMenuEntryActionViewItem extends MenuEntryActionViewItem {\n    render(container) {\n        this.options.label = true;\n        this.options.icon = false;\n        super.render(container);\n        container.classList.add('text-only');\n        container.classList.toggle('use-comma', this._options?.useComma ?? false);\n    }\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const kb2 = TextOnlyMenuEntryActionViewItem._symbolPrintEnter(kb);\n            if (this._options?.conversational) {\n                this.label.textContent = localize({ key: 'content2', comment: ['A label with keybindg like \"ESC to dismiss\"'] }, '{1} to {0}', this._action.label, kb2);\n            }\n            else {\n                this.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, kb2);\n            }\n        }\n    }\n    static _symbolPrintEnter(kb) {\n        return kb.getLabel()\n            ?.replace(/\\benter\\b/gi, '\\u23CE')\n            .replace(/\\bEscape\\b/gi, 'Esc');\n    }\n}\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        const dropdownOptions = {\n            ...options,\n            menuAsChild: options?.menuAsChild ?? false,\n            classNames: options?.classNames ?? (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n            keybindingProvider: options?.keybindingProvider ?? (action => _keybindingService.lookupKeybinding(action.id))\n        };\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = options?.persistLastActionId ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = {\n            keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n            ...options,\n            menuAsChild: options?.menuAsChild ?? true,\n            classNames: options?.classNames ?? ['codicon', 'codicon-chevron-down'],\n            actionRunner: options?.actionRunner ?? new ActionRunner(),\n        };\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._register(this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        }));\n    }\n    update(lastAction) {\n        if (this._options?.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            async runAction(action, context) {\n                await action.run(undefined);\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        let defaultActionKeybinding;\n        if (this._options?.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                this._defaultAction.element?.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, { ...options, persistLastActionId: true });\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1450, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, _keybindingService, storageService) {\n        this._commandService = _commandService;\n        this._keybindingService = _keybindingService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n    }\n    getMenuActions(id, contextKeyService, options) {\n        const menu = new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n        const actions = menu.getActions(options);\n        menu.dispose();\n        return actions;\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IKeybindingService),\n    __param(2, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = class PersistedMenuHideState {\n    static { PersistedMenuHideState_1 = this; }\n    static { this._key = 'menu.hiddenCommands'; }\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(() => {\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        return this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`) ?? false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = this._data[menu.id]?.includes(commandId) ?? false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nclass MenuInfoSnapshot {\n    constructor(_id, _collectContextKeysForSubmenus) {\n        this._id = _id;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._menuGroups = [];\n        this._allMenuIds = new Set();\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get allMenuIds() {\n        return this._allMenuIds;\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._allMenuIds.clear();\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = this._sort(MenuRegistry.getMenuItems(this._id));\n        let group;\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys and submenu ids for eventing\n            this._collectContextKeysAndSubmenuIds(item);\n        }\n        this._allMenuIds.add(this._id);\n    }\n    _sort(menuItems) {\n        // no sorting needed in snapshot\n        return menuItems;\n    }\n    _collectContextKeysAndSubmenuIds(item) {\n        MenuInfoSnapshot._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfoSnapshot._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfoSnapshot._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeysAndSubmenuIds, this);\n            this._allMenuIds.add(item.submenu);\n        }\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n}\nlet MenuInfo = MenuInfo_1 = class MenuInfo extends MenuInfoSnapshot {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _keybindingService, _contextKeyService) {\n        super(_id, _collectContextKeysForSubmenus);\n        this._hiddenStates = _hiddenStates;\n        this._commandService = _commandService;\n        this._keybindingService = _keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this.refresh();\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            let activeActions;\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        const menuKeybinding = createConfigureKeybindingAction(this._commandService, this._keybindingService, item.command.id, item.when);\n                        (activeActions ??= []).push(new MenuItemAction(item.command, item.alt, options, menuHide, menuKeybinding, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._keybindingService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            (activeActions ??= []).push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions && activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    _sort(menuItems) {\n        return menuItems.sort(MenuInfo_1._compareMenuItems);\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = MenuInfo_1 = __decorate([\n    __param(3, ICommandService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, keybindingService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, keybindingService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            for (const id of this._menuInfo.allMenuIds) {\n                if (e.has(id)) {\n                    rebuildMenuSoon.schedule();\n                    break;\n                }\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\nexport function createConfigureKeybindingAction(commandService, keybindingService, commandId, when = undefined, enabled = true) {\n    return toAction({\n        id: `configureKeybinding/${commandId}`,\n        label: localize('configure keybinding', \"Configure Keybinding\"),\n        enabled,\n        run() {\n            // Only set the when clause when there is no keybinding\n            // It is possible that the action and the keybinding have different when clauses\n            const hasKeybinding = !!keybindingService.lookupKeybinding(commandId); // This may only be called inside the `run()` method as it can be expensive on startup. #210529\n            const whenValue = !hasKeybinding && when ? when.serialize() : undefined;\n            commandService.executeCommand('workbench.action.openGlobalKeybindings', `@command:${commandId}` + (whenValue ? ` +when:${whenValue}` : ''));\n        }\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1943, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener, getWindow } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToggleMenuAction, ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { createAndFillInActionBarActions } from './menuEntryActionViewItem.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { createConfigureKeybindingAction } from '../common/menuService.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, _keybindingService, _commandService, telemetryService) {\n        super(container, _contextMenuService, {\n            // defaults\n            getKeyBinding: (action) => _keybindingService.lookupKeybinding(action.id) ?? undefined,\n            // options (override defaults)\n            ..._options,\n            // mandatory (overide options)\n            allowContextMenu: true,\n            skipTelemetry: typeof _options?.telemetrySource === 'string',\n        });\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this._commandService = _commandService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        const telemetrySource = _options?.telemetrySource;\n        if (telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        this._sessionDisposables.clear();\n        const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (this._options?.hiddenItemStrategy !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (this._options?.hiddenItemStrategy !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (this._options?.overflowBehavior !== undefined) {\n            const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a?.id));\n            const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                count++;\n                if (exemptedIds.has(action.id)) {\n                    continue;\n                }\n                if (count >= maxItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        // coalesce turns Array<IAction|undefined> into IAction[]\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle and configure keybinding actions\n        if (toggleActions.length > 0 || primary.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                const event = new StandardMouseEvent(getWindow(this.getElement()), e);\n                const action = this.getItemAction(event.target);\n                if (!(action)) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                const primaryActions = [];\n                // -- Configure Keybinding Action --\n                if (action instanceof MenuItemAction && action.menuKeybinding) {\n                    primaryActions.push(action.menuKeybinding);\n                }\n                else if (!(action instanceof SubmenuItemAction || action instanceof ToggleMenuAction)) {\n                    // only enable the configure keybinding action for actions that support keybindings\n                    const supportsKeybindings = !!this._keybindingService.lookupKeybinding(action.id);\n                    primaryActions.push(createConfigureKeybindingAction(this._commandService, this._keybindingService, action.id, undefined, supportsKeybindings));\n                }\n                // -- Hide Actions --\n                if (toggleActions.length > 0) {\n                    let noHide = false;\n                    // last item cannot be hidden when using ignore strategy\n                    if (toggleActionsCheckedCount === 1 && this._options?.hiddenItemStrategy === 0 /* HiddenItemStrategy.Ignore */) {\n                        noHide = true;\n                        for (let i = 0; i < toggleActions.length; i++) {\n                            if (toggleActions[i].checked) {\n                                toggleActions[i] = toAction({\n                                    id: action.id,\n                                    label: action.label,\n                                    checked: true,\n                                    enabled: false,\n                                    run() { }\n                                });\n                                break; // there is only one\n                            }\n                        }\n                    }\n                    // add \"hide foo\" actions\n                    if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                        if (!action.hideActions) {\n                            // no context menu for MenuItemAction instances that support no hiding\n                            // those are fake actions and need to be cleaned up\n                            return;\n                        }\n                        primaryActions.push(action.hideActions.hide);\n                    }\n                    else {\n                        primaryActions.push(toAction({\n                            id: 'label',\n                            label: localize('hide', \"Hide\"),\n                            enabled: false,\n                            run() { }\n                        }));\n                    }\n                }\n                const actions = Separator.join(primaryActions, toggleActions);\n                // add \"Reset Menu\" action\n                if (this._options?.resetMenu && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                if (actions.length === 0) {\n                    return;\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => event,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: this._options?.contextMenu,\n                    menuActionOptions: { renderShortTitle: true, ...this._options?.menuOptions },\n                    skipTelemetry: typeof this._options?.telemetrySource === 'string',\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ICommandService),\n    __param(7, ITelemetryService)\n], WorkbenchToolBar);\nexport { WorkbenchToolBar };\n/**\n * A {@link WorkbenchToolBar workbench toolbar} that is purely driven from a {@link MenuId menu}-identifier.\n *\n * *Note* that Manual updates via `setActions` are NOT supported.\n */\nlet MenuWorkbenchToolBar = class MenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService) {\n        super(container, { resetMenu: menuId, ...options }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n        this._onDidChangeMenuItems = this._store.add(new Emitter());\n        this.onDidChangeMenuItems = this._onDidChangeMenuItems.event;\n        // update logic\n        const menu = this._store.add(menuService.createMenu(menuId, contextKeyService, { emitEventsForSubmenuChanges: true }));\n        const updateToolbar = () => {\n            const primary = [];\n            const secondary = [];\n            createAndFillInActionBarActions(menu, options?.menuOptions, { primary, secondary }, options?.toolbarOptions?.primaryGroup, options?.toolbarOptions?.shouldInlineSubmenu, options?.toolbarOptions?.useSeparatorsInPrimaryActions);\n            container.classList.toggle('has-no-actions', primary.length === 0 && secondary.length === 0);\n            super.setActions(primary, secondary);\n        };\n        this._store.add(menu.onDidChange(() => {\n            updateToolbar();\n            this._onDidChangeMenuItems.fire(this);\n        }));\n        updateToolbar();\n    }\n    /**\n     * @deprecated The WorkbenchToolBar does not support this method because it works with menus.\n     */\n    setActions() {\n        throw new BugIndicatingError('This toolbar is populated from a menu.');\n    }\n};\nMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ICommandService),\n    __param(8, ITelemetryService)\n], MenuWorkbenchToolBar);\nexport { MenuWorkbenchToolBar };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}