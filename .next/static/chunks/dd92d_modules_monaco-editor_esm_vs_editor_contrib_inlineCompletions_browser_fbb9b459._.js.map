{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/commandIds.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;AACvF,MAAM,wBAAwB;AAC9B,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineSuggestionHintsContentWidget_1;\nimport { h } from '../../../../../base/browser/dom.js';\nimport { ActionViewItem } from '../../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../../base/common/actions.js';\nimport { equals } from '../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../base/common/async.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedObservableWithCache, observableFromEvent } from '../../../../../base/common/observable.js';\nimport { derivedWithStore } from '../../../../../base/common/observableInternal/derived.js';\nimport { OS } from '../../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../../common/languages.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from '../controller/commandIds.js';\nimport { localize } from '../../../../../nls.js';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived(this, reader => {\n            const ghostText = this.model.read(reader)?.primaryGhostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, this.sessionPosition?.column ?? Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description setup content widget */\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidgetValue = derivedWithStore((reader, store) => {\n                const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.activeCommands));\n                editor.addContentWidget(contentWidget);\n                store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n                store.add(autorun(reader => {\n                    /** @description request explicit */\n                    const position = this.position.read(reader);\n                    if (!position) {\n                        return;\n                    }\n                    if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                        model.triggerExplicitly();\n                    }\n                }));\n                return contentWidget;\n            });\n            const hadPosition = derivedObservableWithCache(this, (reader, lastValue) => !!this.position.read(reader) || !!lastValue);\n            store.add(autorun(reader => {\n                if (hadPosition.read(reader)) {\n                    contentWidgetValue.read(reader);\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n    static { InlineSuggestionHintsContentWidget_1 = this; }\n    static { this._dropDownVisible = false; }\n    static get dropDownVisible() { return this._dropDownVisible; }\n    static { this.id = 0; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget_1.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div@toolBar'),\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                if (action instanceof MenuItemAction) {\n                    return instantiationService.createInstance(StatusBarViewItem, action, undefined);\n                }\n                if (action === this.availableSuggestionCountAction) {\n                    const a = new ActionViewItemWithClassName(undefined, action, { label: true, icon: false });\n                    a.setClass('availableSuggestionCount');\n                    return a;\n                }\n                return undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this.toolBar.setPrependedPrimaryActions([\n            this.previousAction,\n            this.availableSuggestionCountAction,\n            this.nextAction,\n        ]);\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget_1._dropDownVisible = e;\n        }));\n        this._register(autorun(reader => {\n            /** @description update position */\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun(reader => {\n            /** @description counts */\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description extra commands */\n            const extraCommands = this._extraCommands.read(reader);\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass ActionViewItemWithClassName extends ActionViewItem {\n    constructor() {\n        super(...arguments);\n        this._className = undefined;\n    }\n    setClass(className) {\n        this._className = className;\n    }\n    render(container) {\n        super.render(container);\n        if (this._className) {\n            container.classList.add(this._className);\n        }\n    }\n    updateTooltip() {\n        // NOOP, disable tooltip\n    }\n}\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = this._register(new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions }));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n    updateTooltip() {\n        // NOOP, disable tooltip\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService) {\n        super(container, { resetMenu: menuId, ...options2 }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this.prependedPrimaryActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, this.options2?.menuOptions, { primary, secondary }, this.options2?.toolbarOptions?.primaryGroup, this.options2?.toolbarOptions?.shouldInlineSubmenu, this.options2?.toolbarOptions?.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        primary.unshift(...this.prependedPrimaryActions);\n        this.setActions(primary, secondary);\n    }\n    setPrependedPrimaryActions(actions) {\n        if (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.prependedPrimaryActions = actions;\n        this.updateToolbar();\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ICommandService),\n    __param(8, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionContextKeys.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from '../../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../../base/common/strings.js';\nimport { CursorColumns } from '../../../../common/core/cursorColumns.js';\nimport { RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nexport class InlineCompletionContextKeys extends Disposable {\n    static { this.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\")); }\n    static { this.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\")); }\n    static { this.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\")); }\n    static { this.suppressSuggestions = new RawContextKey('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\")); }\n    constructor(contextKeyService, model) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.model = model;\n        this.inlineCompletionVisible = InlineCompletionContextKeys.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = InlineCompletionContextKeys.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.suppressSuggestions = InlineCompletionContextKeys.suppressSuggestions.bindTo(this.contextKeyService);\n        this._register(autorun(reader => {\n            /** @description update context key: inlineCompletionVisible, suppressSuggestions */\n            const model = this.model.read(reader);\n            const state = model?.state.read(reader);\n            const isInlineCompletionVisible = !!state?.inlineCompletion && state?.primaryGhostText !== undefined && !state?.primaryGhostText.isEmpty();\n            this.inlineCompletionVisible.set(isInlineCompletionVisible);\n            if (state?.primaryGhostText && state?.inlineCompletion) {\n                this.suppressSuggestions.set(state.inlineCompletion.inlineCompletion.source.inlineCompletions.suppressSuggestions);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update context key: inlineCompletionSuggestsIndentation, inlineCompletionSuggestsIndentationLessThanTabSize */\n            const model = this.model.read(reader);\n            let startsWithIndentation = false;\n            let startsWithIndentationLessThanTabSize = true;\n            const ghostText = model?.primaryGhostText.read(reader);\n            if (!!model?.selectedSuggestItem && ghostText && ghostText.parts.length > 0) {\n                const { column, lines } = ghostText.parts[0];\n                const firstLine = lines[0];\n                const indentationEndColumn = model.textModel.getLineIndentColumn(ghostText.lineNumber);\n                const inIndentation = column <= indentationEndColumn;\n                if (inIndentation) {\n                    let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                    if (firstNonWsIdx === -1) {\n                        firstNonWsIdx = firstLine.length - 1;\n                    }\n                    startsWithIndentation = firstNonWsIdx > 0;\n                    const tabSize = model.textModel.getOptions().tabSize;\n                    const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                    startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n                }\n            }\n            this.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n            this.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n        }));\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/ghostText.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../../../../base/common/arrays.js';\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { SingleTextEdit, TextEdit } from '../../../../common/core/textEdit.js';\nexport class GhostText {\n    constructor(lineNumber, parts) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.parts.length === other.parts.length &&\n            this.parts.every((part, index) => part.equals(other.parts[index]));\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = new TextEdit([\n            ...this.parts.map(p => new SingleTextEdit(Range.fromPositions(new Position(1, p.column)), p.lines.join('\\n'))),\n        ]).applyToString(cappedLineText);\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    get lineCount() {\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, text, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.text = text;\n        this.preview = preview;\n        this.lines = splitLines(this.text);\n    }\n    equals(other) {\n        return this.column === other.column &&\n            this.lines.length === other.lines.length &&\n            this.lines.every((line, index) => line === other.lines[index]);\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnRange, text, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnRange = columnRange;\n        this.text = text;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.text, false),\n        ];\n        this.newLines = splitLines(this.text);\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n    get lineCount() {\n        return this.newLines.length;\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.columnRange.equals(other.columnRange) &&\n            this.newLines.length === other.newLines.length &&\n            this.newLines.every((line, index) => line === other.newLines[index]) &&\n            this.additionalReservedLineCount === other.additionalReservedLineCount;\n    }\n}\nexport function ghostTextsOrReplacementsEqual(a, b) {\n    return equals(a, b, ghostTextOrReplacementEquals);\n}\nexport function ghostTextOrReplacementEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    if (a instanceof GhostText && b instanceof GhostText) {\n        return a.equals(b);\n    }\n    if (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n        return a.equals(b);\n    }\n    return false;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorunOpts } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\nexport class ColumnRange {\n    constructor(startColumn, endColumnExclusive) {\n        this.startColumn = startColumn;\n        this.endColumnExclusive = endColumnExclusive;\n        if (startColumn > endColumnExclusive) {\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\n        }\n    }\n    toRange(lineNumber) {\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\n    }\n    equals(other) {\n        return this.startColumn === other.startColumn\n            && this.endColumnExclusive === other.endColumnExclusive;\n    }\n}\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function addPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n}\nexport function subtractPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber - pos2.lineNumber + 1, pos1.lineNumber - pos2.lineNumber === 0 ? pos1.column - pos2.column + 1 : pos1.column);\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;;AAC9F;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA,MAAM,QAAQ,EAAE;AACT,SAAS;IACZ,OAAO;AACX;AACO,MAAM;IACT,YAAY,WAAW,EAAE,kBAAkB,CAAE;QACzC,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,kBAAkB,GAAG;QAC1B,IAAI,cAAc,oBAAoB;YAClC,MAAM,IAAI,4KAAA,CAAA,qBAAkB,CAAC,CAAC,YAAY,EAAE,YAAY,oCAAoC,EAAE,oBAAoB;QACtH;IACJ;IACA,QAAQ,UAAU,EAAE;QAChB,OAAO,IAAI,qLAAA,CAAA,QAAK,CAAC,YAAY,IAAI,CAAC,WAAW,EAAE,YAAY,IAAI,CAAC,kBAAkB;IACtF;IACA,OAAO,KAAK,EAAE;QACV,OAAO,IAAI,CAAC,WAAW,KAAK,MAAM,WAAW,IACtC,IAAI,CAAC,kBAAkB,KAAK,MAAM,kBAAkB;IAC/D;AACJ;AACO,SAAS,2BAA2B,MAAM,EAAE,WAAW;IAC1D,MAAM,IAAI,IAAI,+KAAA,CAAA,kBAAe;IAC7B,MAAM,wBAAwB,OAAO,2BAA2B;IAChE,EAAE,GAAG,CAAC,CAAA,GAAA,mMAAA,CAAA,cAAW,AAAD,EAAE;QAAE,WAAW,IAAM,CAAC,uBAAuB,EAAE,YAAY,SAAS,EAAE;IAAC,GAAG,CAAA;QACtF,MAAM,IAAI,YAAY,IAAI,CAAC;QAC3B,sBAAsB,GAAG,CAAC;IAC9B;IACA,EAAE,GAAG,CAAC;QACF,SAAS;YACL,sBAAsB,KAAK;QAC/B;IACJ;IACA,OAAO;AACX;AACO,SAAS,aAAa,IAAI,EAAE,IAAI;IACnC,OAAO,IAAI,wLAAA,CAAA,WAAQ,CAAC,KAAK,UAAU,GAAG,KAAK,UAAU,GAAG,GAAG,KAAK,UAAU,KAAK,IAAI,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM;AAClI;AACO,SAAS,kBAAkB,IAAI,EAAE,IAAI;IACxC,OAAO,IAAI,wLAAA,CAAA,WAAQ,CAAC,KAAK,UAAU,GAAG,KAAK,UAAU,GAAG,GAAG,KAAK,UAAU,GAAG,KAAK,UAAU,KAAK,IAAI,KAAK,MAAM,GAAG,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM;AACpJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/ghostTextView.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../../base/common/observable.js';\nimport * as strings from '../../../../../base/common/strings.js';\nimport './ghostTextView.css';\nimport { applyFontInfo } from '../../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../../common/config/editorOptions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { StringBuilder } from '../../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../../common/model.js';\nimport { LineTokens } from '../../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from '../model/ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from '../utils.js';\nexport const GHOST_TEXT_DESCRIPTION = 'ghost-text';\nlet GhostTextView = class GhostTextView extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue(this, false);\n        this.currentTextModel = observableFromEvent(this, this.editor.onDidChangeModel, () => /** @description editor.model */ this.editor.getModel());\n        this.uiState = derived(this, reader => {\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, GHOST_TEXT_DESCRIPTION);\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived(this, reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: GHOST_TEXT_DESCRIPTION,\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\n            /** @description lines */\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextView = __decorate([\n    __param(2, ILanguageService)\n], GhostTextView);\nexport { GhostTextView };\nexport class AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(33 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(118 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(100 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(95 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(51 /* EditorOption.fontLigatures */)\n            || e.hasChanged(50 /* EditorOption.fontInfo */)\n            || e.hasChanged(67 /* EditorOption.lineHeight */)));\n        this._register(autorun(reader => {\n            /** @description update view zone */\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(33 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(118 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(95 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(51 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(50 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(67 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nexport const ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/provideInlineCompletions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../../base/common/map.js';\nimport { onUnexpectedExternalError } from '../../../../../base/common/errors.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { SingleTextEdit } from '../../../../common/core/textEdit.js';\nimport { getReadonlyEmptyArray } from '../utils.js';\nimport { SnippetParser, Text } from '../../../snippet/browser/snippetParser.js';\nexport async function provideInlineCompletions(registry, positionOrRange, model, context, token = CancellationToken.None, languageConfigurationService) {\n    // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n    const defaultReplaceRange = positionOrRange instanceof Position ? getDefaultRange(positionOrRange, model) : positionOrRange;\n    const providers = registry.all(model);\n    const multiMap = new SetMap();\n    for (const provider of providers) {\n        if (provider.groupId) {\n            multiMap.add(provider.groupId, provider);\n        }\n    }\n    function getPreferredProviders(provider) {\n        if (!provider.yieldsToGroupIds) {\n            return [];\n        }\n        const result = [];\n        for (const groupId of provider.yieldsToGroupIds || []) {\n            const providers = multiMap.get(groupId);\n            for (const p of providers) {\n                result.push(p);\n            }\n        }\n        return result;\n    }\n    const states = new Map();\n    const seen = new Set();\n    function findPreferredProviderCircle(provider, stack) {\n        stack = [...stack, provider];\n        if (seen.has(provider)) {\n            return stack;\n        }\n        seen.add(provider);\n        try {\n            const preferred = getPreferredProviders(provider);\n            for (const p of preferred) {\n                const c = findPreferredProviderCircle(p, stack);\n                if (c) {\n                    return c;\n                }\n            }\n        }\n        finally {\n            seen.delete(provider);\n        }\n        return undefined;\n    }\n    function processProvider(provider) {\n        const state = states.get(provider);\n        if (state) {\n            return state;\n        }\n        const circle = findPreferredProviderCircle(provider, []);\n        if (circle) {\n            onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n        }\n        const deferredPromise = new DeferredPromise();\n        states.set(provider, deferredPromise.p);\n        (async () => {\n            if (!circle) {\n                const preferred = getPreferredProviders(provider);\n                for (const p of preferred) {\n                    const result = await processProvider(p);\n                    if (result && result.items.length > 0) {\n                        // Skip provider\n                        return undefined;\n                    }\n                }\n            }\n            try {\n                if (positionOrRange instanceof Position) {\n                    const completions = await provider.provideInlineCompletions(model, positionOrRange, context, token);\n                    return completions;\n                }\n                else {\n                    const completions = await provider.provideInlineEdits?.(model, positionOrRange, context, token);\n                    return completions;\n                }\n            }\n            catch (e) {\n                onUnexpectedExternalError(e);\n                return undefined;\n            }\n        })().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\n        return deferredPromise.p;\n    }\n    const providerResults = await Promise.all(providers.map(async (provider) => ({ provider, completions: await processProvider(provider) })));\n    const itemsByHash = new Map();\n    const lists = [];\n    for (const result of providerResults) {\n        const completions = result.completions;\n        if (!completions) {\n            continue;\n        }\n        const list = new InlineCompletionList(completions, result.provider);\n        lists.push(list);\n        for (const item of completions.items) {\n            const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n            itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n        }\n    }\n    return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens?.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/singleTextEdit.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../../base/common/diff/diff.js';\nimport { commonPrefixLength, getLeadingWhitespace } from '../../../../../base/common/strings.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextLength } from '../../../../common/core/textLength.js';\nimport { SingleTextEdit } from '../../../../common/core/textEdit.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function singleTextRemoveCommonPrefix(edit, model, validModelRange) {\n    const modelRange = validModelRange ? edit.range.intersectRanges(validModelRange) : edit.range;\n    if (!modelRange) {\n        return edit;\n    }\n    const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\n    const commonPrefixLen = commonPrefixLength(valueToReplace, edit.text);\n    const start = TextLength.ofText(valueToReplace.substring(0, commonPrefixLen)).addToPosition(edit.range.getStartPosition());\n    const text = edit.text.substring(commonPrefixLen);\n    const range = Range.fromPositions(start, edit.range.getEndPosition());\n    return new SingleTextEdit(range, text);\n}\nexport function singleTextEditAugments(edit, base) {\n    // The augmented completion must replace the base range, but can replace even more\n    return edit.text.startsWith(base.text) && rangeExtends(edit.range, base.range);\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function computeGhostText(edit, model, mode, cursorPosition, previewSuffixLength = 0) {\n    let e = singleTextRemoveCommonPrefix(edit, model);\n    if (e.range.endLineNumber !== e.range.startLineNumber) {\n        // This edit might span multiple lines, but the first lines must be a common prefix.\n        return undefined;\n    }\n    const sourceLine = model.getLineContent(e.range.startLineNumber);\n    const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = e.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = getLeadingWhitespace(e.text).length;\n        const replacedIndentation = sourceLine.substring(e.range.startColumn - 1, sourceIndentationLength);\n        const [startPosition, endPosition] = [e.range.getStartPosition(), e.range.getEndPosition()];\n        const newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n            ? startPosition.delta(0, replacedIndentation.length)\n            : endPosition;\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n        const suggestionWithoutIndentationChange = e.text.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? e.text.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : e.text.substring(suggestionAddedIndentationLength);\n        e = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n    }\n    // This is a single line string\n    const valueToBeReplaced = model.getValueInRange(e.range);\n    const changes = cachingDiff(valueToBeReplaced, e.text);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = e.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = e.text.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = e.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === e.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = e.text.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = e.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            parts.push(new GhostTextPart(insertColumn, nonPreviewText, false));\n        }\n        if (italicText.length > 0) {\n            parts.push(new GhostTextPart(insertColumn, italicText, true));\n        }\n    }\n    return new GhostText(lineNumber, parts);\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if (lastRequest?.originalValue === originalValue && lastRequest?.newValue === newValue) {\n        return lastRequest?.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1447, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsSource.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { equalsIfDefined, itemEquals } from '../../../../../base/common/equals.js';\nimport { matchesSubString } from '../../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { derivedOpts, disposableObservableValue, transaction } from '../../../../../base/common/observable.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { SingleTextEdit } from '../../../../common/core/textEdit.js';\nimport { TextLength } from '../../../../common/core/textLength.js';\nimport { InlineCompletionTriggerKind } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nimport { singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if (this._updateOperation.value?.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if (target.get()?.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (async () => {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                await wait(this._debounceValue.get(this.textModel), source.token);\n            }\n            if (source.token.isCancellationRequested || this._store.isDisposed || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = await provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this._store.isDisposed || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                /** @description Update completions with provider result */\n                target.set(completions, tx);\n            });\n            return true;\n        })();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        if (this._updateOperation.value?.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equalsIfDefined(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, itemEquals())\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, _textModel, _versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this._textModel = _textModel;\n        this._versionId = _versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        const ids = _textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._textModel, this._versionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            setTimeout(() => {\n                // To fix https://github.com/microsoft/vscode/issues/188348\n                if (!this._textModel.isDisposed()) {\n                    // This is just cleanup. It's ok if it happens with a delay.\n                    this._textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n                }\n            }, 0);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this._textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._textModel, this._versionId));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        return this.inlineCompletion.source.inlineCompletions.enableForwardStability ?? false;\n    }\n    constructor(inlineCompletion, decorationId, _textModel, _modelVersion) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this._textModel = _textModel;\n        this._modelVersion = _modelVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._updatedRange = derivedOpts({ owner: this, equalsFn: Range.equalsRange }, reader => {\n            this._modelVersion.read(reader);\n            return this._textModel.getDecorationRange(this.decorationId);\n        });\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._updatedRange.read(reader) ?? emptyRange);\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._updatedRange.read(reader) ?? emptyRange, this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = singleTextRemoveCommonPrefix(this._toFilterTextReplacement(reader), model);\n        const updatedRange = this._updatedRange.read(reader);\n        if (!updatedRange\n            || !this.inlineCompletion.range.getStartPosition().equals(updatedRange.getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        // We might consider comparing by .toLowerText, but this requires GhostTextReplacement\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */);\n        const filterText = minimizedReplacement.text;\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const updatedRange = this._updatedRange.read(undefined);\n        const result = !!updatedRange\n            && updatedRange.containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && TextLength.ofRange(updatedRange).isGreaterThanOrEqualTo(TextLength.ofRange(this.inlineCompletion.range));\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._updatedRange.read(reader) ?? emptyRange, this.inlineCompletion.filterText);\n    }\n}\nconst emptyRange = new Range(1, 1, 1, 1);\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;AAU9F;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA,IAAI,aAAa,AAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAK,SAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;IACjF,IAAI,IAAI,UAAU,MAAM,EAAE,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,wBAAwB,CAAC,QAAQ,OAAO,MAAM;IAC3H,IAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,QAAQ,KAAK,YAAY,IAAI,QAAQ,QAAQ,CAAC,YAAY,QAAQ,KAAK;SACpH,IAAK,IAAI,IAAI,WAAW,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK,IAAI,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,QAAQ,KAAK,KAAK,EAAE,QAAQ,IAAI,KAAK;IAChJ,OAAO,IAAI,KAAK,KAAK,OAAO,cAAc,CAAC,QAAQ,KAAK,IAAI;AAChE;AACA,IAAI,UAAU,AAAC,IAAI,IAAI,IAAI,CAAC,OAAO,IAAK,SAAU,UAAU,EAAE,SAAS;IACnE,OAAO,SAAU,MAAM,EAAE,GAAG;QAAI,UAAU,QAAQ,KAAK;IAAa;AACxE;;;;;;;;;;;;;;AAcA,IAAI,0BAA0B,MAAM,gCAAgC,+KAAA,CAAA,aAAU;IAC1E,YAAY,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,uBAAuB,EAAE,4BAA4B,CAAE;QACrG,KAAK;QACL,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,uBAAuB,GAAG;QAC/B,IAAI,CAAC,4BAA4B,GAAG;QACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,+KAAA,CAAA,oBAAiB;QAC5D,IAAI,CAAC,iBAAiB,GAAG,CAAA,GAAA,gMAAA,CAAA,4BAAyB,AAAD,EAAE,qBAAqB;QACxE,IAAI,CAAC,8BAA8B,GAAG,CAAA,GAAA,gMAAA,CAAA,4BAAyB,AAAD,EAAE,kCAAkC;QAClG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;YAC7C,IAAI,CAAC,gBAAgB,CAAC,KAAK;QAC/B;IACJ;IACA,MAAM,QAAQ,EAAE,OAAO,EAAE,sBAAsB,EAAE;QAC7C,MAAM,UAAU,IAAI,cAAc,UAAU,SAAS,IAAI,CAAC,SAAS,CAAC,YAAY;QAChF,MAAM,SAAS,QAAQ,sBAAsB,GAAG,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,iBAAiB;QAC5G,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,UAAU,UAAU;YACzD,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO;QAC9C,OACK,IAAI,OAAO,GAAG,IAAI,QAAQ,UAAU,UAAU;YAC/C,OAAO,QAAQ,OAAO,CAAC;QAC3B;QACA,MAAM,gBAAgB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK;QACnD,IAAI,CAAC,gBAAgB,CAAC,KAAK;QAC3B,MAAM,SAAS,IAAI,kLAAA,CAAA,0BAAuB;QAC1C,MAAM,UAAU,CAAC;YACb,MAAM,iBAAiB,iBAAiB,QAAQ,WAAW,KAAK,iLAAA,CAAA,8BAA2B,CAAC,SAAS;YACrG,IAAI,gBAAgB;gBAChB,+BAA+B;gBAC/B,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,KAAK;YACpE;YACA,IAAI,OAAO,KAAK,CAAC,uBAAuB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,OAAO,QAAQ,SAAS,EAAE;gBACvH,OAAO;YACX;YACA,MAAM,YAAY,IAAI;YACtB,MAAM,qBAAqB,MAAM,CAAA,GAAA,0OAAA,CAAA,2BAAwB,AAAD,EAAE,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,EAAE,UAAU,IAAI,CAAC,SAAS,EAAE,SAAS,OAAO,KAAK,EAAE,IAAI,CAAC,4BAA4B;YACpM,IAAI,OAAO,KAAK,CAAC,uBAAuB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,OAAO,QAAQ,SAAS,EAAE;gBACvH,OAAO;YACX;YACA,MAAM,UAAU,IAAI;YACpB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,OAAO,KAAK,UAAU,OAAO;YAChF,MAAM,cAAc,IAAI,0BAA0B,oBAAoB,SAAS,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS;YAC7G,IAAI,wBAAwB;gBACxB,MAAM,qBAAqB,uBAAuB,kBAAkB,CAAC;gBACrE,IAAI,uBAAuB,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,mBAAmB,GAAG,CAAC,qBAAqB;oBAC7G,YAAY,OAAO,CAAC,uBAAuB,gBAAgB,EAAE,mBAAmB,KAAK,EAAE;gBAC3F;YACJ;YACA,IAAI,CAAC,gBAAgB,CAAC,KAAK;YAC3B,CAAA,GAAA,gMAAA,CAAA,cAAW,AAAD,EAAE,CAAA;gBACR,yDAAyD,GACzD,OAAO,GAAG,CAAC,aAAa;YAC5B;YACA,OAAO;QACX,CAAC;QACD,MAAM,kBAAkB,IAAI,gBAAgB,SAAS,QAAQ;QAC7D,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG;QAC9B,OAAO;IACX;IACA,MAAM,EAAE,EAAE;QACN,IAAI,CAAC,gBAAgB,CAAC,KAAK;QAC3B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAW;QACtC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,WAAW;IACvD;IACA,oCAAoC,EAAE,EAAE;QACpC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,QAAQ,wBAAwB;YACrE,IAAI,CAAC,gBAAgB,CAAC,KAAK;QAC/B;QACA,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,WAAW;IACvD;IACA,eAAe;QACX,IAAI,CAAC,gBAAgB,CAAC,KAAK;IAC/B;AACJ;AACA,0BAA0B,WAAW;IACjC,QAAQ,GAAG,oMAAA,CAAA,2BAAwB;IACnC,QAAQ,GAAG,kNAAA,CAAA,gCAA6B;CAC3C,EAAE;;AAEH,SAAS,KAAK,EAAE,EAAE,iBAAiB;IAC/B,OAAO,IAAI,QAAQ,CAAA;QACf,IAAI,IAAI;QACR,MAAM,SAAS,WAAW;YACtB,IAAI,GAAG;gBACH,EAAE,OAAO;YACb;YACA;QACJ,GAAG;QACH,IAAI,mBAAmB;YACnB,IAAI,kBAAkB,uBAAuB,CAAC;gBAC1C,aAAa;gBACb,IAAI,GAAG;oBACH,EAAE,OAAO;gBACb;gBACA;YACJ;QACJ;IACJ;AACJ;AACA,MAAM;IACF,YAAY,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAE;QACtC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,SAAS,GAAG;IACrB;IACA,UAAU,KAAK,EAAE;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,QAAQ,KACnC,CAAA,GAAA,4KAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,MAAM,OAAO,CAAC,sBAAsB,EAAE,CAAA,GAAA,4KAAA,CAAA,aAAU,AAAD,QACpG,CAAC,MAAM,OAAO,CAAC,WAAW,KAAK,iLAAA,CAAA,8BAA2B,CAAC,SAAS,IAChE,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,iLAAA,CAAA,8BAA2B,CAAC,QAAQ,KACrE,IAAI,CAAC,SAAS,KAAK,MAAM,SAAS;IAC7C;AACJ;AACA,MAAM;IACF,YAAY,OAAO,EAAE,uBAAuB,EAAE,OAAO,CAAE;QACnD,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,uBAAuB,GAAG;QAC/B,IAAI,CAAC,OAAO,GAAG;IACnB;IACA,UAAU;QACN,IAAI,CAAC,uBAAuB,CAAC,MAAM;IACvC;AACJ;AACO,MAAM;IACT,IAAI,oBAAoB;QAAE,OAAO,IAAI,CAAC,kBAAkB;IAAE;IAC1D,YAAY,8BAA8B,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,CAAE;QACzE,IAAI,CAAC,8BAA8B,GAAG;QACtC,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,+BAA+B,GAAG,EAAE;QACzC,MAAM,MAAM,WAAW,gBAAgB,CAAC,EAAE,EAAE,+BAA+B,WAAW,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC;gBAC7F,OAAO,EAAE,KAAK;gBACd,SAAS;oBACL,aAAa;gBACjB;YACJ,CAAC;QACD,IAAI,CAAC,kBAAkB,GAAG,+BAA+B,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,QAAU,IAAI,iCAAiC,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU;IAC/K;IACA,QAAQ;QACJ,IAAI,CAAC,SAAS;QACd,OAAO,IAAI;IACf;IACA,UAAU;QACN,IAAI,CAAC,SAAS;QACd,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG;YACtB,WAAW;gBACP,2DAA2D;gBAC3D,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI;oBAC/B,4DAA4D;oBAC5D,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,YAAY,GAAG,EAAE;gBACzF;YACJ,GAAG;YACH,IAAI,CAAC,8BAA8B,CAAC,OAAO;YAC3C,KAAK,MAAM,KAAK,IAAI,CAAC,+BAA+B,CAAE;gBAClD,EAAE,MAAM,CAAC,SAAS;YACtB;QACJ;IACJ;IACA,QAAQ,gBAAgB,EAAE,KAAK,EAAE,cAAc,EAAE;QAC7C,IAAI,gBAAgB;YAChB,iBAAiB,MAAM,CAAC,MAAM;QAClC;QACA,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,EAAE;YAAC;gBACzC;gBACA,SAAS;oBACL,aAAa;gBACjB;YACJ;SAAE,CAAC,CAAC,EAAE;QACV,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,iCAAiC,kBAAkB,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3H,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC;IAC9C;AACJ;AACO,MAAM;IACT,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,iBAAiB,CAAC,sBAAsB,IAAI;IACpF;IACA,YAAY,gBAAgB,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,CAAE;QACnE,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,SAAS,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAChC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,gBAAgB,GAAG,QAAQ;SAC1D;QACD,IAAI,CAAC,aAAa,GAAG,CAAA,GAAA,mMAAA,CAAA,cAAW,AAAD,EAAE;YAAE,OAAO,IAAI;YAAE,UAAU,qLAAA,CAAA,QAAK,CAAC,WAAW;QAAC,GAAG,CAAA;YAC3E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACxB,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY;QAC/D;IACJ;IACA,mBAAmB,MAAM,EAAE;QACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW;IAC9E;IACA,iBAAiB,MAAM,EAAE;QACrB,OAAO,IAAI,wLAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,YAAY,IAAI,CAAC,gBAAgB,CAAC,UAAU;IAC7G;IACA,UAAU,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE;QACrC,MAAM,uBAAuB,CAAA,GAAA,gOAAA,CAAA,+BAA4B,AAAD,EAAE,IAAI,CAAC,wBAAwB,CAAC,SAAS;QACjG,MAAM,eAAe,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAC7C,IAAI,CAAC,gBACE,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAC,aAAa,gBAAgB,OACpF,eAAe,UAAU,KAAK,qBAAqB,KAAK,CAAC,eAAe,EAAE;YAC7E,OAAO;QACX;QACA,sFAAsF;QACtF,MAAM,gBAAgB,MAAM,eAAe,CAAC,qBAAqB,KAAK,EAAE,EAAE,0BAA0B;QACpG,MAAM,aAAa,qBAAqB,IAAI;QAC5C,MAAM,iBAAiB,KAAK,GAAG,CAAC,GAAG,eAAe,MAAM,GAAG,qBAAqB,KAAK,CAAC,WAAW;QACjG,IAAI,mBAAmB,WAAW,SAAS,CAAC,GAAG;QAC/C,IAAI,kBAAkB,WAAW,SAAS,CAAC;QAC3C,IAAI,sBAAsB,cAAc,SAAS,CAAC,GAAG;QACrD,IAAI,qBAAqB,cAAc,SAAS,CAAC;QACjD,MAAM,sBAAsB,MAAM,mBAAmB,CAAC,qBAAqB,KAAK,CAAC,eAAe;QAChG,IAAI,qBAAqB,KAAK,CAAC,WAAW,IAAI,qBAAqB;YAC/D,qBAAqB;YACrB,sBAAsB,oBAAoB,SAAS;YACnD,IAAI,oBAAoB,MAAM,KAAK,GAAG;gBAClC,qBAAqB,mBAAmB,SAAS;YACrD;YACA,mBAAmB,iBAAiB,SAAS;YAC7C,IAAI,iBAAiB,MAAM,KAAK,GAAG;gBAC/B,kBAAkB,gBAAgB,SAAS;YAC/C;QACJ;QACA,OAAO,iBAAiB,UAAU,CAAC,wBAC5B,CAAC,CAAC,CAAA,GAAA,6KAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB;IAClD;IACA,YAAY,KAAK,EAAE,QAAQ,EAAE;QACzB,MAAM,eAAe,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAC7C,MAAM,SAAS,CAAC,CAAC,gBACV,aAAa,gBAAgB,CAAC,aAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,UAAU,cAChC,0LAAA,CAAA,aAAU,CAAC,OAAO,CAAC,cAAc,sBAAsB,CAAC,0LAAA,CAAA,aAAU,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK;QAC7G,OAAO;IACX;IACA,yBAAyB,MAAM,EAAE;QAC7B,OAAO,IAAI,wLAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,YAAY,IAAI,CAAC,gBAAgB,CAAC,UAAU;IAC7G;AACJ;AACA,MAAM,aAAa,IAAI,qLAAA,CAAA,QAAK,CAAC,GAAG,GAAG,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1740, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { compareBy, Permutation } from '../../../../../base/common/arrays.js';\nimport { mapFindFirst } from '../../../../../base/common/arraysFind.js';\nimport { itemsEquals } from '../../../../../base/common/equals.js';\nimport { BugIndicatingError, onUnexpectedError, onUnexpectedExternalError } from '../../../../../base/common/errors.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedHandleChanges, derivedOpts, observableSignal, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../../base/common/observable.js';\nimport { commonPrefixLength, splitLinesIncludeSeparators } from '../../../../../base/common/strings.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { EditOperation } from '../../../../common/core/editOperation.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { SingleTextEdit, TextEdit } from '../../../../common/core/textEdit.js';\nimport { TextLength } from '../../../../common/core/textLength.js';\nimport { InlineCompletionTriggerKind } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText, ghostTextOrReplacementEquals, ghostTextsOrReplacementsEqual } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { computeGhostText, singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nimport { addPositions, subtractPositions } from '../utils.js';\nimport { SnippetController2 } from '../../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    constructor(textModel, selectedSuggestItem, _textModelVersionId, _positions, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this._textModelVersionId = _textModelVersionId;\n        this._positions = _positions;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this._textModelVersionId, this._debounceValue));\n        this._isActive = observableValue(this, false);\n        this._forceUpdateExplicitlySignal = observableSignal(this);\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue(this, undefined);\n        this._primaryPosition = derived(this, reader => this._positions.read(reader)[0] ?? new Position(1, 1));\n        this._isAcceptingPartially = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletionsPromise = derivedHandleChanges({\n            owner: this,\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                /** @description fetch inline completions */\n                if (ctx.didChange(this._textModelVersionId) && this._preserveCurrentCompletionReasons.has(this._getReason(ctx.change))) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n                    changeSummary.inlineCompletionTriggerKind = InlineCompletionTriggerKind.Explicit;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdateExplicitlySignal.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this._textModelVersionId.read(reader); // Refetch on text change\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (!inlineCompletions || suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this._primaryPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem?.toSelectedSuggestionInfo(),\n            };\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || itemToPreserveCandidate?.forwardStable\n                ? itemToPreserveCandidate : undefined;\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derivedOpts({ owner: this, equalsFn: itemsEquals() }, reader => {\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this._primaryPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived(this, (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived(this, (reader) => {\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.activeCommands = derivedOpts({ owner: this, equalsFn: itemsEquals() }, r => this.selectedInlineCompletion.read(r)?.inlineCompletion.source.inlineCompletions.commands ?? []);\n        this.lastTriggerKind = this._source.inlineCompletions.map(this, v => v?.request.context.triggerKind);\n        this.inlineCompletionsCount = derived(this, reader => {\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derivedOpts({\n            owner: this,\n            equalsFn: (a, b) => {\n                if (!a || !b) {\n                    return a === b;\n                }\n                return ghostTextsOrReplacementsEqual(a.ghostTexts, b.ghostTexts)\n                    && a.inlineCompletion === b.inlineCompletion\n                    && a.suggestItem === b.suggestItem;\n            }\n        }, (reader) => {\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestCompletionEdit = singleTextRemoveCommonPrefix(suggestItem.toSingleTextEdit(), model);\n                const augmentation = this._computeAugmentation(suggestCompletionEdit, reader);\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentation) {\n                    return undefined;\n                }\n                const fullEdit = augmentation?.edit ?? suggestCompletionEdit;\n                const fullEditPreviewLength = augmentation ? augmentation.edit.text.length - suggestCompletionEdit.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const positions = this._positions.read(reader);\n                const edits = [fullEdit, ...getSecondaryEdits(this.textModel, positions, fullEdit)];\n                const ghostTexts = edits\n                    .map((edit, idx) => computeGhostText(edit, model, mode, positions[idx], fullEditPreviewLength))\n                    .filter(isDefined);\n                const primaryGhostText = ghostTexts[0] ?? new GhostText(fullEdit.range.endLineNumber, []);\n                return { edits, primaryGhostText, ghostTexts, inlineCompletion: augmentation?.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const inlineCompletion = this.selectedInlineCompletion.read(reader);\n                if (!inlineCompletion) {\n                    return undefined;\n                }\n                const replacement = inlineCompletion.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const positions = this._positions.read(reader);\n                const edits = [replacement, ...getSecondaryEdits(this.textModel, positions, replacement)];\n                const ghostTexts = edits\n                    .map((edit, idx) => computeGhostText(edit, model, mode, positions[idx], 0))\n                    .filter(isDefined);\n                if (!ghostTexts[0]) {\n                    return undefined;\n                }\n                return { edits, primaryGhostText: ghostTexts[0], ghostTexts, inlineCompletion, suggestItem: undefined };\n            }\n        });\n        this.ghostTexts = derivedOpts({ owner: this, equalsFn: ghostTextsOrReplacementsEqual }, reader => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostTexts;\n        });\n        this.primaryGhostText = derivedOpts({ owner: this, equalsFn: ghostTextOrReplacementEquals }, reader => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v?.primaryGhostText;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletionsPromise));\n        let lastItem = undefined;\n        this._register(autorun(reader => {\n            /** @description call handleItemDidShow */\n            const item = this.state.read(reader);\n            const completion = item?.inlineCompletion;\n            if (completion?.semanticId !== lastItem?.semanticId) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    src.provider.handleItemDidShow?.(src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    _getReason(e) {\n        if (e?.isUndoing) {\n            return VersionIdChangeReason.Undo;\n        }\n        if (e?.isRedoing) {\n            return VersionIdChangeReason.Redo;\n        }\n        if (this.isAcceptingPartially) {\n            return VersionIdChangeReason.AcceptWord;\n        }\n        return VersionIdChangeReason.Other;\n    }\n    async trigger(tx) {\n        this._isActive.set(true, tx);\n        await this._fetchInlineCompletionsPromise.get();\n    }\n    async triggerExplicitly(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(true, tx);\n            this._forceUpdateExplicitlySignal.trigger(tx);\n        });\n        await this._fetchInlineCompletionsPromise.get();\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _computeAugmentation(suggestCompletion, reader) {\n        const model = this.textModel;\n        const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n        const candidateInlineCompletions = suggestWidgetInlineCompletions\n            ? suggestWidgetInlineCompletions.inlineCompletions\n            : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n        const augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n            let r = completion.toSingleTextEdit(reader);\n            r = singleTextRemoveCommonPrefix(r, model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n            return singleTextEditAugments(r, suggestCompletion) ? { completion, edit: r } : undefined;\n        });\n        return augmentedCompletion;\n    }\n    async _deltaSelectedInlineCompletionIndex(delta) {\n        await this.triggerExplicitly();\n        const completions = this._filteredInlineCompletionItems.get() || [];\n        if (completions.length > 0) {\n            const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n            this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n        }\n        else {\n            this._selectedInlineCompletionId.set(undefined, undefined);\n        }\n    }\n    async next() {\n        await this._deltaSelectedInlineCompletionIndex(1);\n    }\n    async previous() {\n        await this._deltaSelectedInlineCompletionIndex(-1);\n    }\n    async accept(editor) {\n        if (editor.getModel() !== this.textModel) {\n            throw new BugIndicatingError();\n        }\n        const state = this.state.get();\n        if (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n            return;\n        }\n        const completion = state.inlineCompletion.toInlineCompletion(undefined);\n        if (completion.command) {\n            // Make sure the completion list will not be disposed.\n            completion.source.addRef();\n        }\n        editor.pushUndoStop();\n        if (completion.snippetInfo) {\n            editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replace(completion.range, ''),\n                ...completion.additionalTextEdits\n            ]);\n            editor.setPosition(completion.snippetInfo.range.getStartPosition(), 'inlineCompletionAccept');\n            SnippetController2.get(editor)?.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n        }\n        else {\n            const edits = state.edits;\n            const selections = getEndPositionsAfterApplying(edits).map(p => Selection.fromPositions(p));\n            editor.executeEdits('inlineSuggestion.accept', [\n                ...edits.map(edit => EditOperation.replace(edit.range, edit.text)),\n                ...completion.additionalTextEdits\n            ]);\n            editor.setSelections(selections, 'inlineCompletionAccept');\n        }\n        // Reset before invoking the command, as the command might cause a follow up trigger (which we don't want to reset).\n        this.stop();\n        if (completion.command) {\n            await this._commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .then(undefined, onUnexpectedExternalError);\n            completion.source.removeRef();\n        }\n    }\n    async acceptNextWord(editor) {\n        await this._acceptNext(editor, (pos, text) => {\n            const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n            const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n            const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n            const m1 = text.match(wordRegExp);\n            let acceptUntilIndexExclusive = 0;\n            if (m1 && m1.index !== undefined) {\n                if (m1.index === 0) {\n                    acceptUntilIndexExclusive = m1[0].length;\n                }\n                else {\n                    acceptUntilIndexExclusive = m1.index;\n                }\n            }\n            else {\n                acceptUntilIndexExclusive = text.length;\n            }\n            const wsRegExp = /\\s+/g;\n            const m2 = wsRegExp.exec(text);\n            if (m2 && m2.index !== undefined) {\n                if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                    acceptUntilIndexExclusive = m2.index + m2[0].length;\n                }\n            }\n            return acceptUntilIndexExclusive;\n        }, 0 /* PartialAcceptTriggerKind.Word */);\n    }\n    async acceptNextLine(editor) {\n        await this._acceptNext(editor, (pos, text) => {\n            const m = text.match(/\\n/);\n            if (m && m.index !== undefined) {\n                return m.index + 1;\n            }\n            return text.length;\n        }, 1 /* PartialAcceptTriggerKind.Line */);\n    }\n    async _acceptNext(editor, getAcceptUntilIndex, kind) {\n        if (editor.getModel() !== this.textModel) {\n            throw new BugIndicatingError();\n        }\n        const state = this.state.get();\n        if (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n            return;\n        }\n        const ghostText = state.primaryGhostText;\n        const completion = state.inlineCompletion.toInlineCompletion(undefined);\n        if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n            // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n            await this.accept(editor);\n            return;\n        }\n        const firstPart = ghostText.parts[0];\n        const ghostTextPos = new Position(ghostText.lineNumber, firstPart.column);\n        const ghostTextVal = firstPart.text;\n        const acceptUntilIndexExclusive = getAcceptUntilIndex(ghostTextPos, ghostTextVal);\n        if (acceptUntilIndexExclusive === ghostTextVal.length && ghostText.parts.length === 1) {\n            this.accept(editor);\n            return;\n        }\n        const partialGhostTextVal = ghostTextVal.substring(0, acceptUntilIndexExclusive);\n        const positions = this._positions.get();\n        const cursorPosition = positions[0];\n        // Executing the edit might free the completion, so we have to hold a reference on it.\n        completion.source.addRef();\n        try {\n            this._isAcceptingPartially = true;\n            try {\n                editor.pushUndoStop();\n                const replaceRange = Range.fromPositions(cursorPosition, ghostTextPos);\n                const newText = editor.getModel().getValueInRange(replaceRange) + partialGhostTextVal;\n                const primaryEdit = new SingleTextEdit(replaceRange, newText);\n                const edits = [primaryEdit, ...getSecondaryEdits(this.textModel, positions, primaryEdit)];\n                const selections = getEndPositionsAfterApplying(edits).map(p => Selection.fromPositions(p));\n                editor.executeEdits('inlineSuggestion.accept', edits.map(edit => EditOperation.replace(edit.range, edit.text)));\n                editor.setSelections(selections, 'inlineCompletionPartialAccept');\n                editor.revealPositionInCenterIfOutsideViewport(editor.getPosition(), 1 /* ScrollType.Immediate */);\n            }\n            finally {\n                this._isAcceptingPartially = false;\n            }\n            if (completion.source.provider.handlePartialAccept) {\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), TextLength.ofText(partialGhostTextVal).addToPosition(ghostTextPos));\n                // This assumes that the inline completion and the model use the same EOL style.\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length, { kind, });\n            }\n        }\n        finally {\n            completion.source.removeRef();\n        }\n    }\n    handleSuggestAccepted(item) {\n        const itemEdit = singleTextRemoveCommonPrefix(item.toSingleTextEdit(), this.textModel);\n        const augmentedCompletion = this._computeAugmentation(itemEdit, undefined);\n        if (!augmentedCompletion) {\n            return;\n        }\n        const inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n        inlineCompletion.source.provider.handlePartialAccept?.(inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length, {\n            kind: 2 /* PartialAcceptTriggerKind.Suggest */,\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nexport function getSecondaryEdits(textModel, positions, primaryEdit) {\n    if (positions.length === 1) {\n        // No secondary cursor positions\n        return [];\n    }\n    const primaryPosition = positions[0];\n    const secondaryPositions = positions.slice(1);\n    const primaryEditStartPosition = primaryEdit.range.getStartPosition();\n    const primaryEditEndPosition = primaryEdit.range.getEndPosition();\n    const replacedTextAfterPrimaryCursor = textModel.getValueInRange(Range.fromPositions(primaryPosition, primaryEditEndPosition));\n    const positionWithinTextEdit = subtractPositions(primaryPosition, primaryEditStartPosition);\n    if (positionWithinTextEdit.lineNumber < 1) {\n        onUnexpectedError(new BugIndicatingError(`positionWithinTextEdit line number should be bigger than 0.\n\t\t\tInvalid subtraction between ${primaryPosition.toString()} and ${primaryEditStartPosition.toString()}`));\n        return [];\n    }\n    const secondaryEditText = substringPos(primaryEdit.text, positionWithinTextEdit);\n    return secondaryPositions.map(pos => {\n        const posEnd = addPositions(subtractPositions(pos, primaryEditStartPosition), primaryEditEndPosition);\n        const textAfterSecondaryCursor = textModel.getValueInRange(Range.fromPositions(pos, posEnd));\n        const l = commonPrefixLength(replacedTextAfterPrimaryCursor, textAfterSecondaryCursor);\n        const range = Range.fromPositions(pos, pos.delta(0, l));\n        return new SingleTextEdit(range, secondaryEditText);\n    });\n}\nfunction substringPos(text, pos) {\n    let subtext = '';\n    const lines = splitLinesIncludeSeparators(text);\n    for (let i = pos.lineNumber - 1; i < lines.length; i++) {\n        subtext += lines[i].substring(i === pos.lineNumber - 1 ? pos.column - 1 : 0);\n    }\n    return subtext;\n}\nfunction getEndPositionsAfterApplying(edits) {\n    const sortPerm = Permutation.createSortPermutation(edits, compareBy(e => e.range, Range.compareRangesUsingStarts));\n    const edit = new TextEdit(sortPerm.apply(edits));\n    const sortedNewRanges = edit.getNewRanges();\n    const newRanges = sortPerm.inverse().apply(sortedNewRanges);\n    return newRanges.map(range => range.getEndPosition());\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2283, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/suggestWidgetAdaptor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findFirstMax } from '../../../../../base/common/arraysFind.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { SingleTextEdit } from '../../../../common/core/textEdit.js';\nimport { SelectedSuggestionInfo } from '../../../../common/languages.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nimport { SnippetParser } from '../../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../../suggest/browser/suggestController.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._currentSuggestItemInfo;\n    }\n    constructor(editor, suggestControllerPreselector, onWillAccept) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.onWillAccept = onWillAccept;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._onDidSelectedItemChange = this._register(new Emitter());\n        this.onDidSelectedItemChange = this._onDidSelectedItemChange.event;\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const i = this.suggestControllerPreselector();\n                    const itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.toSingleTextEdit(), textModel);\n                        const valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findFirstMax(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n            this._register(suggestController.onWillInsertSuggestItem(e => {\n                const position = this.editor.getPosition();\n                const model = this.editor.getModel();\n                if (!position || !model) {\n                    return undefined;\n                }\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n                this.onWillAccept(suggestItemInfo);\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            this._onDidSelectedItemChange.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController?.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController?.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2484, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domObservable.js';\nimport { alert } from '../../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../../base/common/cancellation.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, observableFromEvent, observableSignal, observableValue, transaction, waitForState } from '../../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../../base/common/observableInternal/derived.js';\nimport { derivedObservableWithCache, mapObservableArrayCached } from '../../../../../base/common/observableInternal/utils.js';\nimport { isUndefined } from '../../../../../base/common/types.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { observableCodeEditor, reactToChange, reactToChangeWithStore } from '../../../../browser/observableCodeEditor.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextView } from '../view/ghostTextView.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from '../model/suggestWidgetAdaptor.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static { InlineCompletionsController_1 = this; }\n    static { this.ID = 'editor.contrib.inlineCompletionsController'; }\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _accessibilitySignalService, _keybindingService, _accessibilityService) {\n        super();\n        this.editor = editor;\n        this._instantiationService = _instantiationService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._commandService = _commandService;\n        this._debounceService = _debounceService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._keybindingService = _keybindingService;\n        this._accessibilityService = _accessibilityService;\n        this._editorObs = observableCodeEditor(this.editor);\n        this._positions = derived(this, reader => this._editorObs.selections.read(reader)?.map(s => s.getEndPosition()) ?? [new Position(1, 1)]);\n        this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n            this._editorObs.forceUpdate();\n            return this.model.get()?.selectedInlineCompletion.get()?.toSingleTextEdit(undefined);\n        }, (item) => this._editorObs.forceUpdate(_tx => {\n            /** @description InlineCompletionsController.handleSuggestAccepted */\n            this.model.get()?.handleSuggestAccepted(item);\n        })));\n        this._suggestWidgetSelectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n            this._editorObs.forceUpdate(_tx => cb(undefined));\n        }), () => this._suggestWidgetAdaptor.selectedItem);\n        this._enabledInConfig = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this._isScreenReaderEnabled = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n        this._editorDictationInProgress = observableFromEvent(this, this._contextKeyService.onDidChangeContext, () => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true);\n        this._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n        this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this.model = derivedDisposable(this, reader => {\n            if (this._editorObs.isReadonly.read(reader)) {\n                return undefined;\n            }\n            const textModel = this._editorObs.model.read(reader);\n            if (!textModel) {\n                return undefined;\n            }\n            const model = this._instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetSelectedItem, this._editorObs.versionId, this._positions, this._debounceValue, observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).preview), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(119 /* EditorOption.suggest */).previewMode), observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n            return model;\n        }).recomputeInitiallyAndOnChange(this._store);\n        this._ghostTexts = derived(this, (reader) => {\n            const model = this.model.read(reader);\n            return model?.ghostTexts.read(reader) ?? [];\n        });\n        this._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n        this._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => store.add(this._instantiationService.createInstance(GhostTextView, this.editor, {\n            ghostText: ghostText,\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v?.textModel),\n        }))).recomputeInitiallyAndOnChange(this._store);\n        this._playAccessibilitySignal = observableSignal(this);\n        this._fontFamily = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).fontFamily);\n        this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\n        this._register(reactToChange(this._editorObs.onDidType, (_value, _changes) => {\n            if (this._enabled.get()) {\n                this.model.get()?.trigger();\n            }\n        }));\n        this._register(this._commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                this._editorObs.forceUpdate(tx => {\n                    /** @description onDidExecuteCommand */\n                    this.model.get()?.trigger(tx);\n                });\n            }\n        }));\n        this._register(reactToChange(this._editorObs.selections, (_value, changes) => {\n            if (changes.some(e => e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api')) {\n                this.model.get()?.stop();\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown')\n                || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur')\n                || editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur\n                || InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                /** @description InlineCompletionsController.onDidBlurEditorWidget */\n                this.model.get()?.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            /** @description InlineCompletionsController.forceRenderingAbove */\n            const state = this.model.read(reader)?.state.read(reader);\n            if (state?.suggestItem) {\n                if (state.primaryGhostText.lineCount >= 2) {\n                    this._suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this._suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this._suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        const currentInlineCompletionBySemanticId = derivedObservableWithCache(this, (reader, last) => {\n            const model = this.model.read(reader);\n            const state = model?.state.read(reader);\n            if (this._suggestWidgetSelectedItem.get()) {\n                return last;\n            }\n            return state?.inlineCompletion?.semanticId;\n        });\n        this._register(reactToChangeWithStore(derived(reader => {\n            this._playAccessibilitySignal.read(reader);\n            currentInlineCompletionBySemanticId.read(reader);\n            return {};\n        }), async (_value, _deltas, store) => {\n            /** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n            const model = this.model.get();\n            const state = model?.state.get();\n            if (!state || !model) {\n                return;\n            }\n            const lineText = model.textModel.getLineContent(state.primaryGhostText.lineNumber);\n            await timeout(50, cancelOnDispose(store));\n            await waitForState(this._suggestWidgetSelectedItem, isUndefined, () => false, cancelOnDispose(store));\n            await this._accessibilitySignalService.playSignal(AccessibilitySignal.inlineSuggestion);\n            if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                this._provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\n        this._register(createStyleSheetFromObservable(derived(reader => {\n            const fontFamily = this._fontFamily.read(reader);\n            if (fontFamily === '' || fontFamily === 'default') {\n                return '';\n            }\n            return `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n        })));\n        // TODO@hediet\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    playAccessibilitySignal(tx) {\n        this._playAccessibilitySignal.trigger(tx);\n    }\n    _provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(150 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        alert(hint ? content + ', ' + hint : content);\n    }\n    shouldShowHoverAt(range) {\n        const ghostText = this.model.get()?.primaryGhostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this._ghostTextWidgets.get()[0]?.ownsViewZone(viewZoneId) ?? false;\n    }\n};\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAccessibilitySignalService),\n    __param(8, IKeybindingService),\n    __param(9, IAccessibilityService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\nfunction convertItemsToStableObservables(items, store) {\n    const result = observableValue('result', []);\n    const innerObservables = [];\n    store.add(autorun(reader => {\n        const itemsValue = items.read(reader);\n        transaction(tx => {\n            if (itemsValue.length !== innerObservables.length) {\n                innerObservables.length = itemsValue.length;\n                for (let i = 0; i < innerObservables.length; i++) {\n                    if (!innerObservables[i]) {\n                        innerObservables[i] = observableValue('item', itemsValue[i]);\n                    }\n                }\n                result.set([...innerObservables], tx);\n            }\n            innerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n        });\n    }));\n    return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2790, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/commands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transaction } from '../../../../../base/common/observable.js';\nimport { asyncTransaction } from '../../../../../base/common/observableInternal/base.js';\nimport { EditorAction } from '../../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { Context as SuggestContext } from '../../../suggest/browser/suggest.js';\nimport * as nls from '../../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    static { this.ID = showNextInlineSuggestionActionId; }\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        controller?.model.get()?.next();\n    }\n}\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    static { this.ID = showPreviousInlineSuggestionActionId; }\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        controller?.model.get()?.previous();\n    }\n}\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        await asyncTransaction(async (tx) => {\n            /** @description triggerExplicitly from command */\n            await controller?.model.get()?.triggerExplicitly(tx);\n            controller?.playAccessibilitySignal(tx);\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        await controller?.model.get()?.acceptNextWord(controller.editor);\n    }\n}\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextLine',\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n            alias: 'Accept Next Line Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptLine', 'Accept Line'),\n                    group: 'secondary',\n                    order: 2,\n                }],\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        await controller?.model.get()?.acceptNextLine(controller.editor);\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated(), EditorContextKeys.hoverFocused.toNegated()),\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        if (controller) {\n            controller.model.get()?.accept(controller.editor);\n            controller.editor.focus();\n        }\n    }\n}\nexport class HideInlineCompletion extends EditorAction {\n    static { this.ID = 'editor.action.inlineSuggest.hide'; }\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        transaction(tx => {\n            controller?.model.get()?.stop(tx);\n        });\n    }\n}\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    static { this.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar'; }\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n        });\n    }\n    async run(accessor, editor) {\n        const configService = accessor.get(IConfigurationService);\n        const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n        const newValue = currentValue === 'always' ? 'onHover' : 'always';\n        configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3025, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hintsWidget/hoverParticipant.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable } from '../../../../../base/common/observable.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { HoverForeignElementAnchor, RenderedHoverParts } from '../../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from '../controller/inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 4;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = InlineCompletionsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar !== 'onHover') {\n            return [];\n        }\n        const controller = InlineCompletionsController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposables = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            disposables.add(this.renderScreenReaderText(context, part));\n        }\n        const model = part.controller.model.get();\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false, constObservable(null), model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.activeCommands);\n        const widgetNode = w.getDomNode();\n        context.fragment.appendChild(widgetNode);\n        model.triggerExplicitly();\n        disposables.add(w);\n        const renderedHoverPart = {\n            hoverPart: part,\n            hoverElement: widgetNode,\n            dispose() { disposables.dispose(); }\n        };\n        return new RenderedHoverParts([renderedHoverPart]);\n    }\n    renderScreenReaderText(context, part) {\n        const disposables = new DisposableStore();\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n        const renderer = disposables.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposables.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        disposables.add(autorun(reader => {\n            /** @description update hover */\n            const ghostText = part.controller.model.read(reader)?.primaryGhostText.read(reader);\n            if (ghostText) {\n                const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n                render(ghostText.renderForScreenReader(lineText));\n            }\n            else {\n                dom.reset(hoverContentsElement);\n            }\n        }));\n        context.fragment.appendChild(markdownHoverElement);\n        return disposables;\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3206, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsAccessibleView.js"],"sourcesContent":["export class InlineCompletionsAccessibleView {\n}\n"],"names":[],"mappings":";;;AAAO,MAAM;AACb","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3217, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { TriggerInlineSuggestionAction, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, AcceptNextWordOfInlineCompletion, AcceptInlineCompletion, HideInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, AcceptNextLineOfInlineCompletion } from './controller/commands.js';\nimport { InlineCompletionsHoverParticipant } from './hintsWidget/hoverParticipant.js';\nimport { InlineCompletionsAccessibleView } from './inlineCompletionsAccessibleView.js';\nimport { InlineCompletionsController } from './controller/inlineCompletionsController.js';\nimport { AccessibleViewRegistry } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(InlineCompletionsController.ID, InlineCompletionsController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\nAccessibleViewRegistry.register(new InlineCompletionsAccessibleView());\n"],"names":[],"mappings":"AAAA;;;8FAG8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AACA,CAAA,GAAA,yLAAA,CAAA,6BAA0B,AAAD,EAAE,kPAAA,CAAA,8BAA2B,CAAC,EAAE,EAAE,kPAAA,CAAA,8BAA2B,EAAE,EAAE,8CAA8C;AACxI,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,gCAA6B;AAClD,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,iCAA8B;AACnD,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,qCAAkC;AACvD,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,mCAAgC;AACrD,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,mCAAgC;AACrD,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,yBAAsB;AAC3C,CAAA,GAAA,yLAAA,CAAA,uBAAoB,AAAD,EAAE,+NAAA,CAAA,uBAAoB;AACzC,CAAA,GAAA,4LAAA,CAAA,kBAAe,AAAD,EAAE,+NAAA,CAAA,0CAAuC;AACvD,uMAAA,CAAA,2BAAwB,CAAC,QAAQ,CAAC,wOAAA,CAAA,oCAAiC;AACnE,kNAAA,CAAA,yBAAsB,CAAC,QAAQ,CAAC,IAAI,wOAAA,CAAA,kCAA+B","ignoreList":[0],"debugId":null}}]
}