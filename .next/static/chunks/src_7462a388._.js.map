{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/editor/editorStyle.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"editor\": \"editorStyle-module__g5GrRa__editor\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/components/PrimativeValue/editors/JsonEditor.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Editor, EditorProps, OnMount } from \"@monaco-editor/react\";\nimport mockJson from \"@/assets/mock/jsonMock.json\";\nimport * as monacoEditor from \"monaco-editor\";\ninterface JSONEditorProps extends EditorProps {\n  handleChange: (val: string) => void;\n}\n\nexport default function JSONEditor({ handleChange, ...props }: JSONEditorProps) {\n  const [hasErrors, setHasErrors] = useState(false);\n  const editorRef = useRef<monacoEditor.editor.IStandaloneCodeEditor | null>(null);\n\n  const handleMount: OnMount = (editor, monaco) => {\n    editorRef.current = editor;\n\n    // ‚úÖ H√ÑR anv√§nder du monaco korrekt (utan direkt import)\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: false,\n      schemas: [],\n    });\n\n    monaco.editor.onDidChangeMarkers(() => {\n      const model = editor.getModel();\n      if (!model) return;\n      const markers = monaco.editor.getModelMarkers({ resource: model.uri });\n      setHasErrors(markers.length > 0);\n    });\n  };\n\n  return (\n    <>\n      <Editor\n        height=\"100%\"\n        language=\"json\"\n        defaultValue={JSON.stringify(mockJson, null, 2)}\n        onMount={handleMount}\n        onChange={(val) => {\n          console.log(\"VAL: \", val);\n          if (!hasErrors && val) handleChange(val);\n          else {\n            console.error(\"Editor has error\");\n          }\n        }}\n        options={{\n          minimap: { enabled: false },\n          readOnly: false,\n          wordWrap: \"on\",\n          formatOnPaste: true,\n          formatOnType: true,\n          tabSize: 2,\n          scrollBeyondLastLine: false,\n        }}\n        {...props}\n      />\n      {hasErrors && <p style={{ color: \"red\" }}>Fix JSON errors before continuing.</p>}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;;;AAMe,SAAS,WAAW,EAAE,YAAY,EAAE,GAAG,OAAwB;;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoD;IAE3E,MAAM,cAAuB,CAAC,QAAQ;QACpC,UAAU,OAAO,GAAG;QAEpB,wDAAwD;QACxD,OAAO,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC;YACvD,UAAU;YACV,eAAe;YACf,SAAS,EAAE;QACb;QAEA,OAAO,MAAM,CAAC,kBAAkB,CAAC;YAC/B,MAAM,QAAQ,OAAO,QAAQ;YAC7B,IAAI,CAAC,OAAO;YACZ,MAAM,UAAU,OAAO,MAAM,CAAC,eAAe,CAAC;gBAAE,UAAU,MAAM,GAAG;YAAC;YACpE,aAAa,QAAQ,MAAM,GAAG;QAChC;IACF;IAEA,qBACE;;0BACE,6LAAC,gLAAA,CAAA,SAAM;gBACL,QAAO;gBACP,UAAS;gBACT,cAAc,KAAK,SAAS,CAAC,yGAAA,CAAA,UAAQ,EAAE,MAAM;gBAC7C,SAAS;gBACT,UAAU,CAAC;oBACT,QAAQ,GAAG,CAAC,SAAS;oBACrB,IAAI,CAAC,aAAa,KAAK,aAAa;yBAC/B;wBACH,QAAQ,KAAK,CAAC;oBAChB;gBACF;gBACA,SAAS;oBACP,SAAS;wBAAE,SAAS;oBAAM;oBAC1B,UAAU;oBACV,UAAU;oBACV,eAAe;oBACf,cAAc;oBACd,SAAS;oBACT,sBAAsB;gBACxB;gBACC,GAAG,KAAK;;;;;;YAEV,2BAAa,6LAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAG;;;;;;;;AAGhD;GAlDwB;KAAA","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/validation/isJson.ts"],"sourcesContent":["export const isValidJson = (data: string) => {\n  try {\n    console.log(\"data: \", data);\n    JSON.parse(data);\n    return true;\n  } catch (err) {\n    console.error(\"‚ùå JSON.parse error:\", err);\n    console.error(\"‚õîÔ∏è Offending input:\", data);\n    return false;\n  }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,QAAQ,GAAG,CAAC,UAAU;QACtB,KAAK,KAAK,CAAC;QACX,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,uBAAuB;QACrC,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/hooks/useJsonGraph.tsx"],"sourcesContent":["import { ParsedEdge, ParsedNode } from \"@/types/node.types\";\nimport { extractNodes } from \"@/utils/extractNodes\";\nimport { isValidJson } from \"@/validation/isJson\";\nimport { useState } from \"react\";\n\nexport function useJsonGraph() {\n  const [input, setInput] = useState(\"\");\n  const [nodes, setNodes] = useState<ParsedNode[]>([]);\n  const [edges, setEdges] = useState<ParsedEdge[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  function handleChange(value: string) {\n    setInput(value);\n    try {\n      if (!isValidJson(value)) {\n        return console.error(\"üö® No valid JSON\");\n      }\n\n      const json = JSON.parse(value);\n      console.log(\"json :\", json);\n      const userInputKey = Object.keys(json).pop();\n      console.log(\"userinputKey: \", userInputKey);\n\n      // console.log(\"userObj: \", json[userInputKey]);\n      // const result = extractNodes();\n      // console.log(\"result: \", result);\n      // setNodes(result.nodes);\n      // setEdges(result.edges);\n      setError(null);\n    } catch {\n      setNodes([]);\n      setEdges([]);\n      setError(\"Invalid JSON\");\n    }\n  }\n\n  return { input, nodes, edges, error, handleChange };\n}\n"],"names":[],"mappings":";;;AAEA;AACA;;;;AAEO,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,SAAS,aAAa,KAAa;QACjC,SAAS;QACT,IAAI;YACF,IAAI,CAAC,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,EAAE,QAAQ;gBACvB,OAAO,QAAQ,KAAK,CAAC;YACvB;YAEA,MAAM,OAAO,KAAK,KAAK,CAAC;YACxB,QAAQ,GAAG,CAAC,UAAU;YACtB,MAAM,eAAe,OAAO,IAAI,CAAC,MAAM,GAAG;YAC1C,QAAQ,GAAG,CAAC,kBAAkB;YAE9B,gDAAgD;YAChD,iCAAiC;YACjC,mCAAmC;YACnC,0BAA0B;YAC1B,0BAA0B;YAC1B,SAAS;QACX,EAAE,OAAM;YACN,SAAS,EAAE;YACX,SAAS,EAAE;YACX,SAAS;QACX;IACF;IAEA,OAAO;QAAE;QAAO;QAAO;QAAO;QAAO;IAAa;AACpD;GAhCgB","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/app/editor/page.tsx"],"sourcesContent":["// app/home/page.tsx\n\"use client\";\nimport styles from \"./editorStyle.module.css\";\nimport { Canvas } from \"reaflow\";\nimport JSONEditor from \"@/components/PrimativeValue/editors/JsonEditor\";\n\nimport { useJsonGraph } from \"@/hooks/useJsonGraph\";\nimport { useEffect } from \"react\";\n\nexport default function HomePage() {\n  const { nodes, handleChange } = useJsonGraph();\n\n  useEffect(() => {\n    console.log(\"nodes: \", nodes);\n  }, [nodes]);\n\n  return (\n    <div className={styles.editor}>\n      <JSONEditor handleChange={handleChange} />\n      <Canvas></Canvas>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAEpB;AACA;AACA;AAEA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,QAAQ,GAAG,CAAC,WAAW;QACzB;6BAAG;QAAC;KAAM;IAEV,qBACE,6LAAC;QAAI,WAAW,kJAAA,CAAA,UAAM,CAAC,MAAM;;0BAC3B,6LAAC,gKAAA,CAAA,UAAU;gBAAC,cAAc;;;;;;0BAC1B,6LAAC,2IAAA,CAAA,SAAM;;;;;;;;;;;AAGb;GAbwB;;QACU,gIAAA,CAAA,eAAY;;;KADtB","debugId":null}}]
}