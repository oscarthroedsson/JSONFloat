{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/pla/pla.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"<\", \">\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  keywords: [\n    \".i\",\n    \".o\",\n    \".mv\",\n    \".ilb\",\n    \".ob\",\n    \".label\",\n    \".type\",\n    \".phase\",\n    \".pair\",\n    \".symbolic\",\n    \".symbolic-output\",\n    \".kiss\",\n    \".p\",\n    \".e\",\n    \".end\"\n  ],\n  // regular expressions\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // comments and whitespace\n      { include: \"@whitespace\" },\n      [/@comment/, \"comment\"],\n      // keyword\n      [\n        /\\.([a-zA-Z_\\-]+)/,\n        {\n          cases: {\n            \"@eos\": { token: \"keyword.$1\" },\n            \"@keywords\": {\n              cases: {\n                \".type\": { token: \"keyword.$1\", next: \"@type\" },\n                \"@default\": { token: \"keyword.$1\", next: \"@keywordArg\" }\n              }\n            },\n            \"@default\": { token: \"keyword.$1\" }\n          }\n        }\n      ],\n      // identifiers\n      [/@identifier/, \"identifier\"],\n      // PLA row\n      [/@plaContent/, \"string\"]\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{ include: \"@whitespace\" }, [/\\w+/, { token: \"type\", next: \"@pop\" }]],\n    keywordArg: [\n      // whitespace\n      [\n        /[ \\t\\r\\n]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@pop\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // comments\n      [/@comment/, \"comment\", \"@pop\"],\n      // brackets\n      [\n        /[<>()\\[\\]]/,\n        {\n          cases: {\n            \"@eos\": { token: \"@brackets\", next: \"@pop\" },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      // numbers\n      [\n        /\\-?\\d+/,\n        {\n          cases: {\n            \"@eos\": { token: \"number\", next: \"@pop\" },\n            \"@default\": \"number\"\n          }\n        }\n      ],\n      // identifiers\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@eos\": { token: \"identifier\", next: \"@pop\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // delimiter\n      [\n        /[;=]/,\n        {\n          cases: {\n            \"@eos\": { token: \"delimiter\", next: \"@pop\" },\n            \"@default\": \"delimiter\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"AAAA;;;;;+EAK+E,GAG/E,iCAAiC;;;;;AACjC,IAAI,OAAO;IACT,UAAU;QACR,aAAa;IACf;IACA,UAAU;QACR;YAAC;YAAK;SAAI;QACV;YAAC;YAAK;SAAI;QACV;YAAC;YAAK;SAAI;KACX;IACD,kBAAkB;QAChB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;KACzB;IACD,kBAAkB;QAChB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;KACzB;AACH;AACA,IAAI,WAAW;IACb,cAAc;IACd,cAAc;IACd,UAAU;QACR;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;QAAmB;QACnD;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;QAAkB;QAClD;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;QAAwB;KACzD;IACD,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,sBAAsB;IACtB,SAAS;IACT,YAAY;IACZ,YAAY;IACZ,uCAAuC;IACvC,WAAW;QACT,MAAM;YACJ,0BAA0B;YAC1B;gBAAE,SAAS;YAAc;YACzB;gBAAC;gBAAY;aAAU;YACvB,UAAU;YACV;gBACE;gBACA;oBACE,OAAO;wBACL,QAAQ;4BAAE,OAAO;wBAAa;wBAC9B,aAAa;4BACX,OAAO;gCACL,SAAS;oCAAE,OAAO;oCAAc,MAAM;gCAAQ;gCAC9C,YAAY;oCAAE,OAAO;oCAAc,MAAM;gCAAc;4BACzD;wBACF;wBACA,YAAY;4BAAE,OAAO;wBAAa;oBACpC;gBACF;aACD;YACD,cAAc;YACd;gBAAC;gBAAe;aAAa;YAC7B,UAAU;YACV;gBAAC;gBAAe;aAAS;SAC1B;QACD,YAAY;YAAC;gBAAC;gBAAc;aAAG;SAAC;QAChC,MAAM;YAAC;gBAAE,SAAS;YAAc;YAAG;gBAAC;gBAAO;oBAAE,OAAO;oBAAQ,MAAM;gBAAO;aAAE;SAAC;QAC5E,YAAY;YACV,aAAa;YACb;gBACE;gBACA;oBACE,OAAO;wBACL,QAAQ;4BAAE,OAAO;4BAAI,MAAM;wBAAO;wBAClC,YAAY;oBACd;gBACF;aACD;YACD,WAAW;YACX;gBAAC;gBAAY;gBAAW;aAAO;YAC/B,WAAW;YACX;gBACE;gBACA;oBACE,OAAO;wBACL,QAAQ;4BAAE,OAAO;4BAAa,MAAM;wBAAO;wBAC3C,YAAY;oBACd;gBACF;aACD;YACD,UAAU;YACV;gBACE;gBACA;oBACE,OAAO;wBACL,QAAQ;4BAAE,OAAO;4BAAU,MAAM;wBAAO;wBACxC,YAAY;oBACd;gBACF;aACD;YACD,cAAc;YACd;gBACE;gBACA;oBACE,OAAO;wBACL,QAAQ;4BAAE,OAAO;4BAAc,MAAM;wBAAO;wBAC5C,YAAY;oBACd;gBACF;aACD;YACD,YAAY;YACZ;gBACE;gBACA;oBACE,OAAO;wBACL,QAAQ;4BAAE,OAAO;4BAAa,MAAM;wBAAO;wBAC3C,YAAY;oBACd;gBACF;aACD;SACF;IACH;AACF","ignoreList":[0],"debugId":null}}]
}