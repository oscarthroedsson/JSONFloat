{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/editor/editorStyle.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"editor\": \"editorStyle-module__g5GrRa__editor\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/utils/extractNodes.ts"],"sourcesContent":["import { ParsedNode, ParsedEdge, NodeData } from \"@/types/node.types\";\n\nexport function extractNodes(\n  input: unknown,\n  parentPath = \"root\",\n  nodes: ParsedNode[] = [],\n  edges: ParsedEdge[] = []\n): { nodes: ParsedNode[]; edges: ParsedEdge[] } {\n  if (typeof input !== \"object\" || input === null) return { nodes, edges };\n\n  // Current node we looping over\n  const currentNode: ParsedNode = {\n    id: parentPath,\n    label: parentPath.split(\".\").pop() || parentPath,\n    data: [],\n    breakouts: [],\n  };\n\n  if (Array.isArray(input)) {\n    // Handle array directly\n    currentNode.label = `${currentNode.label} (array)`;\n\n    // Process each array item\n    input.forEach((item, index) => {\n      const itemPath = `${parentPath}[${index}]`;\n\n      if (isPrimitive(item)) {\n        currentNode.data.push({\n          key: index.toString(),\n          value: String(item),\n          dataType: getDataType(item),\n          variations: [],\n        });\n      } else {\n        // For non-primitive items, create breakouts\n\n        const key: string = index.toString();\n        const type: \"array\" | \"object\" = Array.isArray(item) ? \"array\" : \"object\";\n        const items = Array.isArray(item) ? item.length : Object.values(item).length;\n\n        currentNode.breakouts?.push({\n          key: key,\n          type: type,\n          items: items,\n        });\n        edges.push({ id: `${parentPath}->${itemPath}`, from: parentPath, to: itemPath });\n        extractNodes(item, itemPath, nodes, edges);\n      }\n    });\n  } else {\n    // Handle object\n    const entries = Object.entries(input as Record<string, unknown>);\n\n    for (const [key, value] of entries) {\n      const fullPath = `${parentPath}.${key}`;\n\n      if (isPrimitive(value)) {\n        currentNode.data.push({\n          key,\n          value: String(value),\n          dataType: getDataType(value),\n          variations: [],\n        });\n      } else if (Array.isArray(value)) {\n        currentNode.breakouts?.push({ key, type: \"array\", items: key.length });\n        edges.push({ id: `${parentPath}->${fullPath}`, from: parentPath, to: fullPath });\n        // Pass the array directly, don't wrap it\n        extractNodes(value, fullPath, nodes, edges);\n      } else if (typeof value === \"object\" && value !== null) {\n        currentNode.breakouts?.push({ key, type: \"object\", items: Object.values(key).length });\n        edges.push({ id: `${parentPath}->${fullPath}`, from: parentPath, to: fullPath });\n        extractNodes(value, fullPath, nodes, edges);\n      }\n    }\n  }\n\n  nodes.push(currentNode);\n  return { nodes, edges };\n}\n\nfunction isPrimitive(value: unknown): value is string | number | boolean | null {\n  return typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\" || value === null;\n}\n\nfunction getDataType(value: unknown): NodeData[\"dataType\"] {\n  if (typeof value === \"string\") return \"string\";\n  if (typeof value === \"number\") return \"number\";\n  if (typeof value === \"boolean\") return \"boolean\";\n  if (value === null) return \"null\";\n  if (Array.isArray(value)) return \"array\";\n  return \"object\";\n}\n"],"names":[],"mappings":";;;AAEO,SAAS,aACd,KAAc,EACd,aAAa,MAAM,EACnB,QAAsB,EAAE,EACxB,QAAsB,EAAE;IAExB,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM,OAAO;QAAE;QAAO;IAAM;IAEvE,+BAA+B;IAC/B,MAAM,cAA0B;QAC9B,IAAI;QACJ,OAAO,WAAW,KAAK,CAAC,KAAK,GAAG,MAAM;QACtC,MAAM,EAAE;QACR,WAAW,EAAE;IACf;IAEA,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,wBAAwB;QACxB,YAAY,KAAK,GAAG,GAAG,YAAY,KAAK,CAAC,QAAQ,CAAC;QAElD,0BAA0B;QAC1B,MAAM,OAAO,CAAC,CAAC,MAAM;YACnB,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;YAE1C,IAAI,YAAY,OAAO;gBACrB,YAAY,IAAI,CAAC,IAAI,CAAC;oBACpB,KAAK,MAAM,QAAQ;oBACnB,OAAO,OAAO;oBACd,UAAU,YAAY;oBACtB,YAAY,EAAE;gBAChB;YACF,OAAO;gBACL,4CAA4C;gBAE5C,MAAM,MAAc,MAAM,QAAQ;gBAClC,MAAM,OAA2B,MAAM,OAAO,CAAC,QAAQ,UAAU;gBACjE,MAAM,QAAQ,MAAM,OAAO,CAAC,QAAQ,KAAK,MAAM,GAAG,OAAO,MAAM,CAAC,MAAM,MAAM;gBAE5E,YAAY,SAAS,EAAE,KAAK;oBAC1B,KAAK;oBACL,MAAM;oBACN,OAAO;gBACT;gBACA,MAAM,IAAI,CAAC;oBAAE,IAAI,GAAG,WAAW,EAAE,EAAE,UAAU;oBAAE,MAAM;oBAAY,IAAI;gBAAS;gBAC9E,aAAa,MAAM,UAAU,OAAO;YACtC;QACF;IACF,OAAO;QACL,gBAAgB;QAChB,MAAM,UAAU,OAAO,OAAO,CAAC;QAE/B,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,QAAS;YAClC,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,KAAK;YAEvC,IAAI,YAAY,QAAQ;gBACtB,YAAY,IAAI,CAAC,IAAI,CAAC;oBACpB;oBACA,OAAO,OAAO;oBACd,UAAU,YAAY;oBACtB,YAAY,EAAE;gBAChB;YACF,OAAO,IAAI,MAAM,OAAO,CAAC,QAAQ;gBAC/B,YAAY,SAAS,EAAE,KAAK;oBAAE;oBAAK,MAAM;oBAAS,OAAO,IAAI,MAAM;gBAAC;gBACpE,MAAM,IAAI,CAAC;oBAAE,IAAI,GAAG,WAAW,EAAE,EAAE,UAAU;oBAAE,MAAM;oBAAY,IAAI;gBAAS;gBAC9E,yCAAyC;gBACzC,aAAa,OAAO,UAAU,OAAO;YACvC,OAAO,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;gBACtD,YAAY,SAAS,EAAE,KAAK;oBAAE;oBAAK,MAAM;oBAAU,OAAO,OAAO,MAAM,CAAC,KAAK,MAAM;gBAAC;gBACpF,MAAM,IAAI,CAAC;oBAAE,IAAI,GAAG,WAAW,EAAE,EAAE,UAAU;oBAAE,MAAM;oBAAY,IAAI;gBAAS;gBAC9E,aAAa,OAAO,UAAU,OAAO;YACvC;QACF;IACF;IAEA,MAAM,IAAI,CAAC;IACX,OAAO;QAAE;QAAO;IAAM;AACxB;AAEA,SAAS,YAAY,KAAc;IACjC,OAAO,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,OAAO,UAAU,aAAa,UAAU;AAC3G;AAEA,SAAS,YAAY,KAAc;IACjC,IAAI,OAAO,UAAU,UAAU,OAAO;IACtC,IAAI,OAAO,UAAU,UAAU,OAAO;IACtC,IAAI,OAAO,UAAU,WAAW,OAAO;IACvC,IAAI,UAAU,MAAM,OAAO;IAC3B,IAAI,MAAM,OAAO,CAAC,QAAQ,OAAO;IACjC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/utils/parseJSON.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Recursively normalizes a JSON object:\n * - Parses JSON strings into objects or arrays if applicable.\n * - Converts numeric strings into numbers.\n * - Handles nested objects and arrays.\n * - Returns all other values as they are.\n *\n * @param data - The input data to be normalized (object or JSON string).\n * @returns The normalized object with correct data types.\n */\nexport function unpackJsonData<T>(data: any): T {\n  // If input is a JSON string, parse it into an object/array\n  if (isJsonString(data)) {\n    console.log(\"Parsing JSON string:\", data);\n    data = JSON.parse(data);\n  }\n\n  if (isArray(data)) {\n    console.log(\"Processing array:\", data);\n    return data.map((item: any, index: number) => {\n      console.log(`Array item ${index}:`, item, \"Type:\", typeof item);\n      return unpackJsonData(item);\n    }) as T;\n  }\n\n  if (isObject(data)) {\n    console.log(\"Processing object:\", data);\n    const result: any = {};\n    for (const [key, value] of Object.entries(data)) {\n      console.log(`Object key ${key}:`, value, \"Type:\", typeof value);\n      if (isJsonString(value)) {\n        result[key] = JSON.parse(value as string);\n      } else if (isNumericString(value)) {\n        result[key] = Number(value);\n      } else if (isObject(value) || isArray(value)) {\n        result[key] = unpackJsonData(value);\n      } else {\n        result[key] = value; // Keep primitive values as they are\n      }\n    }\n    return result as T;\n  }\n\n  // Return primitive values unchanged\n  console.log(\"Returning primitive:\", data, \"Type:\", typeof data);\n  return data as T;\n}\n\n// Checks if a value is an object (but not an array or null).\nfunction isObject(value: unknown): boolean {\n  return value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n// Checks if a value is an array.\nfunction isArray(value: unknown): boolean {\n  return Array.isArray(value);\n}\n\n// Checks if a value is a string.\nfunction isString(value: unknown): boolean {\n  return typeof value === \"string\";\n}\n\n// Checks if a value is a numeric string (integer or decimal).\nfunction isNumericString(value: unknown): boolean {\n  if (!isString(value)) return false;\n  const str = value as string;\n  return /^\\d+(\\.\\d+)?$/.test(str);\n}\n\n// Checks if a value is a JSON string.\nfunction isJsonString(value: unknown): boolean {\n  if (!isString(value)) return false;\n  const str = value as string;\n\n  // Skip if it's just a number or simple string\n  if (!/^[\\{\\[]/.test(str.trim())) return false;\n\n  try {\n    const parsed = JSON.parse(str);\n    return typeof parsed === \"object\" && parsed !== null;\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":"AAAA,qDAAqD,GAErD;;;;;;;;;CASC;;;AACM,SAAS,eAAkB,IAAS;IACzC,2DAA2D;IAC3D,IAAI,aAAa,OAAO;QACtB,QAAQ,GAAG,CAAC,wBAAwB;QACpC,OAAO,KAAK,KAAK,CAAC;IACpB;IAEA,IAAI,QAAQ,OAAO;QACjB,QAAQ,GAAG,CAAC,qBAAqB;QACjC,OAAO,KAAK,GAAG,CAAC,CAAC,MAAW;YAC1B,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,SAAS,OAAO;YAC1D,OAAO,eAAe;QACxB;IACF;IAEA,IAAI,SAAS,OAAO;QAClB,QAAQ,GAAG,CAAC,sBAAsB;QAClC,MAAM,SAAc,CAAC;QACrB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,MAAO;YAC/C,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,SAAS,OAAO;YACzD,IAAI,aAAa,QAAQ;gBACvB,MAAM,CAAC,IAAI,GAAG,KAAK,KAAK,CAAC;YAC3B,OAAO,IAAI,gBAAgB,QAAQ;gBACjC,MAAM,CAAC,IAAI,GAAG,OAAO;YACvB,OAAO,IAAI,SAAS,UAAU,QAAQ,QAAQ;gBAC5C,MAAM,CAAC,IAAI,GAAG,eAAe;YAC/B,OAAO;gBACL,MAAM,CAAC,IAAI,GAAG,OAAO,oCAAoC;YAC3D;QACF;QACA,OAAO;IACT;IAEA,oCAAoC;IACpC,QAAQ,GAAG,CAAC,wBAAwB,MAAM,SAAS,OAAO;IAC1D,OAAO;AACT;AAEA,6DAA6D;AAC7D,SAAS,SAAS,KAAc;IAC9B,OAAO,UAAU,QAAQ,OAAO,UAAU,YAAY,CAAC,MAAM,OAAO,CAAC;AACvE;AAEA,iCAAiC;AACjC,SAAS,QAAQ,KAAc;IAC7B,OAAO,MAAM,OAAO,CAAC;AACvB;AAEA,iCAAiC;AACjC,SAAS,SAAS,KAAc;IAC9B,OAAO,OAAO,UAAU;AAC1B;AAEA,8DAA8D;AAC9D,SAAS,gBAAgB,KAAc;IACrC,IAAI,CAAC,SAAS,QAAQ,OAAO;IAC7B,MAAM,MAAM;IACZ,OAAO,gBAAgB,IAAI,CAAC;AAC9B;AAEA,sCAAsC;AACtC,SAAS,aAAa,KAAc;IAClC,IAAI,CAAC,SAAS,QAAQ,OAAO;IAC7B,MAAM,MAAM;IAEZ,8CAA8C;IAC9C,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO;IAExC,IAAI;QACF,MAAM,SAAS,KAAK,KAAK,CAAC;QAC1B,OAAO,OAAO,WAAW,YAAY,WAAW;IAClD,EAAE,OAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/validation/isJson.ts"],"sourcesContent":["export const isValidJson = (data: string) => {\n  try {\n    console.log(\"data: \", data);\n    JSON.parse(data);\n    return true;\n  } catch (err) {\n    console.error(\"❌ JSON.parse error:\", err);\n    console.error(\"⛔️ Offending input:\", data);\n    return false;\n  }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,QAAQ,GAAG,CAAC,UAAU;QACtB,KAAK,KAAK,CAAC;QACX,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,uBAAuB;QACrC,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/hooks/useJsonGraph.tsx"],"sourcesContent":["import { ParsedEdge, ParsedNode } from \"@/types/node.types\";\nimport { extractNodes } from \"@/utils/extractNodes\";\nimport { unpackJsonData } from \"@/utils/parseJSON\";\nimport { isValidJson } from \"@/validation/isJson\";\nimport { useState } from \"react\";\n\nexport function useJsonGraph() {\n  const [input, setInput] = useState(\"\");\n  const [nodes, setNodes] = useState<ParsedNode[]>([]);\n  const [edges, setEdges] = useState<ParsedEdge[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  function handleChange(value: string) {\n    setInput(value);\n    try {\n      if (!isValidJson(value)) {\n        return console.error(\"🚨 No valid JSON\");\n      }\n\n      const json = unpackJsonData(value);\n      console.log(\"json: \", json);\n\n      const result = extractNodes(json);\n      console.log(\"🥖 Nodes: \", result.nodes);\n      console.log(\"🪒 edges: \", result.edges);\n\n      setNodes(result.nodes);\n      setEdges(result.edges);\n      setError(null);\n    } catch (err) {\n      console.error(\"⏰ ERROR in [useJsonGraph]handleChange\");\n      console.log(\"💬 :\", err);\n      setNodes([]);\n      setEdges([]);\n      setError(\"Invalid JSON\");\n    }\n  }\n\n  return { input, nodes, edges, error, handleChange };\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;;;;;;AAEO,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,SAAS,aAAa,KAAa;QACjC,SAAS;QACT,IAAI;YACF,IAAI,CAAC,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,EAAE,QAAQ;gBACvB,OAAO,QAAQ,KAAK,CAAC;YACvB;YAEA,MAAM,OAAO,CAAA,GAAA,4HAAA,CAAA,iBAAc,AAAD,EAAE;YAC5B,QAAQ,GAAG,CAAC,UAAU;YAEtB,MAAM,SAAS,CAAA,GAAA,+HAAA,CAAA,eAAY,AAAD,EAAE;YAC5B,QAAQ,GAAG,CAAC,cAAc,OAAO,KAAK;YACtC,QAAQ,GAAG,CAAC,cAAc,OAAO,KAAK;YAEtC,SAAS,OAAO,KAAK;YACrB,SAAS,OAAO,KAAK;YACrB,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,QAAQ,GAAG,CAAC,QAAQ;YACpB,SAAS,EAAE;YACX,SAAS,EAAE;YACX,SAAS;QACX;IACF;IAEA,OAAO;QAAE;QAAO;QAAO;QAAO;QAAO;IAAa;AACpD;GAjCgB","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/components/editors/JsonEditor.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Editor, EditorProps, OnMount } from \"@monaco-editor/react\";\nimport mockJson from \"@/assets/mock/jsonMock.json\";\nimport * as monacoEditor from \"monaco-editor\";\ninterface JSONEditorProps extends EditorProps {\n  handleChange: (val: string) => void;\n}\n\nexport default function JSONEditor({ handleChange, ...props }: JSONEditorProps) {\n  const [hasErrors, setHasErrors] = useState(false);\n  const editorRef = useRef<monacoEditor.editor.IStandaloneCodeEditor | null>(null);\n\n  const handleMount: OnMount = (editor, monaco) => {\n    editorRef.current = editor;\n\n    // ✅ HÄR använder du monaco korrekt (utan direkt import)\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: false,\n      schemas: [],\n    });\n\n    monaco.editor.onDidChangeMarkers(() => {\n      const model = editor.getModel();\n      if (!model) return;\n      const markers = monaco.editor.getModelMarkers({ resource: model.uri });\n      setHasErrors(markers.length > 0);\n    });\n  };\n\n  return (\n    <>\n      <Editor\n        height=\"100%\"\n        language=\"json\"\n        defaultValue={JSON.stringify(mockJson, null, 2)}\n        onMount={handleMount}\n        onChange={(val) => {\n          console.log(\"VAL: \", val);\n          if (!hasErrors && val) handleChange(val);\n          else {\n            console.error(\"Editor has error\");\n          }\n        }}\n        options={{\n          minimap: { enabled: false },\n          readOnly: false,\n          wordWrap: \"on\",\n          formatOnPaste: true,\n          formatOnType: true,\n          tabSize: 2,\n          scrollBeyondLastLine: false,\n        }}\n        {...props}\n      />\n      {hasErrors && <p style={{ color: \"red\" }}>Fix JSON errors before continuing.</p>}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;;;AAMe,SAAS,WAAW,EAAE,YAAY,EAAE,GAAG,OAAwB;;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoD;IAE3E,MAAM,cAAuB,CAAC,QAAQ;QACpC,UAAU,OAAO,GAAG;QAEpB,wDAAwD;QACxD,OAAO,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC;YACvD,UAAU;YACV,eAAe;YACf,SAAS,EAAE;QACb;QAEA,OAAO,MAAM,CAAC,kBAAkB,CAAC;YAC/B,MAAM,QAAQ,OAAO,QAAQ;YAC7B,IAAI,CAAC,OAAO;YACZ,MAAM,UAAU,OAAO,MAAM,CAAC,eAAe,CAAC;gBAAE,UAAU,MAAM,GAAG;YAAC;YACpE,aAAa,QAAQ,MAAM,GAAG;QAChC;IACF;IAEA,qBACE;;0BACE,6LAAC,gLAAA,CAAA,SAAM;gBACL,QAAO;gBACP,UAAS;gBACT,cAAc,KAAK,SAAS,CAAC,yGAAA,CAAA,UAAQ,EAAE,MAAM;gBAC7C,SAAS;gBACT,UAAU,CAAC;oBACT,QAAQ,GAAG,CAAC,SAAS;oBACrB,IAAI,CAAC,aAAa,KAAK,aAAa;yBAC/B;wBACH,QAAQ,KAAK,CAAC;oBAChB;gBACF;gBACA,SAAS;oBACP,SAAS;wBAAE,SAAS;oBAAM;oBAC1B,UAAU;oBACV,UAAU;oBACV,eAAe;oBACf,cAAc;oBACd,SAAS;oBACT,sBAAsB;gBACxB;gBACC,GAAG,KAAK;;;;;;YAEV,2BAAa,6LAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAG;;;;;;;;AAGhD;GAlDwB;KAAA","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/app/editor/page.tsx"],"sourcesContent":["// app/home/page.tsx\n\"use client\";\nimport styles from \"./editorStyle.module.css\";\nimport { Canvas, Node } from \"reaflow\";\n\nimport { useJsonGraph } from \"@/hooks/useJsonGraph\";\nimport { Fragment, useMemo } from \"react\";\nimport JSONEditor from \"@/components/editors/JsonEditor\";\nimport NodeContainer from \"@/components/NodeContainer/NodeContainer\";\nimport PrimativeValueList from \"@/components/Values/PrimativeValueList/PrimativeValueList\";\nimport PrimativeValue from \"@/components/Values/PrimativeValue/primativeValue\";\nimport BreakOutsList from \"@/components/BreakOuts/BreakOutList/BreakOutsList\";\nimport BreakOutItem from \"@/components/BreakOuts/BreakOutItem/BreakOutItem\";\n\nexport default function HomePage() {\n  const { nodes, edges, handleChange } = useJsonGraph();\n\n  const reaflowEdges = useMemo(() => {\n    return edges.map((edge) => ({\n      id: edge.id, // ✅ Redan rätt\n      from: edge.from, // ✅ Redan rätt\n      to: edge.to, // ✅ Redan rätt\n    }));\n  }, [edges]);\n\n  const reaflowNodes = useMemo(() => {\n    return nodes.map((node) => ({\n      id: node.id,\n      text: node.label,\n      data: node,\n    }));\n  }, [nodes]);\n\n  return (\n    <div className={styles.editor}>\n      <JSONEditor handleChange={handleChange} />\n      <Canvas\n        nodes={reaflowNodes}\n        edges={reaflowEdges}\n        direction=\"RIGHT\" // eller \"DOWN\", \"LEFT\", \"UP\"\n        layoutOptions={{\n          \"elk.algorithm\": \"layered\",\n          \"elk.direction\": \"RIGHT\",\n          \"elk.spacing.nodeNode\": \"80\",\n          \"elk.layered.spacing.nodeNodeBetweenLayers\": \"100\",\n        }}\n        node={CustomNode}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAEpB;AACA;AAEA;AACA;AACA;;;AANA;;;;;;AAae,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAElD,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0CAAE;YAC3B,OAAO,MAAM,GAAG;kDAAC,CAAC,OAAS,CAAC;wBAC1B,IAAI,KAAK,EAAE;wBACX,MAAM,KAAK,IAAI;wBACf,IAAI,KAAK,EAAE;oBACb,CAAC;;QACH;yCAAG;QAAC;KAAM;IAEV,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0CAAE;YAC3B,OAAO,MAAM,GAAG;kDAAC,CAAC,OAAS,CAAC;wBAC1B,IAAI,KAAK,EAAE;wBACX,MAAM,KAAK,KAAK;wBAChB,MAAM;oBACR,CAAC;;QACH;yCAAG;QAAC;KAAM;IAEV,qBACE,6LAAC;QAAI,WAAW,kJAAA,CAAA,UAAM,CAAC,MAAM;;0BAC3B,6LAAC,8IAAA,CAAA,UAAU;gBAAC,cAAc;;;;;;0BAC1B,6LAAC,2IAAA,CAAA,SAAM;gBACL,OAAO;gBACP,OAAO;gBACP,WAAU,QAAQ,6BAA6B;;gBAC/C,eAAe;oBACb,iBAAiB;oBACjB,iBAAiB;oBACjB,wBAAwB;oBACxB,6CAA6C;gBAC/C;gBACA,MAAM;;;;;;;;;;;;AAId;GApCwB;;QACiB,gIAAA,CAAA,eAAY;;;KAD7B","debugId":null}}]
}