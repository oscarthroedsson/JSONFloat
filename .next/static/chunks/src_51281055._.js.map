{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/editor/editorStyle.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"editor\": \"editorStyle-module__g5GrRa__editor\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/components/PrimativeValue/editors/JsonEditor.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Editor, EditorProps, OnMount } from \"@monaco-editor/react\";\nimport mockJson from \"@/assets/mock/jsonMock.json\";\nimport * as monacoEditor from \"monaco-editor\";\ninterface JSONEditorProps extends EditorProps {\n  handleChange: (val: string) => void;\n}\n\nexport default function JSONEditor({ handleChange, ...props }: JSONEditorProps) {\n  const [hasErrors, setHasErrors] = useState(false);\n  const editorRef = useRef<monacoEditor.editor.IStandaloneCodeEditor | null>(null);\n\n  const handleMount: OnMount = (editor, monaco) => {\n    editorRef.current = editor;\n\n    // ✅ HÄR använder du monaco korrekt (utan direkt import)\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: false,\n      schemas: [],\n    });\n\n    monaco.editor.onDidChangeMarkers(() => {\n      const model = editor.getModel();\n      if (!model) return;\n      const markers = monaco.editor.getModelMarkers({ resource: model.uri });\n      setHasErrors(markers.length > 0);\n    });\n  };\n\n  return (\n    <>\n      <Editor\n        height=\"100%\"\n        language=\"json\"\n        defaultValue={JSON.stringify(mockJson, null, 2)}\n        onMount={handleMount}\n        onChange={(val) => {\n          console.log(\"VAL: \", val);\n          if (!hasErrors && val) handleChange(val);\n          else {\n            console.error(\"Editor has error\");\n          }\n        }}\n        options={{\n          minimap: { enabled: false },\n          readOnly: false,\n          wordWrap: \"on\",\n          formatOnPaste: true,\n          formatOnType: true,\n          tabSize: 2,\n          scrollBeyondLastLine: false,\n        }}\n        {...props}\n      />\n      {hasErrors && <p style={{ color: \"red\" }}>Fix JSON errors before continuing.</p>}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;;;AAMe,SAAS,WAAW,EAAE,YAAY,EAAE,GAAG,OAAwB;;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoD;IAE3E,MAAM,cAAuB,CAAC,QAAQ;QACpC,UAAU,OAAO,GAAG;QAEpB,wDAAwD;QACxD,OAAO,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC;YACvD,UAAU;YACV,eAAe;YACf,SAAS,EAAE;QACb;QAEA,OAAO,MAAM,CAAC,kBAAkB,CAAC;YAC/B,MAAM,QAAQ,OAAO,QAAQ;YAC7B,IAAI,CAAC,OAAO;YACZ,MAAM,UAAU,OAAO,MAAM,CAAC,eAAe,CAAC;gBAAE,UAAU,MAAM,GAAG;YAAC;YACpE,aAAa,QAAQ,MAAM,GAAG;QAChC;IACF;IAEA,qBACE;;0BACE,6LAAC,gLAAA,CAAA,SAAM;gBACL,QAAO;gBACP,UAAS;gBACT,cAAc,KAAK,SAAS,CAAC,yGAAA,CAAA,UAAQ,EAAE,MAAM;gBAC7C,SAAS;gBACT,UAAU,CAAC;oBACT,QAAQ,GAAG,CAAC,SAAS;oBACrB,IAAI,CAAC,aAAa,KAAK,aAAa;yBAC/B;wBACH,QAAQ,KAAK,CAAC;oBAChB;gBACF;gBACA,SAAS;oBACP,SAAS;wBAAE,SAAS;oBAAM;oBAC1B,UAAU;oBACV,UAAU;oBACV,eAAe;oBACf,cAAc;oBACd,SAAS;oBACT,sBAAsB;gBACxB;gBACC,GAAG,KAAK;;;;;;YAEV,2BAAa,6LAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAG;;;;;;;;AAGhD;GAlDwB;KAAA","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/hooks/useJsonGraph.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Recursively normalizes a JSON object:\n * - Parses JSON strings into objects or arrays if applicable.\n * - Converts numeric strings into numbers.\n * - Handles nested objects and arrays.\n * - Returns all other values as they are.\n *\n * @param data - The input data to be normalized (object or JSON string).\n * @returns The normalized object with correct data types.\n */\nexport function unpackJsonData<T>(data: any): T {\n  // If input is a JSON string, parse it into an object/array\n  if (isJsonString(data)) {\n    data = JSON.parse(data);\n  }\n\n  if (isArray(data)) {\n    return data.map((item: any) => unpackJsonData(item)) as T;\n  }\n\n  if (isObject(data)) {\n    const result: any = {};\n    for (const [key, value] of Object.entries(data)) {\n      if (isJsonString(value)) {\n        result[key] = JSON.parse(value as string);\n      } else if (isNumericString(value)) {\n        result[key] = Number(value);\n      } else if (isObject(value) || isArray(value)) {\n        result[key] = unpackJsonData(value);\n      } else {\n        result[key] = value; // Keep primitive values as they are\n      }\n    }\n    return result as T;\n  }\n\n  // Return primitive values unchanged\n  return data as T;\n}\n\n// Checks if a value is an object (but not an array or null).\nfunction isObject(value: unknown): boolean {\n  return value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n// Checks if a value is an array.\nfunction isArray(value: unknown): boolean {\n  return Array.isArray(value);\n}\n\n// Checks if a value is a string.\nfunction isString(value: unknown): boolean {\n  return typeof value === \"string\";\n}\n\n// Checks if a value is a numeric string (integer or decimal).\nfunction isNumericString(value: unknown): boolean {\n  if (!isString(value)) return false;\n  const str = value as string;\n  return /^\\d+(\\.\\d+)?$/.test(str);\n}\n\n// Checks if a value is a JSON string.\nfunction isJsonString(value: unknown): boolean {\n  if (!isString(value)) return false;\n  const str = value as string;\n\n  // Skip if it's just a number or simple string\n  if (!/^[\\{\\[]/.test(str.trim())) return false;\n\n  try {\n    const parsed = JSON.parse(str);\n    return typeof parsed === \"object\" && parsed !== null;\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":"AAAA,qDAAqD,GAErD;;;;;;;;;CASC;;;AACM,SAAS,eAAkB,IAAS;IACzC,2DAA2D;IAC3D,IAAI,aAAa,OAAO;QACtB,OAAO,KAAK,KAAK,CAAC;IACpB;IAEA,IAAI,QAAQ,OAAO;QACjB,OAAO,KAAK,GAAG,CAAC,CAAC,OAAc,eAAe;IAChD;IAEA,IAAI,SAAS,OAAO;QAClB,MAAM,SAAc,CAAC;QACrB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,MAAO;YAC/C,IAAI,aAAa,QAAQ;gBACvB,MAAM,CAAC,IAAI,GAAG,KAAK,KAAK,CAAC;YAC3B,OAAO,IAAI,gBAAgB,QAAQ;gBACjC,MAAM,CAAC,IAAI,GAAG,OAAO;YACvB,OAAO,IAAI,SAAS,UAAU,QAAQ,QAAQ;gBAC5C,MAAM,CAAC,IAAI,GAAG,eAAe;YAC/B,OAAO;gBACL,MAAM,CAAC,IAAI,GAAG,OAAO,oCAAoC;YAC3D;QACF;QACA,OAAO;IACT;IAEA,oCAAoC;IACpC,OAAO;AACT;AAEA,6DAA6D;AAC7D,SAAS,SAAS,KAAc;IAC9B,OAAO,UAAU,QAAQ,OAAO,UAAU,YAAY,CAAC,MAAM,OAAO,CAAC;AACvE;AAEA,iCAAiC;AACjC,SAAS,QAAQ,KAAc;IAC7B,OAAO,MAAM,OAAO,CAAC;AACvB;AAEA,iCAAiC;AACjC,SAAS,SAAS,KAAc;IAC9B,OAAO,OAAO,UAAU;AAC1B;AAEA,8DAA8D;AAC9D,SAAS,gBAAgB,KAAc;IACrC,IAAI,CAAC,SAAS,QAAQ,OAAO;IAC7B,MAAM,MAAM;IACZ,OAAO,gBAAgB,IAAI,CAAC;AAC9B;AAEA,sCAAsC;AACtC,SAAS,aAAa,KAAc;IAClC,IAAI,CAAC,SAAS,QAAQ,OAAO;IAC7B,MAAM,MAAM;IAEZ,8CAA8C;IAC9C,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,KAAK,OAAO;IAExC,IAAI;QACF,MAAM,SAAS,KAAK,KAAK,CAAC;QAC1B,OAAO,OAAO,WAAW,YAAY,WAAW;IAClD,EAAE,OAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/app/editor/page.tsx"],"sourcesContent":["// app/home/page.tsx\n\"use client\";\nimport styles from \"./editorStyle.module.css\";\nimport { Canvas } from \"reaflow\";\nimport JSONEditor from \"@/components/PrimativeValue/editors/JsonEditor\";\n\nimport { useJsonGraph } from \"@/hooks/useJsonGraph\";\nimport { useEffect } from \"react\";\n\nexport default function HomePage() {\n  const { nodes, handleChange } = useJsonGraph();\n\n  useEffect(() => {\n    console.log(\"nodes: \", nodes);\n  }, [nodes]);\n\n  return (\n    <div className={styles.editor}>\n      <JSONEditor handleChange={handleChange} />\n      <Canvas></Canvas>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAEpB;AACA;AACA;AAEA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,QAAQ,GAAG,CAAC,WAAW;QACzB;6BAAG;QAAC;KAAM;IAEV,qBACE,6LAAC;QAAI,WAAW,kJAAA,CAAA,UAAM,CAAC,MAAM;;0BAC3B,6LAAC,gKAAA,CAAA,UAAU;gBAAC,cAAc;;;;;;0BAC1B,6LAAC,2IAAA,CAAA,SAAM;;;;;;;;;;;AAGb;GAbwB;;QACU,gIAAA,CAAA,eAAY;;;KADtB","debugId":null}}]
}