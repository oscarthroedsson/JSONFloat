{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/scala/scala.ts\nvar conf = {\n  /*\n   * `...` is allowed as an identifier.\n   * $ is allowed in identifiers.\n   * unary_<op> is allowed as an identifier.\n   * <name>_= is allowed as an identifier.\n   */\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".scala\",\n  // We can't easily add everything from Dotty, but we can at least add some of its keywords\n  keywords: [\n    \"asInstanceOf\",\n    \"catch\",\n    \"class\",\n    \"classOf\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"extends\",\n    \"finally\",\n    \"for\",\n    \"foreach\",\n    \"forSome\",\n    \"if\",\n    \"import\",\n    \"isInstanceOf\",\n    \"macro\",\n    \"match\",\n    \"new\",\n    \"object\",\n    \"package\",\n    \"return\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"type\",\n    \"until\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // Dotty-specific:\n    \"given\",\n    \"enum\",\n    \"then\"\n  ],\n  // Dotty-specific:\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\n  modifiers: [\n    \"abstract\",\n    \"final\",\n    \"implicit\",\n    \"lazy\",\n    \"override\",\n    \"private\",\n    \"protected\",\n    \"sealed\"\n  ],\n  // Dotty-specific:\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n  type: /(?:[A-Z][\\w$]*)/,\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n  digits: /\\d+(_+\\d+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  // C# style strings\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // strings\n      [/\\braw\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstringt\" }],\n      [/\\braw\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstring\" }],\n      [/\\bs\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstringt\" }],\n      [/\\bs\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }],\n      [/\\bf\"\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstringt\" }],\n      [/\\bf\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstring\" }],\n      [/\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringt\" }],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      // numbers\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"],\n      [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)[lL]?/, \"number\", \"@allowMethod\"],\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\n      // identifiers and keywords\n      [/\\bimport\\b/, \"keyword\", \"@import\"],\n      [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]],\n      [/\\bcase\\b/, \"keyword\", \"@case\"],\n      [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"],\n      [\n        /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\n        [\"keyword\", \"white\", \"identifier\"]\n      ],\n      [/@name(?=[ \\t]*:(?!:))/, \"variable\"],\n      [/(\\.)(@name|@symbols)/, [\"operator\", { token: \"@rematch\", next: \"@allowMethod\" }]],\n      [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]],\n      [\n        /@name/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@softKeywords\": \"keyword\",\n            \"@modifiers\": \"keyword.modifier\",\n            \"@softModifiers\": \"keyword.modifier\",\n            \"@constants\": {\n              token: \"constant\",\n              next: \"@allowMethod\"\n            },\n            \"@default\": {\n              token: \"identifier\",\n              next: \"@allowMethod\"\n            }\n          }\n        }\n      ],\n      [/@type/, \"type\", \"@allowMethod\"],\n      // whitespace\n      { include: \"@whitespace\" },\n      // @ annotations.\n      [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\n      // delimiters and operators\n      [/[{(]/, \"@brackets\"],\n      [/[})]/, \"@brackets\", \"@allowMethod\"],\n      [/\\[/, \"operator.square\"],\n      [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"],\n      [/]/, \"operator.square\"],\n      [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"],\n      [/@symbols/, \"operator\"],\n      // delimiter: after number because of .\\d floats\n      [/[;,\\.]/, \"delimiter\"],\n      // symbols\n      [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\n      // characters\n      [/'[^\\\\']'/, \"string\", \"@allowMethod\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", { token: \"string\", next: \"@allowMethod\" }]],\n      [/'/, \"string.invalid\"]\n    ],\n    import: [\n      [/;/, \"delimiter\", \"@pop\"],\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/@name|@type/, \"type\"],\n      [/[(){}]/, \"@brackets\"],\n      [/[[\\]]/, \"operator.square\"],\n      [/[\\.,]/, \"delimiter\"]\n    ],\n    allowMethod: [\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"],\n      [\n        /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\", next: \"@pop\" },\n            \"->|<-|>:|<:|<%\": { token: \"keyword\", next: \"@pop\" },\n            \"@default\": { token: \"@rematch\", next: \"@pop\" }\n          }\n        }\n      ],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      // nested comment\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    case: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bif\\b|=>/, \"keyword\", \"@pop\"],\n      [/`[^`]+`/, \"identifier\", \"@allowMethod\"],\n      [/@name/, \"variable\", \"@allowMethod\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      { include: \"@root\" }\n    ],\n    vardef: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"],\n      [/@name/, \"variable\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      [/=|:(?!:)/, \"operator\", \"@pop\"],\n      [/$/, \"white\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    string: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    stringt: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    fstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    fstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    sstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    sstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], { include: \"@root\" }],\n    rawstring: [\n      [/[^\"]/, \"string\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    rawstringt: [\n      [/[^\"]/, \"string\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}