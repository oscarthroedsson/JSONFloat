{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/protobuf/protobuf.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/protobuf/protobuf.ts\nvar namedLiterals = [\"true\", \"false\"];\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"<\", \">\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\"] }\n  ],\n  autoCloseBefore: \".,=}])>' \\n\t\",\n  indentationRules: {\n    increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"),\n    decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\")\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".proto\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  keywords: [\n    \"syntax\",\n    \"import\",\n    \"weak\",\n    \"public\",\n    \"package\",\n    \"option\",\n    \"repeated\",\n    \"oneof\",\n    \"map\",\n    \"reserved\",\n    \"to\",\n    \"max\",\n    \"enum\",\n    \"message\",\n    \"service\",\n    \"rpc\",\n    \"stream\",\n    \"returns\",\n    \"package\",\n    \"optional\",\n    \"true\",\n    \"false\"\n  ],\n  builtinTypes: [\n    \"double\",\n    \"float\",\n    \"int32\",\n    \"int64\",\n    \"uint32\",\n    \"uint64\",\n    \"sint32\",\n    \"sint64\",\n    \"fixed32\",\n    \"fixed64\",\n    \"sfixed32\",\n    \"sfixed64\",\n    \"bool\",\n    \"string\",\n    \"bytes\"\n  ],\n  operators: [\"=\", \"+\", \"-\"],\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\\\${)`,\n  identifier: /[a-zA-Z]\\w*/,\n  fullIdentifier: /@identifier(?:\\s*\\.\\s*@identifier)*/,\n  optionName: /(?:@identifier|\\(\\s*@fullIdentifier\\s*\\))(?:\\s*\\.\\s*@identifier)*/,\n  messageName: /@identifier/,\n  enumName: /@identifier/,\n  messageType: /\\.?\\s*(?:@identifier\\s*\\.\\s*)*@messageName/,\n  enumType: /\\.?\\s*(?:@identifier\\s*\\.\\s*)*@enumName/,\n  floatLit: /[0-9]+\\s*\\.\\s*[0-9]*(?:@exponent)?|[0-9]+@exponent|\\.[0-9]+(?:@exponent)?/,\n  exponent: /[eE]\\s*[+-]?\\s*[0-9]+/,\n  boolLit: /true\\b|false\\b/,\n  decimalLit: /[1-9][0-9]*/,\n  octalLit: /0[0-7]*/,\n  hexLit: /0[xX][0-9a-fA-F]+/,\n  type: /double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes|@messageType|@enumType/,\n  keyType: /int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/syntax/, \"keyword\"],\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [\n        /(\")(proto3)(\")/,\n        [\"string.quote\", \"string\", { token: \"string.quote\", switchTo: \"@topLevel.proto3\" }]\n      ],\n      [\n        /(\")(proto2)(\")/,\n        [\"string.quote\", \"string\", { token: \"string.quote\", switchTo: \"@topLevel.proto2\" }]\n      ],\n      [\n        // If no `syntax` provided, regarded as proto2\n        /.*?/,\n        { token: \"\", switchTo: \"@topLevel.proto2\" }\n      ]\n    ],\n    topLevel: [\n      // whitespace\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/[;.]/, \"delimiter\"],\n      [\n        /@fullIdentifier/,\n        {\n          cases: {\n            option: { token: \"keyword\", next: \"@option.$S2\" },\n            enum: { token: \"keyword\", next: \"@enumDecl.$S2\" },\n            message: { token: \"keyword\", next: \"@messageDecl.$S2\" },\n            service: { token: \"keyword\", next: \"@serviceDecl.$S2\" },\n            extend: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@extendDecl.$S2\" }\n              }\n            },\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    enumDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@enumBody.$S2\" }]\n    ],\n    enumBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [/option\\b/, \"keyword\", \"@option.$S2\"],\n      [/@identifier/, \"identifier\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    messageDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@messageBody.$S2\" }]\n    ],\n    messageBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [\n        \"(map)(s*)(<)\",\n        [\"keyword\", \"white\", { token: \"@brackets\", bracket: \"@open\", next: \"@map.$S2\" }]\n      ],\n      [\n        /@identifier/,\n        {\n          cases: {\n            option: { token: \"keyword\", next: \"@option.$S2\" },\n            enum: { token: \"keyword\", next: \"@enumDecl.$S2\" },\n            message: { token: \"keyword\", next: \"@messageDecl.$S2\" },\n            oneof: { token: \"keyword\", next: \"@oneofDecl.$S2\" },\n            extensions: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@reserved.$S2\" }\n              }\n            },\n            reserved: { token: \"keyword\", next: \"@reserved.$S2\" },\n            \"(?:repeated|optional)\": { token: \"keyword\", next: \"@field.$S2\" },\n            required: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@field.$S2\" }\n              }\n            },\n            \"$S2==proto3\": { token: \"@rematch\", next: \"@field.$S2\" }\n          }\n        }\n      ],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    extendDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@extendBody.$S2\" }]\n    ],\n    extendBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/(?:repeated|optional|required)/, \"keyword\", \"@field.$S2\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    options: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\"],\n      [/\\]/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    option: [\n      { include: \"@whitespace\" },\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\", \"@pop\"]\n    ],\n    oneofDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@oneofBody.$S2\" }]\n    ],\n    oneofBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/(@identifier)(\\s*)(=)/, [\"identifier\", \"white\", \"delimiter\"]],\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    reserved: [\n      { include: \"@whitespace\" },\n      [/,/, \"delimiter\"],\n      [/;/, \"delimiter\", \"@pop\"],\n      { include: \"@constant\" },\n      [/to\\b|max\\b/, \"keyword\"]\n    ],\n    map: [\n      { include: \"@whitespace\" },\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/,/, \"delimiter\"],\n      [/>/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"identifier\" }]\n    ],\n    field: [\n      { include: \"@whitespace\" },\n      [\n        \"group\",\n        {\n          cases: {\n            \"$S2==proto2\": { token: \"keyword\", switchTo: \"@groupDecl.$S2\" }\n          }\n        }\n      ],\n      [/(@identifier)(\\s*)(=)/, [\"identifier\", \"white\", { token: \"delimiter\", next: \"@pop\" }]],\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ]\n    ],\n    groupDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [\"=\", \"operator\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@messageBody.$S2\" }],\n      { include: \"@constant\" }\n    ],\n    type: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\", \"@pop\"],\n      [/./, \"delimiter\"]\n    ],\n    identifier: [{ include: \"@whitespace\" }, [/@identifier/, \"identifier\", \"@pop\"]],\n    serviceDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@serviceBody.$S2\" }]\n    ],\n    serviceBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/option\\b/, \"keyword\", \"@option.$S2\"],\n      [/rpc\\b/, \"keyword\", \"@rpc.$S2\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    rpc: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/\\(/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@request.$S2\" }],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", next: \"@methodOptions.$S2\" }],\n      [/;/, \"delimiter\", \"@pop\"]\n    ],\n    request: [\n      { include: \"@whitespace\" },\n      [\n        /@messageType/,\n        {\n          cases: {\n            stream: { token: \"keyword\", next: \"@type.$S2\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\)/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"@returns.$S2\" }]\n    ],\n    returns: [\n      { include: \"@whitespace\" },\n      [/returns\\b/, \"keyword\"],\n      [/\\(/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@response.$S2\" }]\n    ],\n    response: [\n      { include: \"@whitespace\" },\n      [\n        /@messageType/,\n        {\n          cases: {\n            stream: { token: \"keyword\", next: \"@type.$S2\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\)/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"@rpc.$S2\" }]\n    ],\n    methodOptions: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [\"option\", \"keyword\"],\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\"],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      // nested comment\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    stringSingle: [\n      [/[^\\\\']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    constant: [\n      [\"@boolLit\", \"keyword.constant\"],\n      [\"@hexLit\", \"number.hex\"],\n      [\"@octalLit\", \"number.octal\"],\n      [\"@decimalLit\", \"number\"],\n      [\"@floatLit\", \"number.float\"],\n      [/(\"([^\"\\\\]|\\\\.)*|'([^'\\\\]|\\\\.)*)$/, \"string.invalid\"],\n      // non-terminated string\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringSingle\" }],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", next: \"@prototext\" }],\n      [/identifier/, \"identifier\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    prototext: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/@identifier/, \"identifier\"],\n      [/[:;]/, \"delimiter\"],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}