{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/domFontInfo.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FastDomNode } from '../../../base/browser/fastDomNode.js';\nexport function applyFontInfo(domNode, fontInfo) {\n    if (domNode instanceof FastDomNode) {\n        domNode.setFontFamily(fontInfo.getMassagedFontFamily());\n        domNode.setFontWeight(fontInfo.fontWeight);\n        domNode.setFontSize(fontInfo.fontSize);\n        domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings);\n        domNode.setFontVariationSettings(fontInfo.fontVariationSettings);\n        domNode.setLineHeight(fontInfo.lineHeight);\n        domNode.setLetterSpacing(fontInfo.letterSpacing);\n    }\n    else {\n        domNode.style.fontFamily = fontInfo.getMassagedFontFamily();\n        domNode.style.fontWeight = fontInfo.fontWeight;\n        domNode.style.fontSize = fontInfo.fontSize + 'px';\n        domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n        domNode.style.fontVariationSettings = fontInfo.fontVariationSettings;\n        domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n        domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;;AACO,SAAS,cAAc,OAAO,EAAE,QAAQ;IAC3C,IAAI,mBAAmB,+KAAA,CAAA,cAAW,EAAE;QAChC,QAAQ,aAAa,CAAC,SAAS,qBAAqB;QACpD,QAAQ,aAAa,CAAC,SAAS,UAAU;QACzC,QAAQ,WAAW,CAAC,SAAS,QAAQ;QACrC,QAAQ,sBAAsB,CAAC,SAAS,mBAAmB;QAC3D,QAAQ,wBAAwB,CAAC,SAAS,qBAAqB;QAC/D,QAAQ,aAAa,CAAC,SAAS,UAAU;QACzC,QAAQ,gBAAgB,CAAC,SAAS,aAAa;IACnD,OACK;QACD,QAAQ,KAAK,CAAC,UAAU,GAAG,SAAS,qBAAqB;QACzD,QAAQ,KAAK,CAAC,UAAU,GAAG,SAAS,UAAU;QAC9C,QAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAG;QAC7C,QAAQ,KAAK,CAAC,mBAAmB,GAAG,SAAS,mBAAmB;QAChE,QAAQ,KAAK,CAAC,qBAAqB,GAAG,SAAS,qBAAqB;QACpE,QAAQ,KAAK,CAAC,UAAU,GAAG,SAAS,UAAU,GAAG;QACjD,QAAQ,KAAK,CAAC,aAAa,GAAG,SAAS,aAAa,GAAG;IAC3D;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { applyFontInfo } from './domFontInfo.js';\nexport class CharWidthRequest {\n    constructor(chr, type) {\n        this.chr = chr;\n        this.type = type;\n        this.width = 0;\n    }\n    fulfill(width) {\n        this.width = width;\n    }\n}\nclass DomCharWidthReader {\n    constructor(bareFontInfo, requests) {\n        this._bareFontInfo = bareFontInfo;\n        this._requests = requests;\n        this._container = null;\n        this._testElements = null;\n    }\n    read(targetWindow) {\n        // Create a test container with all these test elements\n        this._createDomElements();\n        // Add the container to the DOM\n        targetWindow.document.body.appendChild(this._container);\n        // Read character widths\n        this._readFromDomElements();\n        // Remove the container from the DOM\n        this._container?.remove();\n        this._container = null;\n        this._testElements = null;\n    }\n    _createDomElements() {\n        const container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.top = '-50000px';\n        container.style.width = '50000px';\n        const regularDomNode = document.createElement('div');\n        applyFontInfo(regularDomNode, this._bareFontInfo);\n        container.appendChild(regularDomNode);\n        const boldDomNode = document.createElement('div');\n        applyFontInfo(boldDomNode, this._bareFontInfo);\n        boldDomNode.style.fontWeight = 'bold';\n        container.appendChild(boldDomNode);\n        const italicDomNode = document.createElement('div');\n        applyFontInfo(italicDomNode, this._bareFontInfo);\n        italicDomNode.style.fontStyle = 'italic';\n        container.appendChild(italicDomNode);\n        const testElements = [];\n        for (const request of this._requests) {\n            let parent;\n            if (request.type === 0 /* CharWidthRequestType.Regular */) {\n                parent = regularDomNode;\n            }\n            if (request.type === 2 /* CharWidthRequestType.Bold */) {\n                parent = boldDomNode;\n            }\n            if (request.type === 1 /* CharWidthRequestType.Italic */) {\n                parent = italicDomNode;\n            }\n            parent.appendChild(document.createElement('br'));\n            const testElement = document.createElement('span');\n            DomCharWidthReader._render(testElement, request);\n            parent.appendChild(testElement);\n            testElements.push(testElement);\n        }\n        this._container = container;\n        this._testElements = testElements;\n    }\n    static _render(testElement, request) {\n        if (request.chr === ' ') {\n            let htmlString = '\\u00a0';\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                htmlString += htmlString;\n            }\n            testElement.innerText = htmlString;\n        }\n        else {\n            let testString = request.chr;\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                testString += testString;\n            }\n            testElement.textContent = testString;\n        }\n    }\n    _readFromDomElements() {\n        for (let i = 0, len = this._requests.length; i < len; i++) {\n            const request = this._requests[i];\n            const testElement = this._testElements[i];\n            request.fulfill(testElement.offsetWidth / 256);\n        }\n    }\n}\nexport function readCharWidths(targetWindow, bareFontInfo, requests) {\n    const reader = new DomCharWidthReader(bareFontInfo, requests);\n    reader.read(targetWindow);\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;AAC9F;;AACO,MAAM;IACT,YAAY,GAAG,EAAE,IAAI,CAAE;QACnB,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;IACjB;IACA,QAAQ,KAAK,EAAE;QACX,IAAI,CAAC,KAAK,GAAG;IACjB;AACJ;AACA,MAAM;IACF,YAAY,YAAY,EAAE,QAAQ,CAAE;QAChC,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,aAAa,GAAG;IACzB;IACA,KAAK,YAAY,EAAE;QACf,uDAAuD;QACvD,IAAI,CAAC,kBAAkB;QACvB,+BAA+B;QAC/B,aAAa,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU;QACtD,wBAAwB;QACxB,IAAI,CAAC,oBAAoB;QACzB,oCAAoC;QACpC,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,aAAa,GAAG;IACzB;IACA,qBAAqB;QACjB,MAAM,YAAY,SAAS,aAAa,CAAC;QACzC,UAAU,KAAK,CAAC,QAAQ,GAAG;QAC3B,UAAU,KAAK,CAAC,GAAG,GAAG;QACtB,UAAU,KAAK,CAAC,KAAK,GAAG;QACxB,MAAM,iBAAiB,SAAS,aAAa,CAAC;QAC9C,CAAA,GAAA,2LAAA,CAAA,gBAAa,AAAD,EAAE,gBAAgB,IAAI,CAAC,aAAa;QAChD,UAAU,WAAW,CAAC;QACtB,MAAM,cAAc,SAAS,aAAa,CAAC;QAC3C,CAAA,GAAA,2LAAA,CAAA,gBAAa,AAAD,EAAE,aAAa,IAAI,CAAC,aAAa;QAC7C,YAAY,KAAK,CAAC,UAAU,GAAG;QAC/B,UAAU,WAAW,CAAC;QACtB,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAC7C,CAAA,GAAA,2LAAA,CAAA,gBAAa,AAAD,EAAE,eAAe,IAAI,CAAC,aAAa;QAC/C,cAAc,KAAK,CAAC,SAAS,GAAG;QAChC,UAAU,WAAW,CAAC;QACtB,MAAM,eAAe,EAAE;QACvB,KAAK,MAAM,WAAW,IAAI,CAAC,SAAS,CAAE;YAClC,IAAI;YACJ,IAAI,QAAQ,IAAI,KAAK,EAAE,gCAAgC,KAAI;gBACvD,SAAS;YACb;YACA,IAAI,QAAQ,IAAI,KAAK,EAAE,6BAA6B,KAAI;gBACpD,SAAS;YACb;YACA,IAAI,QAAQ,IAAI,KAAK,EAAE,+BAA+B,KAAI;gBACtD,SAAS;YACb;YACA,OAAO,WAAW,CAAC,SAAS,aAAa,CAAC;YAC1C,MAAM,cAAc,SAAS,aAAa,CAAC;YAC3C,mBAAmB,OAAO,CAAC,aAAa;YACxC,OAAO,WAAW,CAAC;YACnB,aAAa,IAAI,CAAC;QACtB;QACA,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,aAAa,GAAG;IACzB;IACA,OAAO,QAAQ,WAAW,EAAE,OAAO,EAAE;QACjC,IAAI,QAAQ,GAAG,KAAK,KAAK;YACrB,IAAI,aAAa;YACjB,mCAAmC;YACnC,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;gBACxB,cAAc;YAClB;YACA,YAAY,SAAS,GAAG;QAC5B,OACK;YACD,IAAI,aAAa,QAAQ,GAAG;YAC5B,mCAAmC;YACnC,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;gBACxB,cAAc;YAClB;YACA,YAAY,WAAW,GAAG;QAC9B;IACJ;IACA,uBAAuB;QACnB,IAAK,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,KAAK,IAAK;YACvD,MAAM,UAAU,IAAI,CAAC,SAAS,CAAC,EAAE;YACjC,MAAM,cAAc,IAAI,CAAC,aAAa,CAAC,EAAE;YACzC,QAAQ,OAAO,CAAC,YAAY,WAAW,GAAG;QAC9C;IACJ;AACJ;AACO,SAAS,eAAe,YAAY,EAAE,YAAY,EAAE,QAAQ;IAC/D,MAAM,SAAS,IAAI,mBAAmB,cAAc;IACpD,OAAO,IAAI,CAAC;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/fontMeasurements.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindowId } from '../../../base/browser/dom.js';\nimport { PixelRatio } from '../../../base/browser/pixelRatio.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\nexport class FontMeasurementsImpl extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._cache = new Map();\n        this._evictUntrustedReadingsTimeout = -1;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    dispose() {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        super.dispose();\n    }\n    /**\n     * Clear all cached font information and trigger a change event.\n     */\n    clearAllFontInfos() {\n        this._cache.clear();\n        this._onDidChange.fire();\n    }\n    _ensureCache(targetWindow) {\n        const windowId = getWindowId(targetWindow);\n        let cache = this._cache.get(windowId);\n        if (!cache) {\n            cache = new FontMeasurementsCache();\n            this._cache.set(windowId, cache);\n        }\n        return cache;\n    }\n    _writeToCache(targetWindow, item, value) {\n        const cache = this._ensureCache(targetWindow);\n        cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = targetWindow.setTimeout(() => {\n                this._evictUntrustedReadingsTimeout = -1;\n                this._evictUntrustedReadings(targetWindow);\n            }, 5000);\n        }\n    }\n    _evictUntrustedReadings(targetWindow) {\n        const cache = this._ensureCache(targetWindow);\n        const values = cache.getValues();\n        let somethingRemoved = false;\n        for (const item of values) {\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    }\n    /**\n     * Read font information.\n     */\n    readFontInfo(targetWindow, bareFontInfo) {\n        const cache = this._ensureCache(targetWindow);\n        if (!cache.has(bareFontInfo)) {\n            let readConfig = this._actualReadFontInfo(targetWindow, bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new FontInfo({\n                    pixelRatio: PixelRatio.getInstance(targetWindow).value,\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    fontFeatureSettings: readConfig.fontFeatureSettings,\n                    fontVariationSettings: readConfig.fontVariationSettings,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    middotWidth: Math.max(readConfig.middotWidth, 5),\n                    wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(targetWindow, bareFontInfo, readConfig);\n        }\n        return cache.get(bareFontInfo);\n    }\n    _createRequest(chr, type, all, monospace) {\n        const result = new CharWidthRequest(chr, type);\n        all.push(result);\n        monospace?.push(result);\n        return result;\n    }\n    _actualReadFontInfo(targetWindow, bareFontInfo) {\n        const all = [];\n        const monospace = [];\n        const typicalHalfwidthCharacter = this._createRequest('n', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const typicalFullwidthCharacter = this._createRequest('\\uff4d', 0 /* CharWidthRequestType.Regular */, all, null);\n        const space = this._createRequest(' ', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit0 = this._createRequest('0', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit1 = this._createRequest('1', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit2 = this._createRequest('2', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit3 = this._createRequest('3', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit4 = this._createRequest('4', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit5 = this._createRequest('5', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit6 = this._createRequest('6', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit7 = this._createRequest('7', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit8 = this._createRequest('8', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit9 = this._createRequest('9', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // monospace test: used for whitespace rendering\n        const rightwardsArrow = this._createRequest('→', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const halfwidthRightwardsArrow = this._createRequest('￫', 0 /* CharWidthRequestType.Regular */, all, null);\n        // U+00B7 - MIDDLE DOT\n        const middot = this._createRequest('·', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        const wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), 0 /* CharWidthRequestType.Regular */, all, null);\n        // monospace test: some characters\n        const monospaceTestChars = '|/-_ilm%';\n        for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n            this._createRequest(monospaceTestChars.charAt(i), 0 /* CharWidthRequestType.Regular */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 1 /* CharWidthRequestType.Italic */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 2 /* CharWidthRequestType.Bold */, all, monospace);\n        }\n        readCharWidths(targetWindow, bareFontInfo, all);\n        const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        let isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n        const referenceWidth = monospace[0].width;\n        for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n            const diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        let canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        return new FontInfo({\n            pixelRatio: PixelRatio.getInstance(targetWindow).value,\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n            fontVariationSettings: bareFontInfo.fontVariationSettings,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            middotWidth: middot.width,\n            wsmiddotWidth: wsmiddotWidth.width,\n            maxDigitWidth: maxDigitWidth\n        }, true);\n    }\n}\nclass FontMeasurementsCache {\n    constructor() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    has(item) {\n        const itemId = item.getId();\n        return !!this._values[itemId];\n    }\n    get(item) {\n        const itemId = item.getId();\n        return this._values[itemId];\n    }\n    put(item, value) {\n        const itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    }\n    remove(item) {\n        const itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    }\n    getValues() {\n        return Object.keys(this._keys).map(id => this._values[id]);\n    }\n}\nexport const FontMeasurements = new FontMeasurementsImpl();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { getWindow, scheduleAtNextAnimationFrame } from '../../../base/browser/dom.js';\nexport class ElementSizeObserver extends Disposable {\n    constructor(referenceDomElement, dimension) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._referenceDomElement = referenceDomElement;\n        this._width = -1;\n        this._height = -1;\n        this._resizeObserver = null;\n        this.measureReferenceDomElement(false, dimension);\n    }\n    dispose() {\n        this.stopObserving();\n        super.dispose();\n    }\n    getWidth() {\n        return this._width;\n    }\n    getHeight() {\n        return this._height;\n    }\n    startObserving() {\n        if (!this._resizeObserver && this._referenceDomElement) {\n            // We want to react to the resize observer only once per animation frame\n            // The first time the resize observer fires, we will react to it immediately.\n            // Otherwise we will postpone to the next animation frame.\n            // We'll use `observeContentRect` to store the content rect we received.\n            let observedDimenstion = null;\n            const observeNow = () => {\n                if (observedDimenstion) {\n                    this.observe({ width: observedDimenstion.width, height: observedDimenstion.height });\n                }\n                else {\n                    this.observe();\n                }\n            };\n            let shouldObserve = false;\n            let alreadyObservedThisAnimationFrame = false;\n            const update = () => {\n                if (shouldObserve && !alreadyObservedThisAnimationFrame) {\n                    try {\n                        shouldObserve = false;\n                        alreadyObservedThisAnimationFrame = true;\n                        observeNow();\n                    }\n                    finally {\n                        scheduleAtNextAnimationFrame(getWindow(this._referenceDomElement), () => {\n                            alreadyObservedThisAnimationFrame = false;\n                            update();\n                        });\n                    }\n                }\n            };\n            this._resizeObserver = new ResizeObserver((entries) => {\n                if (entries && entries[0] && entries[0].contentRect) {\n                    observedDimenstion = { width: entries[0].contentRect.width, height: entries[0].contentRect.height };\n                }\n                else {\n                    observedDimenstion = null;\n                }\n                shouldObserve = true;\n                update();\n            });\n            this._resizeObserver.observe(this._referenceDomElement);\n        }\n    }\n    stopObserving() {\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    observe(dimension) {\n        this.measureReferenceDomElement(true, dimension);\n    }\n    measureReferenceDomElement(emitEvent, dimension) {\n        let observedWidth = 0;\n        let observedHeight = 0;\n        if (dimension) {\n            observedWidth = dimension.width;\n            observedHeight = dimension.height;\n        }\n        else if (this._referenceDomElement) {\n            observedWidth = this._referenceDomElement.clientWidth;\n            observedHeight = this._referenceDomElement.clientHeight;\n        }\n        observedWidth = Math.max(5, observedWidth);\n        observedHeight = Math.max(5, observedHeight);\n        if (this._width !== observedWidth || this._height !== observedHeight) {\n            this._width = observedWidth;\n            this._height = observedHeight;\n            if (emitEvent) {\n                this._onDidChange.fire();\n            }\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorSettingMigration {\n    static { this.items = []; }\n    constructor(key, migrate) {\n        this.key = key;\n        this.migrate = migrate;\n    }\n    apply(options) {\n        const value = EditorSettingMigration._read(options, this.key);\n        const read = (key) => EditorSettingMigration._read(options, key);\n        const write = (key, value) => EditorSettingMigration._write(options, key, value);\n        this.migrate(value, read, write);\n    }\n    static _read(source, key) {\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            return this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n        }\n        return source[key];\n    }\n    static _write(target, key, value) {\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            target[firstSegment] = target[firstSegment] || {};\n            this._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n            return;\n        }\n        target[key] = value;\n    }\n}\nfunction registerEditorSettingMigration(key, migrate) {\n    EditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\nfunction registerSimpleEditorSettingMigration(key, values) {\n    registerEditorSettingMigration(key, (value, read, write) => {\n        if (typeof value !== 'undefined') {\n            for (const [oldValue, newValue] of values) {\n                if (value === oldValue) {\n                    write(key, newValue);\n                    return;\n                }\n            }\n        }\n    });\n}\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    EditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('occurrencesHighlight', [[true, 'singleFile'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('wordBasedSuggestions', [[true, 'matchingDocuments'], [false, 'off']]);\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n    if (value === false) {\n        write('autoClosingBrackets', 'never');\n        if (typeof read('autoClosingQuotes') === 'undefined') {\n            write('autoClosingQuotes', 'never');\n        }\n        if (typeof read('autoSurround') === 'undefined') {\n            write('autoSurround', 'never');\n        }\n    }\n});\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('renderIndentGuides', undefined);\n        if (typeof read('guides.indentation') === 'undefined') {\n            write('guides.indentation', !!value);\n        }\n    }\n});\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('highlightActiveIndentGuide', undefined);\n        if (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n            write('guides.highlightActiveIndentation', !!value);\n        }\n    }\n});\nconst suggestFilteredTypesMapping = {\n    method: 'showMethods',\n    function: 'showFunctions',\n    constructor: 'showConstructors',\n    deprecated: 'showDeprecated',\n    field: 'showFields',\n    variable: 'showVariables',\n    class: 'showClasses',\n    struct: 'showStructs',\n    interface: 'showInterfaces',\n    module: 'showModules',\n    property: 'showProperties',\n    event: 'showEvents',\n    operator: 'showOperators',\n    unit: 'showUnits',\n    value: 'showValues',\n    constant: 'showConstants',\n    enum: 'showEnums',\n    enumMember: 'showEnumMembers',\n    keyword: 'showKeywords',\n    text: 'showWords',\n    color: 'showColors',\n    file: 'showFiles',\n    reference: 'showReferences',\n    folder: 'showFolders',\n    typeParameter: 'showTypeParameters',\n    snippet: 'showSnippets',\n};\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        for (const entry of Object.entries(suggestFilteredTypesMapping)) {\n            const v = value[entry[0]];\n            if (v === false) {\n                if (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n                    write(`suggest.${entry[1]}`, false);\n                }\n            }\n        }\n        write('suggest.filteredTypes', undefined);\n    }\n});\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n    if (typeof input === 'boolean') {\n        const value = input ? 'on' : 'off';\n        const newValue = { comments: value, strings: value, other: value };\n        write('quickSuggestions', newValue);\n    }\n});\n// Sticky Scroll\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('experimental.stickyScroll.enabled', undefined);\n        if (typeof read('stickyScroll.enabled') === 'undefined') {\n            write('stickyScroll.enabled', value);\n        }\n    }\n});\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n    if (typeof value === 'number') {\n        write('experimental.stickyScroll.maxLineCount', undefined);\n        if (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n            write('stickyScroll.maxLineCount', value);\n        }\n    }\n});\n// Code Actions on Save\nregisterEditorSettingMigration('codeActionsOnSave', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        let toBeModified = false;\n        const newValue = {};\n        for (const entry of Object.entries(value)) {\n            if (typeof entry[1] === 'boolean') {\n                toBeModified = true;\n                newValue[entry[0]] = entry[1] ? 'explicit' : 'never';\n            }\n            else {\n                newValue[entry[0]] = entry[1];\n            }\n        }\n        if (toBeModified) {\n            write(`codeActionsOnSave`, newValue);\n        }\n    }\n});\n// Migrate Quick Fix Settings\nregisterEditorSettingMigration('codeActionWidget.includeNearbyQuickfixes', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('codeActionWidget.includeNearbyQuickfixes', undefined);\n        if (typeof read('codeActionWidget.includeNearbyQuickFixes') === 'undefined') {\n            write('codeActionWidget.includeNearbyQuickFixes', value);\n        }\n    }\n});\n// Migrate the lightbulb settings\nregisterEditorSettingMigration('lightbulb.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('lightbulb.enabled', value ? undefined : 'off');\n    }\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/tabFocus.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n    constructor() {\n        this._tabFocus = false;\n        this._onDidChangeTabFocus = new Emitter();\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n    }\n    getTabFocusMode() {\n        return this._tabFocus;\n    }\n    setTabFocusMode(tabFocusMode) {\n        this._tabFocus = tabFocusMode;\n        this._onDidChangeTabFocus.fire(this._tabFocus);\n    }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;;AACA,MAAM;IACF,aAAc;QACV,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,oBAAoB,GAAG,IAAI,wKAAA,CAAA,UAAO;QACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK;IAC9D;IACA,kBAAkB;QACd,OAAO,IAAI,CAAC,SAAS;IACzB;IACA,gBAAgB,YAAY,EAAE;QAC1B,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;IACjD;AACJ;AAOO,MAAM,WAAW,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 863, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/config/editorConfiguration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as browser from '../../../base/browser/browser.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { FontMeasurements } from './fontMeasurements.js';\nimport { migrateOptions } from './migrateOptions.js';\nimport { TabFocus } from './tabFocus.js';\nimport { ComputeOptionsMemory, ConfigurationChangedEvent, editorOptionsRegistry } from '../../common/config/editorOptions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { BareFontInfo } from '../../common/config/fontInfo.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { getWindow, getWindowById } from '../../../base/browser/dom.js';\nimport { PixelRatio } from '../../../base/browser/pixelRatio.js';\nlet EditorConfiguration = class EditorConfiguration extends Disposable {\n    constructor(isSimpleWidget, contextMenuId, options, container, _accessibilityService) {\n        super();\n        this._accessibilityService = _accessibilityService;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeFast = this._register(new Emitter());\n        this.onDidChangeFast = this._onDidChangeFast.event;\n        this._isDominatedByLongLines = false;\n        this._viewLineCount = 1;\n        this._lineNumbersDigitCount = 1;\n        this._reservedHeight = 0;\n        this._glyphMarginDecorationLaneCount = 1;\n        this._computeOptionsMemory = new ComputeOptionsMemory();\n        this.isSimpleWidget = isSimpleWidget;\n        this.contextMenuId = contextMenuId;\n        this._containerObserver = this._register(new ElementSizeObserver(container, options.dimension));\n        this._targetWindowId = getWindow(container).vscodeWindowId;\n        this._rawOptions = deepCloneAndMigrateOptions(options);\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this.options = this._computeOptions();\n        if (this.options.get(13 /* EditorOption.automaticLayout */)) {\n            this._containerObserver.startObserving();\n        }\n        this._register(EditorZoom.onDidChangeZoomLevel(() => this._recomputeOptions()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._recomputeOptions()));\n        this._register(this._containerObserver.onDidChange(() => this._recomputeOptions()));\n        this._register(FontMeasurements.onDidChange(() => this._recomputeOptions()));\n        this._register(PixelRatio.getInstance(getWindow(container)).onDidChange(() => this._recomputeOptions()));\n        this._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n    }\n    _recomputeOptions() {\n        const newOptions = this._computeOptions();\n        const changeEvent = EditorOptionsUtil.checkEquals(this.options, newOptions);\n        if (changeEvent === null) {\n            // nothing changed!\n            return;\n        }\n        this.options = newOptions;\n        this._onDidChangeFast.fire(changeEvent);\n        this._onDidChange.fire(changeEvent);\n    }\n    _computeOptions() {\n        const partialEnv = this._readEnvConfiguration();\n        const bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.pixelRatio, this.isSimpleWidget);\n        const fontInfo = this._readFontInfo(bareFontInfo);\n        const env = {\n            memory: this._computeOptionsMemory,\n            outerWidth: partialEnv.outerWidth,\n            outerHeight: partialEnv.outerHeight - this._reservedHeight,\n            fontInfo: fontInfo,\n            extraEditorClassName: partialEnv.extraEditorClassName,\n            isDominatedByLongLines: this._isDominatedByLongLines,\n            viewLineCount: this._viewLineCount,\n            lineNumbersDigitCount: this._lineNumbersDigitCount,\n            emptySelectionClipboard: partialEnv.emptySelectionClipboard,\n            pixelRatio: partialEnv.pixelRatio,\n            tabFocusMode: TabFocus.getTabFocusMode(),\n            accessibilitySupport: partialEnv.accessibilitySupport,\n            glyphMarginDecorationLaneCount: this._glyphMarginDecorationLaneCount\n        };\n        return EditorOptionsUtil.computeOptions(this._validatedOptions, env);\n    }\n    _readEnvConfiguration() {\n        return {\n            extraEditorClassName: getExtraEditorClassName(),\n            outerWidth: this._containerObserver.getWidth(),\n            outerHeight: this._containerObserver.getHeight(),\n            emptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n            pixelRatio: PixelRatio.getInstance(getWindowById(this._targetWindowId, true).window).value,\n            accessibilitySupport: (this._accessibilityService.isScreenReaderOptimized()\n                ? 2 /* AccessibilitySupport.Enabled */\n                : this._accessibilityService.getAccessibilitySupport())\n        };\n    }\n    _readFontInfo(bareFontInfo) {\n        return FontMeasurements.readFontInfo(getWindowById(this._targetWindowId, true).window, bareFontInfo);\n    }\n    getRawOptions() {\n        return this._rawOptions;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = deepCloneAndMigrateOptions(_newOptions);\n        const didChange = EditorOptionsUtil.applyUpdate(this._rawOptions, newOptions);\n        if (!didChange) {\n            return;\n        }\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this._recomputeOptions();\n    }\n    observeContainer(dimension) {\n        this._containerObserver.observe(dimension);\n    }\n    setIsDominatedByLongLines(isDominatedByLongLines) {\n        if (this._isDominatedByLongLines === isDominatedByLongLines) {\n            return;\n        }\n        this._isDominatedByLongLines = isDominatedByLongLines;\n        this._recomputeOptions();\n    }\n    setModelLineCount(modelLineCount) {\n        const lineNumbersDigitCount = digitCount(modelLineCount);\n        if (this._lineNumbersDigitCount === lineNumbersDigitCount) {\n            return;\n        }\n        this._lineNumbersDigitCount = lineNumbersDigitCount;\n        this._recomputeOptions();\n    }\n    setViewLineCount(viewLineCount) {\n        if (this._viewLineCount === viewLineCount) {\n            return;\n        }\n        this._viewLineCount = viewLineCount;\n        this._recomputeOptions();\n    }\n    setReservedHeight(reservedHeight) {\n        if (this._reservedHeight === reservedHeight) {\n            return;\n        }\n        this._reservedHeight = reservedHeight;\n        this._recomputeOptions();\n    }\n    setGlyphMarginDecorationLaneCount(decorationLaneCount) {\n        if (this._glyphMarginDecorationLaneCount === decorationLaneCount) {\n            return;\n        }\n        this._glyphMarginDecorationLaneCount = decorationLaneCount;\n        this._recomputeOptions();\n    }\n};\nEditorConfiguration = __decorate([\n    __param(4, IAccessibilityService)\n], EditorConfiguration);\nexport { EditorConfiguration };\nfunction digitCount(n) {\n    let r = 0;\n    while (n) {\n        n = Math.floor(n / 10);\n        r++;\n    }\n    return r ? r : 1;\n}\nfunction getExtraEditorClassName() {\n    let extra = '';\n    if (!browser.isSafari && !browser.isWebkitWebView) {\n        // Use user-select: none in all browsers except Safari and native macOS WebView\n        extra += 'no-user-select ';\n    }\n    if (browser.isSafari) {\n        // See https://github.com/microsoft/vscode/issues/108822\n        extra += 'no-minimap-shadow ';\n        extra += 'enable-user-select ';\n    }\n    if (platform.isMacintosh) {\n        extra += 'mac ';\n    }\n    return extra;\n}\nclass ValidatedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(option) {\n        return this._values[option];\n    }\n    get(id) {\n        return this._values[id];\n    }\n    _write(option, value) {\n        this._values[option] = value;\n    }\n}\nexport class ComputedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(id) {\n        if (id >= this._values.length) {\n            throw new Error('Cannot read uninitialized value');\n        }\n        return this._values[id];\n    }\n    get(id) {\n        return this._read(id);\n    }\n    _write(id, value) {\n        this._values[id] = value;\n    }\n}\nclass EditorOptionsUtil {\n    static validateOptions(options) {\n        const result = new ValidatedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            const value = (editorOption.name === '_never_' ? undefined : options[editorOption.name]);\n            result._write(editorOption.id, editorOption.validate(value));\n        }\n        return result;\n    }\n    static computeOptions(options, env) {\n        const result = new ComputedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n        }\n        return result;\n    }\n    static _deepEquals(a, b) {\n        if (typeof a !== 'object' || typeof b !== 'object' || !a || !b) {\n            return a === b;\n        }\n        if (Array.isArray(a) || Array.isArray(b)) {\n            return (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\n        }\n        if (Object.keys(a).length !== Object.keys(b).length) {\n            return false;\n        }\n        for (const key in a) {\n            if (!EditorOptionsUtil._deepEquals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static checkEquals(a, b) {\n        const result = [];\n        let somethingChanged = false;\n        for (const editorOption of editorOptionsRegistry) {\n            const changed = !EditorOptionsUtil._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n            result[editorOption.id] = changed;\n            if (changed) {\n                somethingChanged = true;\n            }\n        }\n        return (somethingChanged ? new ConfigurationChangedEvent(result) : null);\n    }\n    /**\n     * Returns true if something changed.\n     * Modifies `options`.\n    */\n    static applyUpdate(options, update) {\n        let changed = false;\n        for (const editorOption of editorOptionsRegistry) {\n            if (update.hasOwnProperty(editorOption.name)) {\n                const result = editorOption.applyUpdate(options[editorOption.name], update[editorOption.name]);\n                options[editorOption.name] = result.newValue;\n                changed = changed || result.didChange;\n            }\n        }\n        return changed;\n    }\n}\nfunction deepCloneAndMigrateOptions(_options) {\n    const options = objects.deepClone(_options);\n    migrateOptions(options);\n    return options;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this.metadata = opts.metadata;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            metadata: this.metadata\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation, when) {\n        this._implementations.push({ priority, name, implementation, when });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            if (impl.when) {\n                const context = contextKeyService.getContext(getActiveElement());\n                const value = impl.when.evaluate(context);\n                if (!value) {\n                    continue;\n                }\n            }\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(precondition ?? undefined)) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            const logService = editorAccessor.get(ILogService);\n            const enabled = kbService.contextMatchesRules(this.desc.precondition ?? undefined);\n            if (!enabled) {\n                logService.debug(`[EditorAction2] NOT running command because its precondition is FALSE`, this.desc.id, this.desc.precondition?.serialize());\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, ...args);\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    static { this.INSTANCE = new EditorContributionRegistry(); }\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1704, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates(targetWindow) {\n        return new ClientCoordinates(this.x - targetWindow.scrollX, this.y - targetWindow.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates(targetWindow) {\n        return new PageCoordinates(this.clientX + targetWindow.scrollX, this.clientY + targetWindow.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(dom.getWindow(editorViewDomNode), e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    static { this._idPool = 0; }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElementDisposables = new DisposableStore();\n        this._styleElement = dom.createStyleSheet(_containerElement, undefined, this._styleElementDisposables);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElementDisposables.dispose();\n        this._styleElement = undefined;\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== child.ownerDocument.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;AAC9F;;AACO,MAAM,iBAAiB,qLAAA,CAAA,mBAAgB;IAC1C,YAAY,OAAO,CAAE;QACjB,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI;IACtC;IACA,UAAU;QACN,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI;QACrC,KAAK,CAAC;IACV;AACJ;AACO,MAAM;IACT,OAAO,MAAM,MAAM,EAAE,MAAM,EAAE;QACzB,OAAO,YAAY,CAAC,aAAa,OAAO;IAC5C;IACA,OAAO,KAAK,MAAM,EAAE;QAChB,MAAM,IAAI,OAAO,YAAY,CAAC;QAC9B,IAAI,MAAM,MAAM;YACZ,OAAO,EAAE,wBAAwB;QACrC;QACA,OAAO,SAAS,GAAG;IACvB;IACA,OAAO,QAAQ,KAAK,EAAE,MAAM,EAAE;QAC1B,MAAM,SAAS,EAAE;QACjB,IAAI,YAAY;QAChB,MAAO,SAAS,UAAU,MAAM,aAAa,CAAC,IAAI,CAAE;YAChD,IAAI,UAAU,QAAQ;gBAClB;YACJ;YACA,IAAI,MAAM,QAAQ,KAAK,MAAM,YAAY,EAAE;gBACvC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;YACpC;YACA,QAAQ,MAAM,aAAa;QAC/B;QACA,MAAM,IAAI,IAAI,WAAW;QACzB,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,IAAK;YAChC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,YAAY,IAAI,EAAE;QACpC;QACA,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2041, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges, \n    /**\n     * Indicates if the requested range does not end in this line, but continues on the next line.\n     */\n    continuesOnNextLine) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n        this.continuesOnNextLine = continuesOnNextLine;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2154, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/dynamicViewOverlay.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class DynamicViewOverlay extends ViewEventHandler {\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;;AACO,MAAM,2BAA2B,qLAAA,CAAA,mBAAgB;AACxD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2170, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(78 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(78 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(108 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(22 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position, data.revealType);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position, data.revealType);\n                    }\n                    else {\n                        this._wordSelect(data.position, data.revealType);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position, data.revealType);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position, data.revealType);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position, data.revealType);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition, revealType) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition,\n            revealType\n        };\n    }\n    moveTo(viewPosition, revealType) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _moveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorWordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2431, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(_lineFactory) {\n        this._lineFactory = _lineFactory;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._lineFactory.createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(_lineFactory) {\n        this._lineFactory = _lineFactory;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(this._lineFactory);\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                lineDomNode?.remove();\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                lineDomNode?.remove();\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._lineFactory, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    static { this._ttPolicy = createTrustedTypesPolicy('editorViewLayer', { createHTML: value => value }); }\n    constructor(_domNode, _lineFactory, _viewportData) {\n        this._domNode = _domNode;\n        this._lineFactory = _lineFactory;\n        this._viewportData = _viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this._lineFactory.createLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN], this._viewportData.lineHeight);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this._lineFactory.createLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            lineDomNode?.remove();\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this._lineFactory.createLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            lineDomNode?.remove();\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this._domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this._domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this._domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    static { this._sb = new StringBuilder(100000); }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this._viewportData.lineHeight, this._viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this._viewportData.lineHeight, this._viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2894, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this._visibleLines = new VisibleLinesCollection({\n            createLine: () => new ViewOverlayLine(this._dynamicOverlays)\n        });\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(dynamicOverlays) {\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop, lineHeight) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3107, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../../common/core/position.js';\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        this.onKeyDown?.(e);\n    }\n    emitKeyUp(e) {\n        this.onKeyUp?.(e);\n    }\n    emitContextMenu(e) {\n        this.onContextMenu?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        this.onMouseMove?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        this.onMouseLeave?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        this.onMouseDown?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        this.onMouseUp?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        this.onMouseDrag?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        this.onMouseDrop?.(this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        this.onMouseDropCanceled?.();\n    }\n    emitMouseWheel(e) {\n        this.onMouseWheel?.(e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = { ...target };\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        if (result.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */ || result.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            result.detail = this.convertViewToModelViewZoneData(result.detail, coordinatesConverter);\n        }\n        return result;\n    }\n    static convertViewToModelViewZoneData(data, coordinatesConverter) {\n        return {\n            viewZoneId: data.viewZoneId,\n            positionBefore: data.positionBefore ? coordinatesConverter.convertViewPositionToModelPosition(data.positionBefore) : data.positionBefore,\n            positionAfter: data.positionAfter ? coordinatesConverter.convertViewPositionToModelPosition(data.positionAfter) : data.positionAfter,\n            position: coordinatesConverter.convertViewPositionToModelPosition(data.position),\n            afterLineNumber: coordinatesConverter.convertViewPositionToModelPosition(new Position(data.afterLineNumber, 1)).lineNumber,\n        };\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3206, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view/domLineBreaksComputer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertIsDefined } from '../../../base/common/types.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport { ModelLineProjectionData } from '../../common/modelLineProjectionData.js';\nimport { LineInjectedText } from '../../common/textModelEvents.js';\nconst ttPolicy = createTrustedTypesPolicy('domLineBreaksComputer', { createHTML: value => value });\nexport class DOMLineBreaksComputerFactory {\n    static create(targetWindow) {\n        return new DOMLineBreaksComputerFactory(new WeakRef(targetWindow));\n    }\n    constructor(targetWindow) {\n        this.targetWindow = targetWindow;\n    }\n    createLineBreaksComputer(fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak) {\n        const requests = [];\n        const injectedTexts = [];\n        return {\n            addRequest: (lineText, injectedText, previousLineBreakData) => {\n                requests.push(lineText);\n                injectedTexts.push(injectedText);\n            },\n            finalize: () => {\n                return createLineBreaks(assertIsDefined(this.targetWindow.deref()), requests, fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak, injectedTexts);\n            }\n        };\n    }\n}\nfunction createLineBreaks(targetWindow, requests, fontInfo, tabSize, firstLineBreakColumn, wrappingIndent, wordBreak, injectedTextsPerLine) {\n    function createEmptyLineBreakWithPossiblyInjectedText(requestIdx) {\n        const injectedTexts = injectedTextsPerLine[requestIdx];\n        if (injectedTexts) {\n            const lineText = LineInjectedText.applyInjectedText(requests[requestIdx], injectedTexts);\n            const injectionOptions = injectedTexts.map(t => t.options);\n            const injectionOffsets = injectedTexts.map(text => text.column - 1);\n            // creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK\n            // because `breakOffsetsVisibleColumn` will never be used because it contains injected text\n            return new ModelLineProjectionData(injectionOffsets, injectionOptions, [lineText.length], [], 0);\n        }\n        else {\n            return null;\n        }\n    }\n    if (firstLineBreakColumn === -1) {\n        const result = [];\n        for (let i = 0, len = requests.length; i < len; i++) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n        }\n        return result;\n    }\n    const overallWidth = Math.round(firstLineBreakColumn * fontInfo.typicalHalfwidthCharacterWidth);\n    const additionalIndent = (wrappingIndent === 3 /* WrappingIndent.DeepIndent */ ? 2 : wrappingIndent === 2 /* WrappingIndent.Indent */ ? 1 : 0);\n    const additionalIndentSize = Math.round(tabSize * additionalIndent);\n    const additionalIndentLength = Math.ceil(fontInfo.spaceWidth * additionalIndentSize);\n    const containerDomNode = document.createElement('div');\n    applyFontInfo(containerDomNode, fontInfo);\n    const sb = new StringBuilder(10000);\n    const firstNonWhitespaceIndices = [];\n    const wrappedTextIndentLengths = [];\n    const renderLineContents = [];\n    const allCharOffsets = [];\n    const allVisibleColumns = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineContent = LineInjectedText.applyInjectedText(requests[i], injectedTextsPerLine[i]);\n        let firstNonWhitespaceIndex = 0;\n        let wrappedTextIndentLength = 0;\n        let width = overallWidth;\n        if (wrappingIndent !== 0 /* WrappingIndent.None */) {\n            firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n            if (firstNonWhitespaceIndex === -1) {\n                // all whitespace line\n                firstNonWhitespaceIndex = 0;\n            }\n            else {\n                // Track existing indent\n                for (let i = 0; i < firstNonWhitespaceIndex; i++) {\n                    const charWidth = (lineContent.charCodeAt(i) === 9 /* CharCode.Tab */\n                        ? (tabSize - (wrappedTextIndentLength % tabSize))\n                        : 1);\n                    wrappedTextIndentLength += charWidth;\n                }\n                const indentWidth = Math.ceil(fontInfo.spaceWidth * wrappedTextIndentLength);\n                // Force sticking to beginning of line if no character would fit except for the indentation\n                if (indentWidth + fontInfo.typicalFullwidthCharacterWidth > overallWidth) {\n                    firstNonWhitespaceIndex = 0;\n                    wrappedTextIndentLength = 0;\n                }\n                else {\n                    width = overallWidth - indentWidth;\n                }\n            }\n        }\n        const renderLineContent = lineContent.substr(firstNonWhitespaceIndex);\n        const tmp = renderLine(renderLineContent, wrappedTextIndentLength, tabSize, width, sb, additionalIndentLength);\n        firstNonWhitespaceIndices[i] = firstNonWhitespaceIndex;\n        wrappedTextIndentLengths[i] = wrappedTextIndentLength;\n        renderLineContents[i] = renderLineContent;\n        allCharOffsets[i] = tmp[0];\n        allVisibleColumns[i] = tmp[1];\n    }\n    const html = sb.build();\n    const trustedhtml = ttPolicy?.createHTML(html) ?? html;\n    containerDomNode.innerHTML = trustedhtml;\n    containerDomNode.style.position = 'absolute';\n    containerDomNode.style.top = '10000';\n    if (wordBreak === 'keepAll') {\n        // word-break: keep-all; overflow-wrap: anywhere\n        containerDomNode.style.wordBreak = 'keep-all';\n        containerDomNode.style.overflowWrap = 'anywhere';\n    }\n    else {\n        // overflow-wrap: break-word\n        containerDomNode.style.wordBreak = 'inherit';\n        containerDomNode.style.overflowWrap = 'break-word';\n    }\n    targetWindow.document.body.appendChild(containerDomNode);\n    const range = document.createRange();\n    const lineDomNodes = Array.prototype.slice.call(containerDomNode.children, 0);\n    const result = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineDomNode = lineDomNodes[i];\n        const breakOffsets = readLineBreaks(range, lineDomNode, renderLineContents[i], allCharOffsets[i]);\n        if (breakOffsets === null) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n            continue;\n        }\n        const firstNonWhitespaceIndex = firstNonWhitespaceIndices[i];\n        const wrappedTextIndentLength = wrappedTextIndentLengths[i] + additionalIndentSize;\n        const visibleColumns = allVisibleColumns[i];\n        const breakOffsetsVisibleColumn = [];\n        for (let j = 0, len = breakOffsets.length; j < len; j++) {\n            breakOffsetsVisibleColumn[j] = visibleColumns[breakOffsets[j]];\n        }\n        if (firstNonWhitespaceIndex !== 0) {\n            // All break offsets are relative to the renderLineContent, make them absolute again\n            for (let j = 0, len = breakOffsets.length; j < len; j++) {\n                breakOffsets[j] += firstNonWhitespaceIndex;\n            }\n        }\n        let injectionOptions;\n        let injectionOffsets;\n        const curInjectedTexts = injectedTextsPerLine[i];\n        if (curInjectedTexts) {\n            injectionOptions = curInjectedTexts.map(t => t.options);\n            injectionOffsets = curInjectedTexts.map(text => text.column - 1);\n        }\n        else {\n            injectionOptions = null;\n            injectionOffsets = null;\n        }\n        result[i] = new ModelLineProjectionData(injectionOffsets, injectionOptions, breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength);\n    }\n    containerDomNode.remove();\n    return result;\n}\nfunction renderLine(lineContent, initialVisibleColumn, tabSize, width, sb, wrappingIndentLength) {\n    if (wrappingIndentLength !== 0) {\n        const hangingOffset = String(wrappingIndentLength);\n        sb.appendString('<div style=\"text-indent: -');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; padding-left: ');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; box-sizing: border-box; width:');\n    }\n    else {\n        sb.appendString('<div style=\"width:');\n    }\n    sb.appendString(String(width));\n    sb.appendString('px;\">');\n    // if (containsRTL) {\n    // \tsb.appendASCIIString('\" dir=\"ltr');\n    // }\n    const len = lineContent.length;\n    let visibleColumn = initialVisibleColumn;\n    let charOffset = 0;\n    const charOffsets = [];\n    const visibleColumns = [];\n    let nextCharCode = (0 < len ? lineContent.charCodeAt(0) : 0 /* CharCode.Null */);\n    sb.appendString('<span>');\n    for (let charIndex = 0; charIndex < len; charIndex++) {\n        if (charIndex !== 0 && charIndex % 16384 /* Constants.SPAN_MODULO_LIMIT */ === 0) {\n            sb.appendString('</span><span>');\n        }\n        charOffsets[charIndex] = charOffset;\n        visibleColumns[charIndex] = visibleColumn;\n        const charCode = nextCharCode;\n        nextCharCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n        let producedCharacters = 1;\n        let charWidth = 1;\n        switch (charCode) {\n            case 9 /* CharCode.Tab */:\n                producedCharacters = (tabSize - (visibleColumn % tabSize));\n                charWidth = producedCharacters;\n                for (let space = 1; space <= producedCharacters; space++) {\n                    if (space < producedCharacters) {\n                        sb.appendCharCode(0xA0); // &nbsp;\n                    }\n                    else {\n                        sb.appendASCIICharCode(32 /* CharCode.Space */);\n                    }\n                }\n                break;\n            case 32 /* CharCode.Space */:\n                if (nextCharCode === 32 /* CharCode.Space */) {\n                    sb.appendCharCode(0xA0); // &nbsp;\n                }\n                else {\n                    sb.appendASCIICharCode(32 /* CharCode.Space */);\n                }\n                break;\n            case 60 /* CharCode.LessThan */:\n                sb.appendString('&lt;');\n                break;\n            case 62 /* CharCode.GreaterThan */:\n                sb.appendString('&gt;');\n                break;\n            case 38 /* CharCode.Ampersand */:\n                sb.appendString('&amp;');\n                break;\n            case 0 /* CharCode.Null */:\n                sb.appendString('&#00;');\n                break;\n            case 65279 /* CharCode.UTF8_BOM */:\n            case 8232 /* CharCode.LINE_SEPARATOR */:\n            case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n            case 133 /* CharCode.NEXT_LINE */:\n                sb.appendCharCode(0xFFFD);\n                break;\n            default:\n                if (strings.isFullWidthCharacter(charCode)) {\n                    charWidth++;\n                }\n                if (charCode < 32) {\n                    sb.appendCharCode(9216 + charCode);\n                }\n                else {\n                    sb.appendCharCode(charCode);\n                }\n        }\n        charOffset += producedCharacters;\n        visibleColumn += charWidth;\n    }\n    sb.appendString('</span>');\n    charOffsets[lineContent.length] = charOffset;\n    visibleColumns[lineContent.length] = visibleColumn;\n    sb.appendString('</div>');\n    return [charOffsets, visibleColumns];\n}\nfunction readLineBreaks(range, lineDomNode, lineContent, charOffsets) {\n    if (lineContent.length <= 1) {\n        return null;\n    }\n    const spans = Array.prototype.slice.call(lineDomNode.children, 0);\n    const breakOffsets = [];\n    try {\n        discoverBreaks(range, spans, charOffsets, 0, null, lineContent.length - 1, null, breakOffsets);\n    }\n    catch (err) {\n        console.log(err);\n        return null;\n    }\n    if (breakOffsets.length === 0) {\n        return null;\n    }\n    breakOffsets.push(lineContent.length);\n    return breakOffsets;\n}\nfunction discoverBreaks(range, spans, charOffsets, low, lowRects, high, highRects, result) {\n    if (low === high) {\n        return;\n    }\n    lowRects = lowRects || readClientRect(range, spans, charOffsets[low], charOffsets[low + 1]);\n    highRects = highRects || readClientRect(range, spans, charOffsets[high], charOffsets[high + 1]);\n    if (Math.abs(lowRects[0].top - highRects[0].top) <= 0.1) {\n        // same line\n        return;\n    }\n    // there is at least one line break between these two offsets\n    if (low + 1 === high) {\n        // the two characters are adjacent, so the line break must be exactly between them\n        result.push(high);\n        return;\n    }\n    const mid = low + ((high - low) / 2) | 0;\n    const midRects = readClientRect(range, spans, charOffsets[mid], charOffsets[mid + 1]);\n    discoverBreaks(range, spans, charOffsets, low, lowRects, mid, midRects, result);\n    discoverBreaks(range, spans, charOffsets, mid, midRects, high, highRects, result);\n}\nfunction readClientRect(range, spans, startOffset, endOffset) {\n    range.setStart(spans[(startOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, startOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    range.setEnd(spans[(endOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, endOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    return range.getClientRects();\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3514, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/coreCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { isFirefox } from '../../base/browser/browser.js';\nimport * as types from '../../base/common/types.js';\nimport { status } from '../../base/browser/ui/aria/aria.js';\nimport { Command, EditorCommand, registerEditorCommand, UndoCommand, RedoCommand, SelectAllCommand } from './editorExtensions.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { ColumnSelection } from '../common/cursor/cursorColumnSelection.js';\nimport { CursorState } from '../common/cursorCommon.js';\nimport { DeleteOperations } from '../common/cursor/cursorDeleteOperations.js';\nimport { CursorMove as CursorMove_, CursorMoveCommands } from '../common/cursor/cursorMoveCommands.js';\nimport { TypeOperations } from '../common/cursor/cursorTypeOperations.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { EditorContextKeys } from '../common/editorContextKeys.js';\nimport { ContextKeyExpr } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nimport { EnterOperation } from '../common/cursor/cursorTypeEditOperations.js';\nconst CORE_WEIGHT = 0 /* KeybindingWeight.EditorCore */;\nexport class CoreEditorCommand extends EditorCommand {\n    runEditorCommand(accessor, editor, args) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            // the editor has no view => has no cursors\n            return;\n        }\n        this.runCoreEditorCommand(viewModel, args || {});\n    }\n}\nexport var EditorScroll_;\n(function (EditorScroll_) {\n    const isEditorScrollArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const scrollArg = arg;\n        if (!types.isString(scrollArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\n            return false;\n        }\n        return true;\n    };\n    EditorScroll_.metadata = {\n        description: 'Scroll editor in the given direction',\n        args: [\n            {\n                name: 'Editor scroll argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory direction value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'page', 'halfPage', 'editor'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\n\t\t\t\t`,\n                constraint: isEditorScrollArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['to'],\n                    'properties': {\n                        'to': {\n                            'type': 'string',\n                            'enum': ['up', 'down']\n                        },\n                        'by': {\n                            'type': 'string',\n                            'enum': ['line', 'wrappedLine', 'page', 'halfPage', 'editor']\n                        },\n                        'value': {\n                            'type': 'number',\n                            'default': 1\n                        },\n                        'revealCursor': {\n                            'type': 'boolean',\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Directions in the view for editor scroll command.\n     */\n    EditorScroll_.RawDirection = {\n        Up: 'up',\n        Right: 'right',\n        Down: 'down',\n        Left: 'left'\n    };\n    /**\n     * Units for editor scroll 'by' argument\n     */\n    EditorScroll_.RawUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Page: 'page',\n        HalfPage: 'halfPage',\n        Editor: 'editor',\n        Column: 'column'\n    };\n    function parse(args) {\n        let direction;\n        switch (args.to) {\n            case EditorScroll_.RawDirection.Up:\n                direction = 1 /* Direction.Up */;\n                break;\n            case EditorScroll_.RawDirection.Right:\n                direction = 2 /* Direction.Right */;\n                break;\n            case EditorScroll_.RawDirection.Down:\n                direction = 3 /* Direction.Down */;\n                break;\n            case EditorScroll_.RawDirection.Left:\n                direction = 4 /* Direction.Left */;\n                break;\n            default:\n                // Illegal arguments\n                return null;\n        }\n        let unit;\n        switch (args.by) {\n            case EditorScroll_.RawUnit.Line:\n                unit = 1 /* Unit.Line */;\n                break;\n            case EditorScroll_.RawUnit.WrappedLine:\n                unit = 2 /* Unit.WrappedLine */;\n                break;\n            case EditorScroll_.RawUnit.Page:\n                unit = 3 /* Unit.Page */;\n                break;\n            case EditorScroll_.RawUnit.HalfPage:\n                unit = 4 /* Unit.HalfPage */;\n                break;\n            case EditorScroll_.RawUnit.Editor:\n                unit = 5 /* Unit.Editor */;\n                break;\n            case EditorScroll_.RawUnit.Column:\n                unit = 6 /* Unit.Column */;\n                break;\n            default:\n                unit = 2 /* Unit.WrappedLine */;\n        }\n        const value = Math.floor(args.value || 1);\n        const revealCursor = !!args.revealCursor;\n        return {\n            direction: direction,\n            unit: unit,\n            value: value,\n            revealCursor: revealCursor,\n            select: (!!args.select)\n        };\n    }\n    EditorScroll_.parse = parse;\n})(EditorScroll_ || (EditorScroll_ = {}));\nexport var RevealLine_;\n(function (RevealLine_) {\n    const isRevealLineArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const reveaLineArg = arg;\n        if (!types.isNumber(reveaLineArg.lineNumber) && !types.isString(reveaLineArg.lineNumber)) {\n            return false;\n        }\n        if (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\n            return false;\n        }\n        return true;\n    };\n    RevealLine_.metadata = {\n        description: 'Reveal the given line at the given logical position',\n        args: [\n            {\n                name: 'Reveal line argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'lineNumber': A mandatory line number value.\n\t\t\t\t\t* 'at': Logical position at which line has to be revealed.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'top', 'center', 'bottom'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t`,\n                constraint: isRevealLineArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['lineNumber'],\n                    'properties': {\n                        'lineNumber': {\n                            'type': ['number', 'string'],\n                        },\n                        'at': {\n                            'type': 'string',\n                            'enum': ['top', 'center', 'bottom']\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Values for reveal line 'at' argument\n     */\n    RevealLine_.RawAtArgument = {\n        Top: 'top',\n        Center: 'center',\n        Bottom: 'bottom'\n    };\n})(RevealLine_ || (RevealLine_ = {}));\nclass EditorOrNativeTextInputCommand {\n    constructor(target) {\n        // 1. handle case when focus is in editor.\n        target.addImplementation(10000, 'code-editor', (accessor, args) => {\n            // Only if editor text focus (i.e. not if editor has widget focus).\n            const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n            if (focusedEditor && focusedEditor.hasTextFocus()) {\n                return this._runEditorCommand(accessor, focusedEditor, args);\n            }\n            return false;\n        });\n        // 2. handle case when focus is in some other `input` / `textarea`.\n        target.addImplementation(1000, 'generic-dom-input-textarea', (accessor, args) => {\n            // Only if focused on an element that allows for entering text\n            const activeElement = getActiveElement();\n            if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n                this.runDOMCommand(activeElement);\n                return true;\n            }\n            return false;\n        });\n        // 3. (default) handle case when focus is somewhere else.\n        target.addImplementation(0, 'generic-dom', (accessor, args) => {\n            // Redirecting to active editor\n            const activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\n            if (activeEditor) {\n                activeEditor.focus();\n                return this._runEditorCommand(accessor, activeEditor, args);\n            }\n            return false;\n        });\n    }\n    _runEditorCommand(accessor, editor, args) {\n        const result = this.runEditorCommand(accessor, editor, args);\n        if (result) {\n            return result;\n        }\n        return true;\n    }\n}\nexport var CoreNavigationCommands;\n(function (CoreNavigationCommands) {\n    class BaseMoveToCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            const cursorStateChanged = viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (cursorStateChanged && args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealAllCursors(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.MoveTo = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveTo',\n        inSelectionMode: false,\n        precondition: undefined\n    }));\n    CoreNavigationCommands.MoveToSelect = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveToSelect',\n        inSelectionMode: true,\n        precondition: undefined\n    }));\n    class ColumnSelectCommand extends CoreEditorCommand {\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            const result = this._getColumnSelectResult(viewModel, viewModel.getPrimaryCursorState(), viewModel.getCursorColumnSelectData(), args);\n            if (result === null) {\n                // invalid arguments\n                return;\n            }\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, result.viewStates.map((viewState) => CursorState.fromViewState(viewState)));\n            viewModel.setCursorColumnSelectData({\n                isReal: true,\n                fromViewLineNumber: result.fromLineNumber,\n                fromViewVisualColumn: result.fromVisualColumn,\n                toViewLineNumber: result.toLineNumber,\n                toViewVisualColumn: result.toVisualColumn\n            });\n            if (result.reversed) {\n                viewModel.revealTopMostCursor(args.source);\n            }\n            else {\n                viewModel.revealBottomMostCursor(args.source);\n            }\n        }\n    }\n    CoreNavigationCommands.ColumnSelect = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'columnSelect',\n                precondition: undefined\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            if (typeof args.position === 'undefined' || typeof args.viewPosition === 'undefined' || typeof args.mouseColumn === 'undefined') {\n                return null;\n            }\n            // validate `args`\n            const validatedPosition = viewModel.model.validatePosition(args.position);\n            const validatedViewPosition = viewModel.coordinatesConverter.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\n            const fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\n            const fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\n            return ColumnSelection.columnSelect(viewModel.cursorConfig, viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectLeft = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectLeft(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectRight = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectRight(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    class ColumnSelectUpCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectUp(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */,\n            linux: { primary: 0 }\n        }\n    }));\n    class ColumnSelectDownCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectDown(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */,\n            linux: { primary: 0 }\n        }\n    }));\n    class CursorMoveImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cursorMove',\n                precondition: undefined,\n                metadata: CursorMove_.metadata\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = CursorMove_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            this._runCursorMove(viewModel, args.source, parsed);\n        }\n        _runCursorMove(viewModel, source, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, CursorMoveImpl._move(viewModel, viewModel.getCursorStates(), args));\n            viewModel.revealAllCursors(source, true);\n        }\n        static _move(viewModel, cursors, args) {\n            const inSelectionMode = args.select;\n            const value = args.value;\n            switch (args.direction) {\n                case 0 /* CursorMove_.Direction.Left */:\n                case 1 /* CursorMove_.Direction.Right */:\n                case 2 /* CursorMove_.Direction.Up */:\n                case 3 /* CursorMove_.Direction.Down */:\n                case 4 /* CursorMove_.Direction.PrevBlankLine */:\n                case 5 /* CursorMove_.Direction.NextBlankLine */:\n                case 6 /* CursorMove_.Direction.WrappedLineStart */:\n                case 7 /* CursorMove_.Direction.WrappedLineFirstNonWhitespaceCharacter */:\n                case 8 /* CursorMove_.Direction.WrappedLineColumnCenter */:\n                case 9 /* CursorMove_.Direction.WrappedLineEnd */:\n                case 10 /* CursorMove_.Direction.WrappedLineLastNonWhitespaceCharacter */:\n                    return CursorMoveCommands.simpleMove(viewModel, cursors, args.direction, inSelectionMode, value, args.unit);\n                case 11 /* CursorMove_.Direction.ViewPortTop */:\n                case 13 /* CursorMove_.Direction.ViewPortBottom */:\n                case 12 /* CursorMove_.Direction.ViewPortCenter */:\n                case 14 /* CursorMove_.Direction.ViewPortIfOutside */:\n                    return CursorMoveCommands.viewportMove(viewModel, cursors, args.direction, inSelectionMode, value);\n                default:\n                    return null;\n            }\n        }\n    }\n    CoreNavigationCommands.CursorMoveImpl = CursorMoveImpl;\n    CoreNavigationCommands.CursorMove = registerEditorCommand(new CursorMoveImpl());\n    class CursorMoveBasedCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._staticArgs = opts.args;\n        }\n        runCoreEditorCommand(viewModel, dynamicArgs) {\n            let args = this._staticArgs;\n            if (this._staticArgs.value === -1 /* Constants.PAGE_SIZE_MARKER */) {\n                // -1 is a marker for page size\n                args = {\n                    direction: this._staticArgs.direction,\n                    unit: this._staticArgs.unit,\n                    select: this._staticArgs.select,\n                    value: dynamicArgs.pageSize || viewModel.cursorConfig.pageSize\n                };\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(dynamicArgs.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.simpleMove(viewModel, viewModel.getCursorStates(), args.direction, args.select, args.value, args.unit));\n            viewModel.revealAllCursors(dynamicArgs.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorLeft = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorLeft',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 15 /* KeyCode.LeftArrow */,\n            mac: { primary: 15 /* KeyCode.LeftArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 32 /* KeyCode.KeyB */] }\n        }\n    }));\n    CoreNavigationCommands.CursorLeftSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorLeftSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorRight = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorRight',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 17 /* KeyCode.RightArrow */,\n            mac: { primary: 17 /* KeyCode.RightArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 36 /* KeyCode.KeyF */] }\n        }\n    }));\n    CoreNavigationCommands.CursorRightSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorRightSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 16 /* KeyCode.UpArrow */,\n            mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n        }\n    }));\n    CoreNavigationCommands.CursorUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorPageUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 18 /* KeyCode.DownArrow */,\n            mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n        }\n    }));\n    CoreNavigationCommands.CursorDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CursorPageDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CreateCursor = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'createCursor',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            let newState;\n            if (args.wholeLine) {\n                newState = CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            else {\n                newState = CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            const states = viewModel.getCursorStates();\n            // Check if we should remove a cursor (sort of like a toggle)\n            if (states.length > 1) {\n                const newModelPosition = (newState.modelState ? newState.modelState.position : null);\n                const newViewPosition = (newState.viewState ? newState.viewState.position : null);\n                for (let i = 0, len = states.length; i < len; i++) {\n                    const state = states[i];\n                    if (newModelPosition && !state.modelState.selection.containsPosition(newModelPosition)) {\n                        continue;\n                    }\n                    if (newViewPosition && !state.viewState.selection.containsPosition(newViewPosition)) {\n                        continue;\n                    }\n                    // => Remove the cursor\n                    states.splice(i, 1);\n                    viewModel.model.pushStackElement();\n                    viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n                    return;\n                }\n            }\n            // => Add the new cursor\n            states.push(newState);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n        }\n    });\n    CoreNavigationCommands.LastCursorMoveToSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: '_lastCursorMoveToSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(viewModel, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class HomeCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorHome = registerEditorCommand(new HomeCommand({\n        inSelectionMode: false,\n        id: 'cursorHome',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 14 /* KeyCode.Home */,\n            mac: { primary: 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    CoreNavigationCommands.CursorHomeSelect = registerEditorCommand(new HomeCommand({\n        inSelectionMode: true,\n        id: 'cursorHomeSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    class LineStartCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel.getCursorStates()));\n            viewModel.revealAllCursors(args.source, true);\n        }\n        _exec(cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, 1, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineStart = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: false,\n        id: 'cursorLineStart',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineStartSelect = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: true,\n        id: 'cursorLineStartSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    class EndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode, args.sticky || false));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorEnd = registerEditorCommand(new EndCommand({\n        inSelectionMode: false,\n        id: 'cursorEnd',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 13 /* KeyCode.End */,\n            mac: { primary: 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */] }\n        },\n        metadata: {\n            description: `Go to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    CoreNavigationCommands.CursorEndSelect = registerEditorCommand(new EndCommand({\n        inSelectionMode: true,\n        id: 'cursorEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */] }\n        },\n        metadata: {\n            description: `Select to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    class LineEndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel, viewModel.getCursorStates()));\n            viewModel.revealAllCursors(args.source, true);\n        }\n        _exec(viewModel, cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                const maxColumn = viewModel.model.getLineMaxColumn(lineNumber);\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, maxColumn, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineEnd = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: false,\n        id: 'cursorLineEnd',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineEndSelect = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: true,\n        id: 'cursorLineEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    class TopCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorTop = registerEditorCommand(new TopCommand({\n        inSelectionMode: false,\n        id: 'cursorTop',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorTopSelect = registerEditorCommand(new TopCommand({\n        inSelectionMode: true,\n        id: 'cursorTopSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    class BottomCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealAllCursors(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorBottom = registerEditorCommand(new BottomCommand({\n        inSelectionMode: false,\n        id: 'cursorBottom',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorBottomSelect = registerEditorCommand(new BottomCommand({\n        inSelectionMode: true,\n        id: 'cursorBottomSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    class EditorScrollImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'editorScroll',\n                precondition: undefined,\n                metadata: EditorScroll_.metadata\n            });\n        }\n        determineScrollMethod(args) {\n            const horizontalUnits = [6 /* EditorScroll_.Unit.Column */];\n            const verticalUnits = [\n                1 /* EditorScroll_.Unit.Line */,\n                2 /* EditorScroll_.Unit.WrappedLine */,\n                3 /* EditorScroll_.Unit.Page */,\n                4 /* EditorScroll_.Unit.HalfPage */,\n                5 /* EditorScroll_.Unit.Editor */,\n                6 /* EditorScroll_.Unit.Column */\n            ];\n            const horizontalDirections = [4 /* EditorScroll_.Direction.Left */, 2 /* EditorScroll_.Direction.Right */];\n            const verticalDirections = [1 /* EditorScroll_.Direction.Up */, 3 /* EditorScroll_.Direction.Down */];\n            if (horizontalUnits.includes(args.unit) && horizontalDirections.includes(args.direction)) {\n                return this._runHorizontalEditorScroll.bind(this);\n            }\n            if (verticalUnits.includes(args.unit) && verticalDirections.includes(args.direction)) {\n                return this._runVerticalEditorScroll.bind(this);\n            }\n            return null;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = EditorScroll_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            const runEditorScroll = this.determineScrollMethod(parsed);\n            if (!runEditorScroll) {\n                // Incompatible unit and direction\n                return;\n            }\n            runEditorScroll(viewModel, args.source, parsed);\n        }\n        _runVerticalEditorScroll(viewModel, source, args) {\n            const desiredScrollTop = this._computeDesiredScrollTop(viewModel, args);\n            if (args.revealCursor) {\n                // must ensure cursor is in new visible range\n                const desiredVisibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\n                viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, [\n                    CursorMoveCommands.findPositionInViewportIfOutside(viewModel, viewModel.getPrimaryCursorState(), desiredVisibleViewRange, args.select)\n                ]);\n            }\n            viewModel.viewLayout.setScrollPosition({ scrollTop: desiredScrollTop }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollTop(viewModel, args) {\n            if (args.unit === 1 /* EditorScroll_.Unit.Line */) {\n                // scrolling by model lines\n                const futureViewport = viewModel.viewLayout.getFutureViewport();\n                const visibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(futureViewport.top);\n                const visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n                let desiredTopModelLineNumber;\n                if (args.direction === 1 /* EditorScroll_.Direction.Up */) {\n                    // must go x model lines up\n                    desiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\n                }\n                else {\n                    // must go x model lines down\n                    desiredTopModelLineNumber = Math.min(viewModel.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\n                }\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n            }\n            if (args.unit === 5 /* EditorScroll_.Unit.Editor */) {\n                let desiredTopModelLineNumber = 0;\n                if (args.direction === 3 /* EditorScroll_.Direction.Down */) {\n                    desiredTopModelLineNumber = viewModel.model.getLineCount() - viewModel.cursorConfig.pageSize;\n                }\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(desiredTopModelLineNumber);\n            }\n            let noOfLines;\n            if (args.unit === 3 /* EditorScroll_.Unit.Page */) {\n                noOfLines = viewModel.cursorConfig.pageSize * args.value;\n            }\n            else if (args.unit === 4 /* EditorScroll_.Unit.HalfPage */) {\n                noOfLines = Math.round(viewModel.cursorConfig.pageSize / 2) * args.value;\n            }\n            else {\n                noOfLines = args.value;\n            }\n            const deltaLines = (args.direction === 1 /* EditorScroll_.Direction.Up */ ? -1 : 1) * noOfLines;\n            return viewModel.viewLayout.getCurrentScrollTop() + deltaLines * viewModel.cursorConfig.lineHeight;\n        }\n        _runHorizontalEditorScroll(viewModel, source, args) {\n            const desiredScrollLeft = this._computeDesiredScrollLeft(viewModel, args);\n            viewModel.viewLayout.setScrollPosition({ scrollLeft: desiredScrollLeft }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollLeft(viewModel, args) {\n            const deltaColumns = (args.direction === 4 /* EditorScroll_.Direction.Left */ ? -1 : 1) * args.value;\n            return viewModel.viewLayout.getCurrentScrollLeft() + deltaColumns * viewModel.cursorConfig.typicalHalfwidthCharacterWidth;\n        }\n    }\n    CoreNavigationCommands.EditorScrollImpl = EditorScrollImpl;\n    CoreNavigationCommands.EditorScroll = registerEditorCommand(new EditorScrollImpl());\n    CoreNavigationCommands.ScrollLineUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorTop = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorTop',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLineDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorBottom = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorBottom',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLeft = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Left,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollRight = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Right,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    class WordCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.word(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealAllCursors(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.WordSelect = registerEditorCommand(new WordCommand({\n        inSelectionMode: false,\n        id: '_wordSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.WordSelectDrag = registerEditorCommand(new WordCommand({\n        inSelectionMode: true,\n        id: '_wordSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorWordSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'lastCursorWordSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            const lastAddedState = states[lastAddedCursorIndex];\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.word(viewModel, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class LineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealAllCursors(args.source, false, true);\n            }\n        }\n    }\n    CoreNavigationCommands.LineSelect = registerEditorCommand(new LineCommand({\n        inSelectionMode: false,\n        id: '_lineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LineSelectDrag = registerEditorCommand(new LineCommand({\n        inSelectionMode: true,\n        id: '_lineSelectDrag',\n        precondition: undefined\n    }));\n    class LastCursorLineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.line(viewModel, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    }\n    CoreNavigationCommands.LastCursorLineSelect = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: false,\n        id: 'lastCursorLineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorLineSelectDrag = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: true,\n        id: 'lastCursorLineSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.CancelSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cancelSelection',\n                precondition: EditorContextKeys.hasNonEmptySelection,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.cancelSelection(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n            viewModel.revealAllCursors(args.source, true);\n        }\n    });\n    CoreNavigationCommands.RemoveSecondaryCursors = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'removeSecondaryCursors',\n                precondition: EditorContextKeys.hasMultipleSelections,\n                kbOpts: {\n                    weight: CORE_WEIGHT + 1,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                viewModel.getPrimaryCursorState()\n            ]);\n            viewModel.revealAllCursors(args.source, true);\n            status(nls.localize('removedCursor', \"Removed secondary cursors\"));\n        }\n    });\n    CoreNavigationCommands.RevealLine = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'revealLine',\n                precondition: undefined,\n                metadata: RevealLine_.metadata\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const revealLineArg = args;\n            const lineNumberArg = revealLineArg.lineNumber || 0;\n            let lineNumber = typeof lineNumberArg === 'number' ? (lineNumberArg + 1) : (parseInt(lineNumberArg) + 1);\n            if (lineNumber < 1) {\n                lineNumber = 1;\n            }\n            const lineCount = viewModel.model.getLineCount();\n            if (lineNumber > lineCount) {\n                lineNumber = lineCount;\n            }\n            const range = new Range(lineNumber, 1, lineNumber, viewModel.model.getLineMaxColumn(lineNumber));\n            let revealAt = 0 /* VerticalRevealType.Simple */;\n            if (revealLineArg.at) {\n                switch (revealLineArg.at) {\n                    case RevealLine_.RawAtArgument.Top:\n                        revealAt = 3 /* VerticalRevealType.Top */;\n                        break;\n                    case RevealLine_.RawAtArgument.Center:\n                        revealAt = 1 /* VerticalRevealType.Center */;\n                        break;\n                    case RevealLine_.RawAtArgument.Bottom:\n                        revealAt = 4 /* VerticalRevealType.Bottom */;\n                        break;\n                    default:\n                        break;\n                }\n            }\n            const viewRange = viewModel.coordinatesConverter.convertModelRangeToViewRange(range);\n            viewModel.revealRange(args.source, false, viewRange, revealAt, 0 /* ScrollType.Smooth */);\n        }\n    });\n    CoreNavigationCommands.SelectAll = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(SelectAllCommand);\n        }\n        runDOMCommand(activeElement) {\n            if (isFirefox) {\n                activeElement.focus();\n                activeElement.select();\n            }\n            activeElement.ownerDocument.execCommand('selectAll');\n        }\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditorCommand(viewModel, args);\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates('keyboard', 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.selectAll(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n        }\n    }();\n    CoreNavigationCommands.SetSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'setSelection',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.selection) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorState.fromModelSelection(args.selection)\n            ]);\n        }\n    });\n})(CoreNavigationCommands || (CoreNavigationCommands = {}));\nconst columnSelectionCondition = ContextKeyExpr.and(EditorContextKeys.textInputFocus, EditorContextKeys.columnSelection);\nfunction registerColumnSelection(id, keybinding) {\n    KeybindingsRegistry.registerKeybindingRule({\n        id: id,\n        primary: keybinding,\n        when: columnSelectionCondition,\n        weight: CORE_WEIGHT + 1\n    });\n}\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectLeft.id, 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectRight.id, 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectUp.id, 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageUp.id, 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectDown.id, 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageDown.id, 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport var CoreEditingCommands;\n(function (CoreEditingCommands) {\n    class CoreEditingCommand extends EditorCommand {\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditingCommand(editor, viewModel, args || {});\n        }\n    }\n    CoreEditingCommands.CoreEditingCommand = CoreEditingCommand;\n    CoreEditingCommands.LineBreakInsert = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'lineBreakInsert',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 0,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 45 /* KeyCode.KeyO */ }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, EnterOperation.lineBreakInsert(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n        }\n    });\n    CoreEditingCommands.Outdent = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'outdent',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.outdent(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.Tab = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'tab',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.tab(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.DeleteLeft = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 1 /* KeyCode.Backspace */,\n                    secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */],\n                    mac: { primary: 1 /* KeyCode.Backspace */, secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */, 256 /* KeyMod.WinCtrl */ | 38 /* KeyCode.KeyH */, 256 /* KeyMod.WinCtrl */ | 1 /* KeyCode.Backspace */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteLeft(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection), viewModel.getCursorAutoClosedCharacters());\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(2 /* EditOperationType.DeletingLeft */);\n        }\n    });\n    CoreEditingCommands.DeleteRight = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 20 /* KeyCode.Delete */,\n                    mac: { primary: 20 /* KeyCode.Delete */, secondary: [256 /* KeyMod.WinCtrl */ | 34 /* KeyCode.KeyD */, 256 /* KeyMod.WinCtrl */ | 20 /* KeyCode.Delete */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteRight(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection));\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(3 /* EditOperationType.DeletingRight */);\n        }\n    });\n    CoreEditingCommands.Undo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(UndoCommand);\n        }\n        runDOMCommand(activeElement) {\n            activeElement.ownerDocument.execCommand('undo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(92 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().undo();\n        }\n    }();\n    CoreEditingCommands.Redo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(RedoCommand);\n        }\n        runDOMCommand(activeElement) {\n            activeElement.ownerDocument.execCommand('redo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(92 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().redo();\n        }\n    }();\n})(CoreEditingCommands || (CoreEditingCommands = {}));\n/**\n * A command that will invoke a command on the focused editor.\n */\nclass EditorHandlerCommand extends Command {\n    constructor(id, handlerId, metadata) {\n        super({\n            id: id,\n            precondition: undefined,\n            metadata\n        });\n        this._handlerId = handlerId;\n    }\n    runCommand(accessor, args) {\n        const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (!editor) {\n            return;\n        }\n        editor.trigger('keyboard', this._handlerId, args);\n    }\n}\nfunction registerOverwritableCommand(handlerId, metadata) {\n    registerCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\n    registerCommand(new EditorHandlerCommand(handlerId, handlerId, metadata));\n}\nregisterOverwritableCommand(\"type\" /* Handler.Type */, {\n    description: `Type`,\n    args: [{\n            name: 'args',\n            schema: {\n                'type': 'object',\n                'required': ['text'],\n                'properties': {\n                    'text': {\n                        'type': 'string'\n                    }\n                },\n            }\n        }]\n});\nregisterOverwritableCommand(\"replacePreviousChar\" /* Handler.ReplacePreviousChar */);\nregisterOverwritableCommand(\"compositionType\" /* Handler.CompositionType */);\nregisterOverwritableCommand(\"compositionStart\" /* Handler.CompositionStart */);\nregisterOverwritableCommand(\"compositionEnd\" /* Handler.CompositionEnd */);\nregisterOverwritableCommand(\"paste\" /* Handler.Paste */);\nregisterOverwritableCommand(\"cut\" /* Handler.Cut */);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5424, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/view.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewController } from './view/viewController.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { Selection } from '../common/core/selection.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nlet View = class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        // Actual mutable state\n        this._shouldRecomputeGlyphMarginLanes = false;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        // Glyph margin widgets\n        this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n        this._viewParts.push(this._glyphMarginWidgets);\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context, this.domNode);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n            overflowWidgetsDomNode.appendChild(this._overlayWidgets.overflowingOverlayWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n            this.domNode.appendChild(this._overlayWidgets.overflowingOverlayWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _computeGlyphMarginLanes() {\n        const model = this._context.viewModel.model;\n        const laneModel = this._context.viewModel.glyphLanes;\n        let glyphs = [];\n        let maxLineNumber = 0;\n        // Add all margin decorations\n        glyphs = glyphs.concat(model.getAllMarginDecorations().map((decoration) => {\n            const lane = decoration.options.glyphMargin?.position ?? GlyphMarginLane.Center;\n            maxLineNumber = Math.max(maxLineNumber, decoration.range.endLineNumber);\n            return { range: decoration.range, lane, persist: decoration.options.glyphMargin?.persistLane };\n        }));\n        // Add all glyph margin widgets\n        glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map((widget) => {\n            const range = model.validateRange(widget.preference.range);\n            maxLineNumber = Math.max(maxLineNumber, range.endLineNumber);\n            return { range, lane: widget.preference.lane };\n        }));\n        // Sorted by their start position\n        glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        laneModel.reset(maxLineNumber);\n        for (const glyph of glyphs) {\n            laneModel.push(glyph.lane, glyph.range, glyph.persist);\n        }\n        return laneModel;\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        // https://stackoverflow.com/questions/38905916/content-in-google-chrome-larger-than-16777216-px-not-being-rendered\n        this._linesContent.setWidth(16777216);\n        this._linesContent.setHeight(16777216);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(143 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsGlyphMargin) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n        }\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n        }\n        if (this._renderAnimationFrame === null) {\n            const rendering = this._createCoordinatedRendering();\n            this._renderAnimationFrame = EditorRenderingCoordinator.INSTANCE.scheduleCoordinatedRendering({\n                window: dom.getWindow(this.domNode?.domNode),\n                prepareRenderText: () => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    try {\n                        return rendering.prepareRenderText();\n                    }\n                    finally {\n                        this._renderAnimationFrame = null;\n                    }\n                },\n                renderText: () => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.renderText();\n                },\n                prepareRender: (viewParts, ctx) => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.prepareRender(viewParts, ctx);\n                },\n                render: (viewParts, ctx) => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.render(viewParts, ctx);\n                }\n            });\n        }\n    }\n    _flushAccumulatedAndRenderNow() {\n        const rendering = this._createCoordinatedRendering();\n        safeInvokeNoArg(() => rendering.prepareRenderText());\n        const data = safeInvokeNoArg(() => rendering.renderText());\n        if (data) {\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n            safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n        }\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _createCoordinatedRendering() {\n        return {\n            prepareRenderText: () => {\n                if (this._shouldRecomputeGlyphMarginLanes) {\n                    this._shouldRecomputeGlyphMarginLanes = false;\n                    const model = this._computeGlyphMarginLanes();\n                    this._context.configuration.setGlyphMarginDecorationLaneCount(model.requiredLanes);\n                }\n                inputLatency.onRenderStart();\n            },\n            renderText: () => {\n                if (!this.domNode.domNode.isConnected) {\n                    return null;\n                }\n                let viewPartsToRender = this._getViewPartsToRender();\n                if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n                    // Nothing to render\n                    return null;\n                }\n                const partialViewportData = this._context.viewLayout.getLinesViewportData();\n                this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n                const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n                if (this._contentWidgets.shouldRender()) {\n                    // Give the content widgets a chance to set their max width before a possible synchronous layout\n                    this._contentWidgets.onBeforeRender(viewportData);\n                }\n                if (this._viewLines.shouldRender()) {\n                    this._viewLines.renderText(viewportData);\n                    this._viewLines.onDidRender();\n                    // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n                    viewPartsToRender = this._getViewPartsToRender();\n                }\n                return [viewPartsToRender, new RenderingContext(this._context.viewLayout, viewportData, this._viewLines)];\n            },\n            prepareRender: (viewPartsToRender, ctx) => {\n                for (const viewPart of viewPartsToRender) {\n                    viewPart.prepareRender(ctx);\n                }\n            },\n            render: (viewPartsToRender, ctx) => {\n                for (const viewPart of viewPartsToRender) {\n                    viewPart.render(ctx);\n                    viewPart.onDidRender();\n                }\n            }\n        };\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        this._contentWidgets.setWidgetPosition(widgetData.widget, widgetData.position?.position ?? null, widgetData.position?.secondaryPosition ?? null, widgetData.position?.preference ?? null, widgetData.position?.positionAffinity ?? null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, widgetData.position);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.addWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n    layoutGlyphMarginWidget(widgetData) {\n        const newPreference = widgetData.position;\n        const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n            this._scheduleRender();\n        }\n    }\n    removeGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.removeWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n};\nView = __decorate([\n    __param(6, IInstantiationService)\n], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n        return null;\n    }\n}\nclass EditorRenderingCoordinator {\n    static { this.INSTANCE = new EditorRenderingCoordinator(); }\n    constructor() {\n        this._coordinatedRenderings = [];\n        this._animationFrameRunners = new Map();\n    }\n    scheduleCoordinatedRendering(rendering) {\n        this._coordinatedRenderings.push(rendering);\n        this._scheduleRender(rendering.window);\n        return {\n            dispose: () => {\n                const renderingIndex = this._coordinatedRenderings.indexOf(rendering);\n                if (renderingIndex === -1) {\n                    return;\n                }\n                this._coordinatedRenderings.splice(renderingIndex, 1);\n                if (this._coordinatedRenderings.length === 0) {\n                    // There are no more renderings to coordinate => cancel animation frames\n                    for (const [_, disposable] of this._animationFrameRunners) {\n                        disposable.dispose();\n                    }\n                    this._animationFrameRunners.clear();\n                }\n            }\n        };\n    }\n    _scheduleRender(window) {\n        if (!this._animationFrameRunners.has(window)) {\n            const runner = () => {\n                this._animationFrameRunners.delete(window);\n                this._onRenderScheduled();\n            };\n            this._animationFrameRunners.set(window, dom.runAtThisOrScheduleAtNextAnimationFrame(window, runner, 100));\n        }\n    }\n    _onRenderScheduled() {\n        const coordinatedRenderings = this._coordinatedRenderings.slice(0);\n        this._coordinatedRenderings = [];\n        for (const rendering of coordinatedRenderings) {\n            safeInvokeNoArg(() => rendering.prepareRenderText());\n        }\n        const datas = [];\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            datas[i] = safeInvokeNoArg(() => rendering.renderText());\n        }\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            const data = datas[i];\n            if (!data) {\n                continue;\n            }\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n        }\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            const data = datas[i];\n            if (!data) {\n                continue;\n            }\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n        }\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAU9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA,IAAI,aAAa,AAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAK,SAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;IACjF,IAAI,IAAI,UAAU,MAAM,EAAE,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,wBAAwB,CAAC,QAAQ,OAAO,MAAM;IAC3H,IAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,QAAQ,KAAK,YAAY,IAAI,QAAQ,QAAQ,CAAC,YAAY,QAAQ,KAAK;SACpH,IAAK,IAAI,IAAI,WAAW,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK,IAAI,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,QAAQ,KAAK,KAAK,EAAE,QAAQ,IAAI,KAAK;IAChJ,OAAO,IAAI,KAAK,KAAK,OAAO,cAAc,CAAC,QAAQ,KAAK,IAAI;AAChE;AACA,IAAI,UAAU,AAAC,IAAI,IAAI,IAAI,CAAC,OAAO,IAAK,SAAU,UAAU,EAAE,SAAS;IACnE,OAAO,SAAU,MAAM,EAAE,GAAG;QAAI,UAAU,QAAQ,KAAK;IAAa;AACxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAI,OAAO,MAAM,aAAa,qLAAA,CAAA,mBAAgB;IAC1C,YAAY,eAAe,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,eAAe,EAAE,sBAAsB,EAAE,qBAAqB,CAAE;QAC3H,KAAK;QACL,IAAI,CAAC,qBAAqB,GAAG;QAC7B,uBAAuB;QACvB,IAAI,CAAC,gCAAgC,GAAG;QACxC,IAAI,CAAC,WAAW,GAAG;YAAC,IAAI,sLAAA,CAAA,YAAS,CAAC,GAAG,GAAG,GAAG;SAAG;QAC9C,IAAI,CAAC,qBAAqB,GAAG;QAC7B,MAAM,iBAAiB,IAAI,4LAAA,CAAA,iBAAc,CAAC,eAAe,OAAO,iBAAiB;QACjF,6FAA6F;QAC7F,IAAI,CAAC,QAAQ,GAAG,IAAI,6LAAA,CAAA,cAAW,CAAC,eAAe,YAAY;QAC3D,2EAA2E;QAC3E,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI;QAClC,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,mBAAmB;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,mMAAA,CAAA,kBAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,gBAAgB,IAAI,CAAC,4BAA4B;QACnJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB;QAC1C,yHAAyH;QACzH,IAAI,CAAC,aAAa,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QAC9D,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB;QAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB;QAClD,oGAAoG;QACpG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ;QAClC,IAAI,CAAC,uBAAuB,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QACxE,sLAAA,CAAA,mBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,iCAAiC;QACxF,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,qNAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,uBAAuB;QACnH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;QACpC,aAAa;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,qMAAA,CAAA,YAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa;QACjE,aAAa;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,yMAAA,CAAA,YAAS,CAAC,IAAI,CAAC,QAAQ;QAC7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;QACpC,6BAA6B;QAC7B,MAAM,2BAA2B,IAAI,4NAAA,CAAA,2BAAwB,CAAC,IAAI,CAAC,QAAQ;QAC3E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,MAAM,mBAAmB,IAAI,uNAAA,CAAA,2BAAwB,CAAC,IAAI,CAAC,QAAQ;QACnE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,MAAM,sBAAsB,IAAI,0LAAA,CAAA,sBAAmB,CAAC,IAAI,CAAC,QAAQ;QACjE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,oBAAoB,iBAAiB,CAAC,IAAI,+NAAA,CAAA,8BAA2B,CAAC,IAAI,CAAC,QAAQ;QACnF,oBAAoB,iBAAiB,CAAC,IAAI,2MAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,QAAQ;QACzE,oBAAoB,iBAAiB,CAAC,IAAI,+MAAA,CAAA,sBAAmB,CAAC,IAAI,CAAC,QAAQ;QAC3E,oBAAoB,iBAAiB,CAAC,IAAI,6MAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,QAAQ;QAC1E,oBAAoB,iBAAiB,CAAC,IAAI,2MAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,QAAQ;QACzE,MAAM,qBAAqB,IAAI,0LAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,QAAQ;QAC/D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,mBAAmB,iBAAiB,CAAC,IAAI,+NAAA,CAAA,oCAAiC,CAAC,IAAI,CAAC,QAAQ;QACxF,mBAAmB,iBAAiB,CAAC,IAAI,yNAAA,CAAA,mCAAgC,CAAC,IAAI,CAAC,QAAQ;QACvF,mBAAmB,iBAAiB,CAAC,IAAI,uNAAA,CAAA,0BAAuB,CAAC,IAAI,CAAC,QAAQ;QAC9E,mBAAmB,iBAAiB,CAAC,IAAI,6MAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,QAAQ;QACzE,uBAAuB;QACvB,IAAI,CAAC,mBAAmB,GAAG,IAAI,6MAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,QAAQ;QAC/D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB;QAC7C,MAAM,SAAS,IAAI,mMAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ;QACvC,OAAO,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa;QAC7D,OAAO,UAAU,GAAG,WAAW,CAAC,mBAAmB,UAAU;QAC7D,OAAO,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO;QAChE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,mNAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO;QACzE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe;QACzC,IAAI,CAAC,YAAY,GAAG,IAAI,6MAAA,CAAA,cAAW,CAAC,IAAI,CAAC,QAAQ;QACjD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY;QACtC,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,mNAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO;QACzE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe;QACzC,MAAM,SAAS,IAAI,mMAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ;QACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,MAAM,eAAe,IAAI,uNAAA,CAAA,mBAAgB,CAAC,IAAI,CAAC,QAAQ;QACvD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,MAAM,UAAU,IAAI,qMAAA,CAAA,UAAO,CAAC,IAAI,CAAC,QAAQ;QACzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,mCAAmC;QACnC,IAAI,0BAA0B;YAC1B,MAAM,oBAAoB,IAAI,CAAC,UAAU,CAAC,0BAA0B;YACpE,kBAAkB,MAAM,CAAC,YAAY,CAAC,yBAAyB,UAAU,IAAI,kBAAkB,YAAY;QAC/G;QACA,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,UAAU;QAC7D,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,OAAO;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO;QACtD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU;QACzD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO;QAC3D,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU;QAC3D,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,OAAO,UAAU;QAC1D,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU;QACnE,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,iBAAiB,UAAU;QACpE,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ;QACvE,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa;QAC5E,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU;QACxE,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,QAAQ,UAAU;QAC3D,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,aAAa,OAAO;QAC7D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB;QACrD,IAAI,wBAAwB;YACxB,uBAAuB,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,gCAAgC,CAAC,OAAO;YAChG,uBAAuB,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,gCAAgC,CAAC,OAAO;QACpG,OACK;YACD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,gCAAgC;YAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,gCAAgC;QAClF;QACA,IAAI,CAAC,YAAY;QACjB,kBAAkB;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,kMAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,gBAAgB,IAAI,CAAC,2BAA2B;IAC5H;IACA,2BAA2B;QACvB,MAAM,QAAQ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;QAC3C,MAAM,YAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU;QACpD,IAAI,SAAS,EAAE;QACf,IAAI,gBAAgB;QACpB,6BAA6B;QAC7B,SAAS,OAAO,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAG,CAAC,CAAC;YACxD,MAAM,OAAO,WAAW,OAAO,CAAC,WAAW,EAAE,YAAY,0KAAA,CAAA,kBAAe,CAAC,MAAM;YAC/E,gBAAgB,KAAK,GAAG,CAAC,eAAe,WAAW,KAAK,CAAC,aAAa;YACtE,OAAO;gBAAE,OAAO,WAAW,KAAK;gBAAE;gBAAM,SAAS,WAAW,OAAO,CAAC,WAAW,EAAE;YAAY;QACjG;QACA,+BAA+B;QAC/B,SAAS,OAAO,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;YAC9D,MAAM,QAAQ,MAAM,aAAa,CAAC,OAAO,UAAU,CAAC,KAAK;YACzD,gBAAgB,KAAK,GAAG,CAAC,eAAe,MAAM,aAAa;YAC3D,OAAO;gBAAE;gBAAO,MAAM,OAAO,UAAU,CAAC,IAAI;YAAC;QACjD;QACA,iCAAiC;QACjC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAM,kLAAA,CAAA,QAAK,CAAC,wBAAwB,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK;QACrE,UAAU,KAAK,CAAC;QAChB,KAAK,MAAM,SAAS,OAAQ;YACxB,UAAU,IAAI,CAAC,MAAM,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,OAAO;QACzD;QACA,OAAO;IACX;IACA,8BAA8B;QAC1B,OAAO;YACH,aAAa,IAAI,CAAC,OAAO,CAAC,OAAO;YACjC,qBAAqB,IAAI,CAAC,aAAa,CAAC,OAAO;YAC/C,kBAAkB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,OAAO;YACtD,eAAe;gBACX,IAAI,CAAC,KAAK;YACd;YACA,uBAAuB,CAAC;gBACpB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC;YACzD;YACA,mBAAmB;gBACf,MAAM,4BAA4B,IAAI,CAAC,YAAY,CAAC,iBAAiB,MAAM,EAAE;gBAC7E,MAAM,uBAAuB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB;gBACpE,OAAO,IAAI,+LAAA,CAAA,+BAA4B,CAAC,2BAA2B;YACvE;YACA,WAAW;gBACP,IAAI,CAAC,MAAM,CAAC,MAAM;YACtB;YACA,mCAAmC,CAAC;gBAChC,OAAO,IAAI,CAAC,UAAU,CAAC,iCAAiC,CAAC;YAC7D;YACA,iCAAiC,CAAC;gBAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,+BAA+B,CAAC;YAChE;YACA,wBAAwB,CAAC,UAAU;gBAC/B,IAAI,CAAC,6BAA6B;gBAClC,OAAO,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,UAAU;YAC5D;YACA,yBAAyB,CAAC,YAAY;gBAClC,IAAI,CAAC,6BAA6B;gBAClC,OAAO,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,IAAI,qLAAA,CAAA,WAAQ,CAAC,YAAY;YAC5E;YACA,cAAc,CAAC;gBACX,IAAI,CAAC,6BAA6B;gBAClC,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;YACxC;QACJ;IACJ;IACA,+BAA+B;QAC3B,OAAO;YACH,yBAAyB,CAAC;gBACtB,IAAI,CAAC,6BAA6B;gBAClC,OAAO,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC;YACnD;QACJ;IACJ;IACA,eAAe;QACX,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,aAAa,QAAQ,GAAG,CAAC,IAAI,2BAA2B;QAC9D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,KAAK;QACtC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,MAAM;QACxC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,WAAW,KAAK;QACtD,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,WAAW,MAAM;QACxD,mHAAmH;QACnH,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;IACjC;IACA,sBAAsB;QAClB,MAAM,UAAU,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,aAAa;QACjE,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,gCAAgC,OAAM,MAAM,CAAA,GAAA,4LAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI;IACpJ;IACA,2BAA2B;IAC3B,aAAa,MAAM,EAAE;QACjB,KAAK,CAAC,aAAa;QACnB,IAAI,CAAC,eAAe;IACxB;IACA,uBAAuB,CAAC,EAAE;QACtB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB;QAClD,IAAI,CAAC,YAAY;QACjB,OAAO;IACX;IACA,qBAAqB,CAAC,EAAE;QACpB,IAAI,CAAC,WAAW,GAAG,EAAE,UAAU;QAC/B,OAAO;IACX;IACA,qBAAqB,CAAC,EAAE;QACpB,IAAI,EAAE,kBAAkB,EAAE;YACtB,IAAI,CAAC,gCAAgC,GAAG;QAC5C;QACA,OAAO;IACX;IACA,eAAe,CAAC,EAAE;QACd,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB;QAClD,OAAO;IACX;IACA,eAAe,CAAC,EAAE;QACd,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK;QAClC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB;QAClD,OAAO;IACX;IACA,yBAAyB;IACzB,UAAU;QACN,IAAI,IAAI,CAAC,qBAAqB,KAAK,MAAM;YACrC,IAAI,CAAC,qBAAqB,CAAC,OAAO;YAClC,IAAI,CAAC,qBAAqB,GAAG;QACjC;QACA,IAAI,CAAC,eAAe,CAAC,gCAAgC,CAAC,OAAO,CAAC,MAAM;QACpE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI;QACrC,IAAI,CAAC,UAAU,CAAC,OAAO;QACvB,qBAAqB;QACrB,KAAK,MAAM,YAAY,IAAI,CAAC,UAAU,CAAE;YACpC,SAAS,OAAO;QACpB;QACA,KAAK,CAAC;IACV;IACA,kBAAkB;QACd,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YACxB,MAAM,IAAI,yKAAA,CAAA,qBAAkB;QAChC;QACA,IAAI,IAAI,CAAC,qBAAqB,KAAK,MAAM;YACrC,MAAM,YAAY,IAAI,CAAC,2BAA2B;YAClD,IAAI,CAAC,qBAAqB,GAAG,2BAA2B,QAAQ,CAAC,4BAA4B,CAAC;gBAC1F,QAAQ,CAAA,GAAA,uKAAA,CAAA,YAAa,AAAD,EAAE,IAAI,CAAC,OAAO,EAAE;gBACpC,mBAAmB;oBACf,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;wBACxB,MAAM,IAAI,yKAAA,CAAA,qBAAkB;oBAChC;oBACA,IAAI;wBACA,OAAO,UAAU,iBAAiB;oBACtC,SACQ;wBACJ,IAAI,CAAC,qBAAqB,GAAG;oBACjC;gBACJ;gBACA,YAAY;oBACR,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;wBACxB,MAAM,IAAI,yKAAA,CAAA,qBAAkB;oBAChC;oBACA,OAAO,UAAU,UAAU;gBAC/B;gBACA,eAAe,CAAC,WAAW;oBACvB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;wBACxB,MAAM,IAAI,yKAAA,CAAA,qBAAkB;oBAChC;oBACA,OAAO,UAAU,aAAa,CAAC,WAAW;gBAC9C;gBACA,QAAQ,CAAC,WAAW;oBAChB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;wBACxB,MAAM,IAAI,yKAAA,CAAA,qBAAkB;oBAChC;oBACA,OAAO,UAAU,MAAM,CAAC,WAAW;gBACvC;YACJ;QACJ;IACJ;IACA,gCAAgC;QAC5B,MAAM,YAAY,IAAI,CAAC,2BAA2B;QAClD,gBAAgB,IAAM,UAAU,iBAAiB;QACjD,MAAM,OAAO,gBAAgB,IAAM,UAAU,UAAU;QACvD,IAAI,MAAM;YACN,MAAM,CAAC,WAAW,IAAI,GAAG;YACzB,gBAAgB,IAAM,UAAU,aAAa,CAAC,WAAW;YACzD,gBAAgB,IAAM,UAAU,MAAM,CAAC,WAAW;QACtD;IACJ;IACA,wBAAwB;QACpB,MAAM,SAAS,EAAE;QACjB,IAAI,YAAY;QAChB,KAAK,MAAM,YAAY,IAAI,CAAC,UAAU,CAAE;YACpC,IAAI,SAAS,YAAY,IAAI;gBACzB,MAAM,CAAC,YAAY,GAAG;YAC1B;QACJ;QACA,OAAO;IACX;IACA,8BAA8B;QAC1B,OAAO;YACH,mBAAmB;gBACf,IAAI,IAAI,CAAC,gCAAgC,EAAE;oBACvC,IAAI,CAAC,gCAAgC,GAAG;oBACxC,MAAM,QAAQ,IAAI,CAAC,wBAAwB;oBAC3C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,iCAAiC,CAAC,MAAM,aAAa;gBACrF;gBACA,+KAAA,CAAA,eAAY,CAAC,aAAa;YAC9B;YACA,YAAY;gBACR,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;oBACnC,OAAO;gBACX;gBACA,IAAI,oBAAoB,IAAI,CAAC,qBAAqB;gBAClD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,MAAM,kBAAkB,MAAM,KAAK,GAAG;oBACnE,oBAAoB;oBACpB,OAAO;gBACX;gBACA,MAAM,sBAAsB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,oBAAoB;gBACzE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,oBAAoB,eAAe,EAAE,oBAAoB,aAAa,EAAE,oBAAoB,kBAAkB;gBAClJ,MAAM,eAAe,IAAI,wMAAA,CAAA,eAAY,CAAC,IAAI,CAAC,WAAW,EAAE,qBAAqB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,yBAAyB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAC1J,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,IAAI;oBACrC,gGAAgG;oBAChG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;gBACxC;gBACA,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI;oBAChC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBAC3B,IAAI,CAAC,UAAU,CAAC,WAAW;oBAC3B,mGAAmG;oBACnG,oBAAoB,IAAI,CAAC,qBAAqB;gBAClD;gBACA,OAAO;oBAAC;oBAAmB,IAAI,8LAAA,CAAA,mBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,cAAc,IAAI,CAAC,UAAU;iBAAE;YAC7G;YACA,eAAe,CAAC,mBAAmB;gBAC/B,KAAK,MAAM,YAAY,kBAAmB;oBACtC,SAAS,aAAa,CAAC;gBAC3B;YACJ;YACA,QAAQ,CAAC,mBAAmB;gBACxB,KAAK,MAAM,YAAY,kBAAmB;oBACtC,SAAS,MAAM,CAAC;oBAChB,SAAS,WAAW;gBACxB;YACJ;QACJ;IACJ;IACA,+BAA+B;IAC/B,qCAAqC,YAAY,EAAE;QAC/C,IAAI,CAAC,UAAU,CAAC,oCAAoC,CAAC;IACzD;IACA,kCAAkC,YAAY,EAAE;QAC5C,IAAI,CAAC,UAAU,CAAC,iCAAiC,CAAC;IACtD;IACA,aAAa,cAAc,EAAE;QACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC;YACjD,WAAW,eAAe,SAAS;YACnC,YAAY,eAAe,UAAU;QACzC,GAAG,EAAE,wBAAwB;QAC7B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,sBAAsB;IAClD;IACA,mBAAmB,eAAe,EAAE,WAAW,EAAE;QAC7C,MAAM,gBAAgB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC;YACjE,YAAY;YACZ,QAAQ;QACZ;QACA,MAAM,eAAe,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,CAAC,kCAAkC,CAAC;QACrG,IAAI,CAAC,6BAA6B;QAClC,MAAM,eAAe,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,IAAI,qLAAA,CAAA,WAAQ,CAAC,aAAa,UAAU,EAAE,aAAa,MAAM;QACtH,IAAI,CAAC,cAAc;YACf,OAAO,CAAC;QACZ;QACA,OAAO,aAAa,IAAI;IAC5B;IACA,uBAAuB,OAAO,EAAE,OAAO,EAAE;QACrC,MAAM,cAAc,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,SAAS;QACzE,IAAI,CAAC,aAAa;YACd,OAAO;QACX;QACA,OAAO,iMAAA,CAAA,sBAAmB,CAAC,6BAA6B,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB;IACtH;IACA,oBAAoB,YAAY,EAAE;QAC9B,OAAO,IAAI,iNAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,QAAQ,EAAE;IAC5C;IACA,OAAO,QAAQ,EAAE;QACb,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;QAChC,IAAI,CAAC,eAAe;IACxB;IACA,OAAO,GAAG,EAAE,UAAU,EAAE;QACpB,IAAI,YAAY;YACZ,gCAAgC;YAChC,IAAI,CAAC,UAAU,CAAC,iBAAiB;YACjC,KAAK,MAAM,YAAY,IAAI,CAAC,UAAU,CAAE;gBACpC,SAAS,iBAAiB;YAC9B;QACJ;QACA,IAAI,KAAK;YACL,IAAI,CAAC,6BAA6B;QACtC,OACK;YACD,IAAI,CAAC,eAAe;QACxB;IACJ;IACA,yBAAyB,MAAM,EAAE;QAC7B,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC;IACnD;IACA,QAAQ;QACJ,IAAI,CAAC,gBAAgB,CAAC,aAAa;IACvC;IACA,YAAY;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS;IAC1C;IACA,eAAe,OAAO,EAAE;QACpB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;IACzC;IACA,iBAAiB,UAAU,EAAE;QACzB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,MAAM;QAChD,IAAI,CAAC,mBAAmB,CAAC;QACzB,IAAI,CAAC,eAAe;IACxB;IACA,oBAAoB,UAAU,EAAE;QAC5B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,MAAM,EAAE,WAAW,QAAQ,EAAE,YAAY,MAAM,WAAW,QAAQ,EAAE,qBAAqB,MAAM,WAAW,QAAQ,EAAE,cAAc,MAAM,WAAW,QAAQ,EAAE,oBAAoB;QACnO,IAAI,CAAC,eAAe;IACxB;IACA,oBAAoB,UAAU,EAAE;QAC5B,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,MAAM;QACnD,IAAI,CAAC,eAAe;IACxB;IACA,iBAAiB,UAAU,EAAE;QACzB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,MAAM;QAChD,IAAI,CAAC,mBAAmB,CAAC;QACzB,IAAI,CAAC,eAAe;IACxB;IACA,oBAAoB,UAAU,EAAE;QAC5B,MAAM,eAAe,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,MAAM,EAAE,WAAW,QAAQ;QAClG,IAAI,cAAc;YACd,IAAI,CAAC,eAAe;QACxB;IACJ;IACA,oBAAoB,UAAU,EAAE;QAC5B,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,MAAM;QACnD,IAAI,CAAC,eAAe;IACxB;IACA,qBAAqB,UAAU,EAAE;QAC7B,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,WAAW,MAAM;QACpD,IAAI,CAAC,gCAAgC,GAAG;QACxC,IAAI,CAAC,eAAe;IACxB;IACA,wBAAwB,UAAU,EAAE;QAChC,MAAM,gBAAgB,WAAW,QAAQ;QACzC,MAAM,eAAe,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,WAAW,MAAM,EAAE;QACnF,IAAI,cAAc;YACd,IAAI,CAAC,gCAAgC,GAAG;YACxC,IAAI,CAAC,eAAe;QACxB;IACJ;IACA,wBAAwB,UAAU,EAAE;QAChC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,WAAW,MAAM;QACvD,IAAI,CAAC,gCAAgC,GAAG;QACxC,IAAI,CAAC,eAAe;IACxB;AACJ;AACA,OAAO,WAAW;IACd,QAAQ,GAAG,qMAAA,CAAA,wBAAqB;CACnC,EAAE;;AAEH,SAAS,gBAAgB,IAAI;IACzB,IAAI;QACA,OAAO;IACX,EACA,OAAO,GAAG;QACN,CAAA,GAAA,yKAAA,CAAA,oBAAiB,AAAD,EAAE;QAClB,OAAO;IACX;AACJ;AACA,MAAM;IACF,MAAO;QAAE,IAAI,CAAC,QAAQ,GAAG,IAAI;IAA8B,CAAC;IAC5D,aAAc;QACV,IAAI,CAAC,sBAAsB,GAAG,EAAE;QAChC,IAAI,CAAC,sBAAsB,GAAG,IAAI;IACtC;IACA,6BAA6B,SAAS,EAAE;QACpC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,UAAU,MAAM;QACrC,OAAO;YACH,SAAS;gBACL,MAAM,iBAAiB,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC;gBAC3D,IAAI,mBAAmB,CAAC,GAAG;oBACvB;gBACJ;gBACA,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,gBAAgB;gBACnD,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,GAAG;oBAC1C,wEAAwE;oBACxE,KAAK,MAAM,CAAC,GAAG,WAAW,IAAI,IAAI,CAAC,sBAAsB,CAAE;wBACvD,WAAW,OAAO;oBACtB;oBACA,IAAI,CAAC,sBAAsB,CAAC,KAAK;gBACrC;YACJ;QACJ;IACJ;IACA,gBAAgB,MAAM,EAAE;QACpB,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,SAAS;YAC1C,MAAM,SAAS;gBACX,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;gBACnC,IAAI,CAAC,kBAAkB;YAC3B;YACA,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,QAAQ,CAAA,GAAA,uKAAA,CAAA,0CAA2C,AAAD,EAAE,QAAQ,QAAQ;QACxG;IACJ;IACA,qBAAqB;QACjB,MAAM,wBAAwB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QAChE,IAAI,CAAC,sBAAsB,GAAG,EAAE;QAChC,KAAK,MAAM,aAAa,sBAAuB;YAC3C,gBAAgB,IAAM,UAAU,iBAAiB;QACrD;QACA,MAAM,QAAQ,EAAE;QAChB,IAAK,IAAI,IAAI,GAAG,MAAM,sBAAsB,MAAM,EAAE,IAAI,KAAK,IAAK;YAC9D,MAAM,YAAY,qBAAqB,CAAC,EAAE;YAC1C,KAAK,CAAC,EAAE,GAAG,gBAAgB,IAAM,UAAU,UAAU;QACzD;QACA,IAAK,IAAI,IAAI,GAAG,MAAM,sBAAsB,MAAM,EAAE,IAAI,KAAK,IAAK;YAC9D,MAAM,YAAY,qBAAqB,CAAC,EAAE;YAC1C,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM;gBACP;YACJ;YACA,MAAM,CAAC,WAAW,IAAI,GAAG;YACzB,gBAAgB,IAAM,UAAU,aAAa,CAAC,WAAW;QAC7D;QACA,IAAK,IAAI,IAAI,GAAG,MAAM,sBAAsB,MAAM,EAAE,IAAI,KAAK,IAAK;YAC9D,MAAM,YAAY,qBAAqB,CAAC,EAAE;YAC1C,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM;gBACP;YACJ;YACA,MAAM,CAAC,WAAW,IAAI,GAAG;YACzB,gBAAgB,IAAM,UAAU,MAAM,CAAC,WAAW;QACtD;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6082, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    static capture(editor) {\n        if (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n            // Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n            return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n        }\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        const visibleRanges = editor.getVisibleRanges();\n        if (visibleRanges.length > 0) {\n            visiblePosition = visibleRanges[0].getStartPosition();\n            const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n            visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n        }\n        return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    constructor(_initialScrollTop, _initialContentHeight, _visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._initialScrollTop = _initialScrollTop;\n        this._initialContentHeight = _initialContentHeight;\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    restore(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset, 1 /* ScrollType.Immediate */);\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AACvF,MAAM;IACT,OAAO,QAAQ,MAAM,EAAE;QACnB,IAAI,OAAO,YAAY,OAAO,KAAK,OAAO,yBAAyB,IAAI;YACnE,mHAAmH;YACnH,OAAO,IAAI,wBAAwB,OAAO,YAAY,IAAI,OAAO,gBAAgB,IAAI,MAAM,GAAG;QAClG;QACA,IAAI,kBAAkB;QACtB,IAAI,6BAA6B;QACjC,MAAM,gBAAgB,OAAO,gBAAgB;QAC7C,IAAI,cAAc,MAAM,GAAG,GAAG;YAC1B,kBAAkB,aAAa,CAAC,EAAE,CAAC,gBAAgB;YACnD,MAAM,2BAA2B,OAAO,iBAAiB,CAAC,gBAAgB,UAAU,EAAE,gBAAgB,MAAM;YAC5G,6BAA6B,OAAO,YAAY,KAAK;QACzD;QACA,OAAO,IAAI,wBAAwB,OAAO,YAAY,IAAI,OAAO,gBAAgB,IAAI,iBAAiB,4BAA4B,OAAO,WAAW;IACxJ;IACA,YAAY,iBAAiB,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,2BAA2B,EAAE,eAAe,CAAE;QAClH,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,qBAAqB,GAAG;QAC7B,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,2BAA2B,GAAG;QACnC,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,QAAQ,MAAM,EAAE;QACZ,IAAI,IAAI,CAAC,qBAAqB,KAAK,OAAO,gBAAgB,MAAM,IAAI,CAAC,iBAAiB,KAAK,OAAO,YAAY,IAAI;YAC9G,8FAA8F;YAC9F;QACJ;QACA,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,MAAM,2BAA2B,OAAO,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM;YACxH,OAAO,YAAY,CAAC,2BAA2B,IAAI,CAAC,2BAA2B;QACnF;IACJ;IACA,wCAAwC,MAAM,EAAE;QAC5C,IAAI,IAAI,CAAC,qBAAqB,KAAK,OAAO,gBAAgB,MAAM,IAAI,CAAC,iBAAiB,KAAK,OAAO,YAAY,IAAI;YAC9G,8FAA8F;YAC9F;QACJ;QACA,MAAM,wBAAwB,OAAO,WAAW;QAChD,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,uBAAuB;YACjD;QACJ;QACA,MAAM,SAAS,OAAO,mBAAmB,CAAC,sBAAsB,UAAU,IAAI,OAAO,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU;QACxI,OAAO,YAAY,CAAC,OAAO,YAAY,KAAK,QAAQ,EAAE,wBAAwB;IAClF;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6140, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/observableCodeEditor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equalsIfDefined, itemsEquals } from '../../base/common/equals.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../base/common/lifecycle.js';\nimport { autorun, autorunOpts, autorunWithStoreHandleChanges, derived, derivedOpts, observableFromEvent, observableSignal, observableValue, observableValueOpts } from '../../base/common/observable.js';\nimport { TransactionImpl } from '../../base/common/observableInternal/base.js';\nimport { derivedWithSetter } from '../../base/common/observableInternal/derived.js';\nimport { Selection } from '../common/core/selection.js';\n/**\n * Returns a facade for the code editor that provides observables for various states/events.\n*/\nexport function observableCodeEditor(editor) {\n    return ObservableCodeEditor.get(editor);\n}\nexport class ObservableCodeEditor extends Disposable {\n    static { this._map = new Map(); }\n    /**\n     * Make sure that editor is not disposed yet!\n    */\n    static get(editor) {\n        let result = ObservableCodeEditor._map.get(editor);\n        if (!result) {\n            result = new ObservableCodeEditor(editor);\n            ObservableCodeEditor._map.set(editor, result);\n            const d = editor.onDidDispose(() => {\n                const item = ObservableCodeEditor._map.get(editor);\n                if (item) {\n                    ObservableCodeEditor._map.delete(editor);\n                    item.dispose();\n                    d.dispose();\n                }\n            });\n        }\n        return result;\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            this._currentTransaction = new TransactionImpl(() => {\n                /** @description Update editor state */\n            });\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            const t = this._currentTransaction;\n            this._currentTransaction = undefined;\n            t.finish();\n        }\n    }\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._updateCounter = 0;\n        this._currentTransaction = undefined;\n        this._model = observableValue(this, this.editor.getModel());\n        this.model = this._model;\n        this.isReadonly = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(92 /* EditorOption.readOnly */));\n        this._versionId = observableValueOpts({ owner: this, lazy: true }, this.editor.getModel()?.getVersionId() ?? null);\n        this.versionId = this._versionId;\n        this._selections = observableValueOpts({ owner: this, equalsFn: equalsIfDefined(itemsEquals(Selection.selectionsEqual)), lazy: true }, this.editor.getSelections() ?? null);\n        this.selections = this._selections;\n        this.isFocused = observableFromEvent(this, e => {\n            const d1 = this.editor.onDidFocusEditorWidget(e);\n            const d2 = this.editor.onDidBlurEditorWidget(e);\n            return {\n                dispose() {\n                    d1.dispose();\n                    d2.dispose();\n                }\n            };\n        }, () => this.editor.hasWidgetFocus());\n        this.value = derivedWithSetter(this, reader => { this.versionId.read(reader); return this.model.read(reader)?.getValue() ?? ''; }, (value, tx) => {\n            const model = this.model.get();\n            if (model !== null) {\n                if (value !== model.getValue()) {\n                    model.setValue(value);\n                }\n            }\n        });\n        this.valueIsEmpty = derived(this, reader => { this.versionId.read(reader); return this.editor.getModel()?.getValueLength() === 0; });\n        this.cursorSelection = derivedOpts({ owner: this, equalsFn: equalsIfDefined(Selection.selectionsEqual) }, reader => this.selections.read(reader)?.[0] ?? null);\n        this.onDidType = observableSignal(this);\n        this.scrollTop = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollTop());\n        this.scrollLeft = observableFromEvent(this.editor.onDidScrollChange, () => this.editor.getScrollLeft());\n        this.layoutInfo = observableFromEvent(this.editor.onDidLayoutChange, () => this.editor.getLayoutInfo());\n        this.layoutInfoContentLeft = this.layoutInfo.map(l => l.contentLeft);\n        this.layoutInfoDecorationsLeft = this.layoutInfo.map(l => l.decorationsLeft);\n        this.contentWidth = observableFromEvent(this.editor.onDidContentSizeChange, () => this.editor.getContentWidth());\n        this._overlayWidgetCounter = 0;\n        this._register(this.editor.onBeginUpdate(() => this._beginUpdate()));\n        this._register(this.editor.onEndUpdate(() => this._endUpdate()));\n        this._register(this.editor.onDidChangeModel(() => {\n            this._beginUpdate();\n            try {\n                this._model.set(this.editor.getModel(), this._currentTransaction);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this._beginUpdate();\n            try {\n                this._forceUpdate();\n                this.onDidType.trigger(this._currentTransaction, e);\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent(e => {\n            this._beginUpdate();\n            try {\n                this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, e);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n        this._register(this.editor.onDidChangeCursorSelection(e => {\n            this._beginUpdate();\n            try {\n                this._selections.set(this.editor.getSelections(), this._currentTransaction, e);\n                this._forceUpdate();\n            }\n            finally {\n                this._endUpdate();\n            }\n        }));\n    }\n    forceUpdate(cb) {\n        this._beginUpdate();\n        try {\n            this._forceUpdate();\n            if (!cb) {\n                return undefined;\n            }\n            return cb(this._currentTransaction);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _forceUpdate() {\n        this._beginUpdate();\n        try {\n            this._model.set(this.editor.getModel(), this._currentTransaction);\n            this._versionId.set(this.editor.getModel()?.getVersionId() ?? null, this._currentTransaction, undefined);\n            this._selections.set(this.editor.getSelections(), this._currentTransaction, undefined);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    getOption(id) {\n        return observableFromEvent(this, cb => this.editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(id)) {\n                cb(undefined);\n            }\n        }), () => this.editor.getOption(id));\n    }\n    setDecorations(decorations) {\n        const d = new DisposableStore();\n        const decorationsCollection = this.editor.createDecorationsCollection();\n        d.add(autorunOpts({ owner: this, debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n            const d = decorations.read(reader);\n            decorationsCollection.set(d);\n        }));\n        d.add({\n            dispose: () => {\n                decorationsCollection.clear();\n            }\n        });\n        return d;\n    }\n    createOverlayWidget(widget) {\n        const overlayWidgetId = 'observableOverlayWidget' + (this._overlayWidgetCounter++);\n        const w = {\n            getDomNode: () => widget.domNode,\n            getPosition: () => widget.position.get(),\n            getId: () => overlayWidgetId,\n            allowEditorOverflow: widget.allowEditorOverflow,\n            getMinContentWidthInPx: () => widget.minContentWidthInPx.get(),\n        };\n        this.editor.addOverlayWidget(w);\n        const d = autorun(reader => {\n            widget.position.read(reader);\n            widget.minContentWidthInPx.read(reader);\n            this.editor.layoutOverlayWidget(w);\n        });\n        return toDisposable(() => {\n            d.dispose();\n            this.editor.removeOverlayWidget(w);\n        });\n    }\n}\nexport function reactToChange(observable, cb) {\n    return autorunWithStoreHandleChanges({\n        createEmptyChangeSummary: () => ({ deltas: [], didChange: false }),\n        handleChange: (context, changeSummary) => {\n            if (context.didChange(observable)) {\n                const e = context.change;\n                if (e !== undefined) {\n                    changeSummary.deltas.push(e);\n                }\n                changeSummary.didChange = true;\n            }\n            return true;\n        },\n    }, (reader, changeSummary) => {\n        const value = observable.read(reader);\n        if (changeSummary.didChange) {\n            cb(value, changeSummary.deltas);\n        }\n    });\n}\nexport function reactToChangeWithStore(observable, cb) {\n    const store = new DisposableStore();\n    const disposable = reactToChange(observable, (value, deltas) => {\n        store.clear();\n        cb(value, deltas, store);\n    });\n    return {\n        dispose() {\n            disposable.dispose();\n            store.dispose();\n        }\n    };\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;AAC9F;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;AAIO,SAAS,qBAAqB,MAAM;IACvC,OAAO,qBAAqB,GAAG,CAAC;AACpC;AACO,MAAM,6BAA6B,4KAAA,CAAA,aAAU;IAChD,MAAO;QAAE,IAAI,CAAC,IAAI,GAAG,IAAI;IAAO,CAAC;IACjC;;IAEA,GACA,OAAO,IAAI,MAAM,EAAE;QACf,IAAI,SAAS,qBAAqB,IAAI,CAAC,GAAG,CAAC;QAC3C,IAAI,CAAC,QAAQ;YACT,SAAS,IAAI,qBAAqB;YAClC,qBAAqB,IAAI,CAAC,GAAG,CAAC,QAAQ;YACtC,MAAM,IAAI,OAAO,YAAY,CAAC;gBAC1B,MAAM,OAAO,qBAAqB,IAAI,CAAC,GAAG,CAAC;gBAC3C,IAAI,MAAM;oBACN,qBAAqB,IAAI,CAAC,MAAM,CAAC;oBACjC,KAAK,OAAO;oBACZ,EAAE,OAAO;gBACb;YACJ;QACJ;QACA,OAAO;IACX;IACA,eAAe;QACX,IAAI,CAAC,cAAc;QACnB,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG;YAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,6LAAA,CAAA,kBAAe,CAAC;YAC3C,qCAAqC,GACzC;QACJ;IACJ;IACA,aAAa;QACT,IAAI,CAAC,cAAc;QACnB,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG;YAC3B,MAAM,IAAI,IAAI,CAAC,mBAAmB;YAClC,IAAI,CAAC,mBAAmB,GAAG;YAC3B,EAAE,MAAM;QACZ;IACJ;IACA,YAAY,MAAM,CAAE;QAChB,KAAK;QACL,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,mBAAmB,GAAG;QAC3B,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,6LAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;QACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;QACxB,IAAI,CAAC,UAAU,GAAG,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,wBAAwB,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,yBAAyB;QAC1I,IAAI,CAAC,UAAU,GAAG,CAAA,GAAA,4LAAA,CAAA,sBAAmB,AAAD,EAAE;YAAE,OAAO,IAAI;YAAE,MAAM;QAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,kBAAkB;QAC7G,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU;QAChC,IAAI,CAAC,WAAW,GAAG,CAAA,GAAA,4LAAA,CAAA,sBAAmB,AAAD,EAAE;YAAE,OAAO,IAAI;YAAE,UAAU,CAAA,GAAA,yKAAA,CAAA,kBAAe,AAAD,EAAE,CAAA,GAAA,yKAAA,CAAA,cAAW,AAAD,EAAE,sLAAA,CAAA,YAAS,CAAC,eAAe;YAAI,MAAM;QAAK,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,MAAM;QACtK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW;QAClC,IAAI,CAAC,SAAS,GAAG,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,EAAE,CAAA;YACvC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC;YAC9C,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;YAC7C,OAAO;gBACH;oBACI,GAAG,OAAO;oBACV,GAAG,OAAO;gBACd;YACJ;QACJ,GAAG,IAAM,IAAI,CAAC,MAAM,CAAC,cAAc;QACnC,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,gMAAA,CAAA,oBAAiB,AAAD,EAAE,IAAI,EAAE,CAAA;YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAAS,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,cAAc;QAAI,GAAG,CAAC,OAAO;YACvI,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG;YAC5B,IAAI,UAAU,MAAM;gBAChB,IAAI,UAAU,MAAM,QAAQ,IAAI;oBAC5B,MAAM,QAAQ,CAAC;gBACnB;YACJ;QACJ;QACA,IAAI,CAAC,YAAY,GAAG,CAAA,GAAA,gMAAA,CAAA,UAAO,AAAD,EAAE,IAAI,EAAE,CAAA;YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAAS,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,qBAAqB;QAAG;QAClI,IAAI,CAAC,eAAe,GAAG,CAAA,GAAA,gMAAA,CAAA,cAAW,AAAD,EAAE;YAAE,OAAO,IAAI;YAAE,UAAU,CAAA,GAAA,yKAAA,CAAA,kBAAe,AAAD,EAAE,sLAAA,CAAA,YAAS,CAAC,eAAe;QAAE,GAAG,CAAA,SAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI;QACzJ,IAAI,CAAC,SAAS,GAAG,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAAE,IAAI;QACtC,IAAI,CAAC,SAAS,GAAG,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,YAAY;QAClG,IAAI,CAAC,UAAU,GAAG,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,aAAa;QACpG,IAAI,CAAC,UAAU,GAAG,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,aAAa;QACpG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,WAAW;QACnE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,eAAe;QAC3E,IAAI,CAAC,YAAY,GAAG,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,eAAe;QAC7G,IAAI,CAAC,qBAAqB,GAAG;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAM,IAAI,CAAC,YAAY;QAChE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAM,IAAI,CAAC,UAAU;QAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;YACxC,IAAI,CAAC,YAAY;YACjB,IAAI;gBACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,mBAAmB;gBAChE,IAAI,CAAC,YAAY;YACrB,SACQ;gBACJ,IAAI,CAAC,UAAU;YACnB;QACJ;QACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY;YACjB,IAAI;gBACA,IAAI,CAAC,YAAY;gBACjB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE;YACrD,SACQ;gBACJ,IAAI,CAAC,UAAU;YACnB;QACJ;QACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAA;YAC/C,IAAI,CAAC,YAAY;YACjB,IAAI;gBACA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,kBAAkB,MAAM,IAAI,CAAC,mBAAmB,EAAE;gBAC9F,IAAI,CAAC,YAAY;YACrB,SACQ;gBACJ,IAAI,CAAC,UAAU;YACnB;QACJ;QACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAA;YAClD,IAAI,CAAC,YAAY;YACjB,IAAI;gBACA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC5E,IAAI,CAAC,YAAY;YACrB,SACQ;gBACJ,IAAI,CAAC,UAAU;YACnB;QACJ;IACJ;IACA,YAAY,EAAE,EAAE;QACZ,IAAI,CAAC,YAAY;QACjB,IAAI;YACA,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,IAAI;gBACL,OAAO;YACX;YACA,OAAO,GAAG,IAAI,CAAC,mBAAmB;QACtC,SACQ;YACJ,IAAI,CAAC,UAAU;QACnB;IACJ;IACA,eAAe;QACX,IAAI,CAAC,YAAY;QACjB,IAAI;YACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,mBAAmB;YAChE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,kBAAkB,MAAM,IAAI,CAAC,mBAAmB,EAAE;YAC9F,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,EAAE;QAChF,SACQ;YACJ,IAAI,CAAC,UAAU;QACnB;IACJ;IACA,UAAU,EAAE,EAAE;QACV,OAAO,CAAA,GAAA,8LAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,EAAE,CAAA,KAAM,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAA;gBACxE,IAAI,EAAE,UAAU,CAAC,KAAK;oBAClB,GAAG;gBACP;YACJ,IAAI,IAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IACpC;IACA,eAAe,WAAW,EAAE;QACxB,MAAM,IAAI,IAAI,4KAAA,CAAA,kBAAe;QAC7B,MAAM,wBAAwB,IAAI,CAAC,MAAM,CAAC,2BAA2B;QACrE,EAAE,GAAG,CAAC,CAAA,GAAA,gMAAA,CAAA,cAAW,AAAD,EAAE;YAAE,OAAO,IAAI;YAAE,WAAW,IAAM,CAAC,uBAAuB,EAAE,YAAY,SAAS,EAAE;QAAC,GAAG,CAAA;YACnG,MAAM,IAAI,YAAY,IAAI,CAAC;YAC3B,sBAAsB,GAAG,CAAC;QAC9B;QACA,EAAE,GAAG,CAAC;YACF,SAAS;gBACL,sBAAsB,KAAK;YAC/B;QACJ;QACA,OAAO;IACX;IACA,oBAAoB,MAAM,EAAE;QACxB,MAAM,kBAAkB,4BAA6B,IAAI,CAAC,qBAAqB;QAC/E,MAAM,IAAI;YACN,YAAY,IAAM,OAAO,OAAO;YAChC,aAAa,IAAM,OAAO,QAAQ,CAAC,GAAG;YACtC,OAAO,IAAM;YACb,qBAAqB,OAAO,mBAAmB;YAC/C,wBAAwB,IAAM,OAAO,mBAAmB,CAAC,GAAG;QAChE;QACA,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;QAC7B,MAAM,IAAI,CAAA,GAAA,gMAAA,CAAA,UAAO,AAAD,EAAE,CAAA;YACd,OAAO,QAAQ,CAAC,IAAI,CAAC;YACrB,OAAO,mBAAmB,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC;QACpC;QACA,OAAO,CAAA,GAAA,4KAAA,CAAA,eAAY,AAAD,EAAE;YAChB,EAAE,OAAO;YACT,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC;QACpC;IACJ;AACJ;AACO,SAAS,cAAc,UAAU,EAAE,EAAE;IACxC,OAAO,CAAA,GAAA,gMAAA,CAAA,gCAA6B,AAAD,EAAE;QACjC,0BAA0B,IAAM,CAAC;gBAAE,QAAQ,EAAE;gBAAE,WAAW;YAAM,CAAC;QACjE,cAAc,CAAC,SAAS;YACpB,IAAI,QAAQ,SAAS,CAAC,aAAa;gBAC/B,MAAM,IAAI,QAAQ,MAAM;gBACxB,IAAI,MAAM,WAAW;oBACjB,cAAc,MAAM,CAAC,IAAI,CAAC;gBAC9B;gBACA,cAAc,SAAS,GAAG;YAC9B;YACA,OAAO;QACX;IACJ,GAAG,CAAC,QAAQ;QACR,MAAM,QAAQ,WAAW,IAAI,CAAC;QAC9B,IAAI,cAAc,SAAS,EAAE;YACzB,GAAG,OAAO,cAAc,MAAM;QAClC;IACJ;AACJ;AACO,SAAS,uBAAuB,UAAU,EAAE,EAAE;IACjD,MAAM,QAAQ,IAAI,4KAAA,CAAA,kBAAe;IACjC,MAAM,aAAa,cAAc,YAAY,CAAC,OAAO;QACjD,MAAM,KAAK;QACX,GAAG,OAAO,QAAQ;IACtB;IACA,OAAO;QACH;YACI,WAAW,OAAO;YAClB,MAAM,OAAO;QACjB;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6408, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/editorBrowser.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorCommon from '../common/editorCommon.js';\n/**\n *@internal\n */\nexport function isCodeEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.ICodeEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isDiffEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.IDiffEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isCompositeEditor(thing) {\n    return !!thing\n        && typeof thing === 'object'\n        && typeof thing.onDidChangeActiveEditor === 'function';\n}\n/**\n *@internal\n */\nexport function getCodeEditor(thing) {\n    if (isCodeEditor(thing)) {\n        return thing;\n    }\n    if (isDiffEditor(thing)) {\n        return thing.getModifiedEditor();\n    }\n    if (isCompositeEditor(thing) && isCodeEditor(thing.activeCodeEditor)) {\n        return thing.activeCodeEditor;\n    }\n    return null;\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;AAC9F;;AAIO,SAAS,aAAa,KAAK;IAC9B,IAAI,SAAS,OAAO,MAAM,aAAa,KAAK,YAAY;QACpD,OAAO,MAAM,aAAa,OAAO,iLAAA,CAAA,aAAuB,CAAC,WAAW;IACxE,OACK;QACD,OAAO;IACX;AACJ;AAIO,SAAS,aAAa,KAAK;IAC9B,IAAI,SAAS,OAAO,MAAM,aAAa,KAAK,YAAY;QACpD,OAAO,MAAM,aAAa,OAAO,iLAAA,CAAA,aAAuB,CAAC,WAAW;IACxE,OACK;QACD,OAAO;IACX;AACJ;AAIO,SAAS,kBAAkB,KAAK;IACnC,OAAO,CAAC,CAAC,SACF,OAAO,UAAU,YACjB,OAAO,MAAM,uBAAuB,KAAK;AACpD;AAIO,SAAS,cAAc,KAAK;IAC/B,IAAI,aAAa,QAAQ;QACrB,OAAO;IACX;IACA,IAAI,aAAa,QAAQ;QACrB,OAAO,MAAM,iBAAiB;IAClC;IACA,IAAI,kBAAkB,UAAU,aAAa,MAAM,gBAAgB,GAAG;QAClE,OAAO,MAAM,gBAAgB;IACjC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6454, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/dnd.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n    const vsDataTransfer = new VSDataTransfer();\n    for (const item of dataTransfer.items) {\n        const type = item.type;\n        if (item.kind === 'string') {\n            const asStringValue = new Promise(resolve => item.getAsString(resolve));\n            vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n        }\n        else if (item.kind === 'file') {\n            const file = item.getAsFile();\n            if (file) {\n                vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n            }\n        }\n    }\n    return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n    const uri = file.path ? URI.parse(file.path) : undefined;\n    return createFileDataTransferItem(file.name, uri, async () => {\n        return new Uint8Array(await file.arrayBuffer());\n    });\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n    CodeDataTransfers.EDITORS,\n    CodeDataTransfers.FILES,\n    DataTransfers.RESOURCES,\n    DataTransfers.INTERNAL_URI_LIST,\n]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n    const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n    // Try to expose the internal uri-list type as the standard type\n    const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n    if (uriList) {\n        vsDataTransfer.replace(Mimes.uriList, uriList);\n    }\n    else {\n        if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n            // Otherwise, fallback to adding dragged resources to the uri list\n            const editorData = [];\n            for (const item of sourceDataTransfer.items) {\n                const file = item.getAsFile();\n                if (file) {\n                    const path = file.path;\n                    try {\n                        if (path) {\n                            editorData.push(URI.file(path).toString());\n                        }\n                        else {\n                            editorData.push(URI.parse(file.name, true).toString());\n                        }\n                    }\n                    catch {\n                        // Parsing failed. Leave out from list\n                    }\n                }\n            }\n            if (editorData.length) {\n                vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n            }\n        }\n    }\n    for (const internal of INTERNAL_DND_MIME_TYPES) {\n        vsDataTransfer.delete(internal);\n    }\n    return vsDataTransfer;\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;AAC9F;AACA;AACA;AACA;AACA;;;;;;AACO,SAAS,iBAAiB,YAAY;IACzC,MAAM,iBAAiB,IAAI,+KAAA,CAAA,iBAAc;IACzC,KAAK,MAAM,QAAQ,aAAa,KAAK,CAAE;QACnC,MAAM,OAAO,KAAK,IAAI;QACtB,IAAI,KAAK,IAAI,KAAK,UAAU;YACxB,MAAM,gBAAgB,IAAI,QAAQ,CAAA,UAAW,KAAK,WAAW,CAAC;YAC9D,eAAe,MAAM,CAAC,MAAM,CAAA,GAAA,+KAAA,CAAA,+BAA4B,AAAD,EAAE;QAC7D,OACK,IAAI,KAAK,IAAI,KAAK,QAAQ;YAC3B,MAAM,OAAO,KAAK,SAAS;YAC3B,IAAI,MAAM;gBACN,eAAe,MAAM,CAAC,MAAM,mCAAmC;YACnE;QACJ;IACJ;IACA,OAAO;AACX;AACA,SAAS,mCAAmC,IAAI;IAC5C,MAAM,MAAM,KAAK,IAAI,GAAG,sKAAA,CAAA,MAAG,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI;IAC/C,OAAO,CAAA,GAAA,+KAAA,CAAA,6BAA0B,AAAD,EAAE,KAAK,IAAI,EAAE,KAAK;QAC9C,OAAO,IAAI,WAAW,MAAM,KAAK,WAAW;IAChD;AACJ;AACA,MAAM,0BAA0B,OAAO,MAAM,CAAC;IAC1C,kLAAA,CAAA,oBAAiB,CAAC,OAAO;IACzB,kLAAA,CAAA,oBAAiB,CAAC,KAAK;IACvB,uKAAA,CAAA,gBAAa,CAAC,SAAS;IACvB,uKAAA,CAAA,gBAAa,CAAC,iBAAiB;CAClC;AACM,SAAS,yBAAyB,kBAAkB,EAAE,mBAAmB,KAAK;IACjF,MAAM,iBAAiB,iBAAiB;IACxC,gEAAgE;IAChE,MAAM,UAAU,eAAe,GAAG,CAAC,uKAAA,CAAA,gBAAa,CAAC,iBAAiB;IAClE,IAAI,SAAS;QACT,eAAe,OAAO,CAAC,uKAAA,CAAA,QAAK,CAAC,OAAO,EAAE;IAC1C,OACK;QACD,IAAI,oBAAoB,CAAC,eAAe,GAAG,CAAC,uKAAA,CAAA,QAAK,CAAC,OAAO,GAAG;YACxD,kEAAkE;YAClE,MAAM,aAAa,EAAE;YACrB,KAAK,MAAM,QAAQ,mBAAmB,KAAK,CAAE;gBACzC,MAAM,OAAO,KAAK,SAAS;gBAC3B,IAAI,MAAM;oBACN,MAAM,OAAO,KAAK,IAAI;oBACtB,IAAI;wBACA,IAAI,MAAM;4BACN,WAAW,IAAI,CAAC,sKAAA,CAAA,MAAG,CAAC,IAAI,CAAC,MAAM,QAAQ;wBAC3C,OACK;4BACD,WAAW,IAAI,CAAC,sKAAA,CAAA,MAAG,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,MAAM,QAAQ;wBACvD;oBACJ,EACA,OAAM;oBACF,sCAAsC;oBAC1C;gBACJ;YACJ;YACA,IAAI,WAAW,MAAM,EAAE;gBACnB,eAAe,OAAO,CAAC,uKAAA,CAAA,QAAK,CAAC,OAAO,EAAE,CAAA,GAAA,+KAAA,CAAA,+BAA4B,AAAD,EAAE,+KAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YACtF;QACJ;IACJ;IACA,KAAK,MAAM,YAAY,wBAAyB;QAC5C,eAAe,MAAM,CAAC;IAC1B;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}}]
}