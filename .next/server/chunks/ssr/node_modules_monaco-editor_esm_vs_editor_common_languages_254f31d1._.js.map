{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/languageConfiguration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n    constructor(source) {\n        this._neutralCharacter = null;\n        this._neutralCharacterSearched = false;\n        this.open = source.open;\n        this.close = source.close;\n        // initially allowed in all tokens\n        this._inString = true;\n        this._inComment = true;\n        this._inRegEx = true;\n        if (Array.isArray(source.notIn)) {\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\n                const notIn = source.notIn[i];\n                switch (notIn) {\n                    case 'string':\n                        this._inString = false;\n                        break;\n                    case 'comment':\n                        this._inComment = false;\n                        break;\n                    case 'regex':\n                        this._inRegEx = false;\n                        break;\n                }\n            }\n        }\n    }\n    isOK(standardToken) {\n        switch (standardToken) {\n            case 0 /* StandardTokenType.Other */:\n                return true;\n            case 1 /* StandardTokenType.Comment */:\n                return this._inComment;\n            case 2 /* StandardTokenType.String */:\n                return this._inString;\n            case 3 /* StandardTokenType.RegEx */:\n                return this._inRegEx;\n        }\n    }\n    shouldAutoClose(context, column) {\n        // Always complete on empty line\n        if (context.getTokenCount() === 0) {\n            return true;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 2);\n        const standardTokenType = context.getStandardTokenType(tokenIndex);\n        return this.isOK(standardTokenType);\n    }\n    _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n        for (let charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n            const character = String.fromCharCode(charCode);\n            if (!this.open.includes(character) && !this.close.includes(character)) {\n                return character;\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close\n     */\n    findNeutralCharacter() {\n        if (!this._neutralCharacterSearched) {\n            this._neutralCharacterSearched = true;\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(48 /* CharCode.Digit0 */, 57 /* CharCode.Digit9 */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(97 /* CharCode.a */, 122 /* CharCode.z */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(65 /* CharCode.A */, 90 /* CharCode.Z */);\n            }\n        }\n        return this._neutralCharacter;\n    }\n}\n/**\n * @internal\n */\nexport class AutoClosingPairs {\n    constructor(autoClosingPairs) {\n        this.autoClosingPairsOpenByStart = new Map();\n        this.autoClosingPairsOpenByEnd = new Map();\n        this.autoClosingPairsCloseByStart = new Map();\n        this.autoClosingPairsCloseByEnd = new Map();\n        this.autoClosingPairsCloseSingleChar = new Map();\n        for (const pair of autoClosingPairs) {\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n            if (pair.close.length === 1 && pair.open.length === 1) {\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n            }\n        }\n    }\n}\nfunction appendEntry(target, key, value) {\n    if (target.has(key)) {\n        target.get(key).push(value);\n    }\n    else {\n        target.set(key, [value]);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/characterPair.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES = ';:.,=}])> \\n\\t'; }\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS = '\\'\"`;:.,=}])> \\n\\t'; }\n    constructor(config) {\n        if (config.autoClosingPairs) {\n            this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n        }\n        else if (config.brackets) {\n            this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({ open: b[0], close: b[1] }));\n        }\n        else {\n            this._autoClosingPairs = [];\n        }\n        if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n            const docComment = config.__electricCharacterSupport.docComment;\n            // IDocComment is legacy, only partially supported\n            this._autoClosingPairs.push(new StandardAutoClosingPairConditional({ open: docComment.open, close: docComment.close || '' }));\n        }\n        this._autoCloseBeforeForQuotes = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES;\n        this._autoCloseBeforeForBrackets = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS;\n        this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n        return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return (forQuotes ? this._autoCloseBeforeForQuotes : this._autoCloseBeforeForBrackets);\n    }\n    getSurroundingPairs() {\n        return this._surroundingPairs;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;;AACO,MAAM;IACT,MAAO;QAAE,IAAI,CAAC,gDAAgD,GAAG;IAAkB,CAAC;IACpF,MAAO;QAAE,IAAI,CAAC,kDAAkD,GAAG;IAAsB,CAAC;IAC1F,YAAY,MAAM,CAAE;QAChB,IAAI,OAAO,gBAAgB,EAAE;YACzB,IAAI,CAAC,iBAAiB,GAAG,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAA,KAAM,IAAI,uMAAA,CAAA,qCAAkC,CAAC;QACtG,OACK,IAAI,OAAO,QAAQ,EAAE;YACtB,IAAI,CAAC,iBAAiB,GAAG,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAA,IAAK,IAAI,uMAAA,CAAA,qCAAkC,CAAC;oBAAE,MAAM,CAAC,CAAC,EAAE;oBAAE,OAAO,CAAC,CAAC,EAAE;gBAAC;QACvH,OACK;YACD,IAAI,CAAC,iBAAiB,GAAG,EAAE;QAC/B;QACA,IAAI,OAAO,0BAA0B,IAAI,OAAO,0BAA0B,CAAC,UAAU,EAAE;YACnF,MAAM,aAAa,OAAO,0BAA0B,CAAC,UAAU;YAC/D,kDAAkD;YAClD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,uMAAA,CAAA,qCAAkC,CAAC;gBAAE,MAAM,WAAW,IAAI;gBAAE,OAAO,WAAW,KAAK,IAAI;YAAG;QAC9H;QACA,IAAI,CAAC,yBAAyB,GAAG,OAAO,OAAO,eAAe,KAAK,WAAW,OAAO,eAAe,GAAG,qBAAqB,gDAAgD;QAC5K,IAAI,CAAC,2BAA2B,GAAG,OAAO,OAAO,eAAe,KAAK,WAAW,OAAO,eAAe,GAAG,qBAAqB,kDAAkD;QAChL,IAAI,CAAC,iBAAiB,GAAG,OAAO,gBAAgB,IAAI,IAAI,CAAC,iBAAiB;IAC9E;IACA,sBAAsB;QAClB,OAAO,IAAI,CAAC,iBAAiB;IACjC;IACA,sBAAsB,SAAS,EAAE;QAC7B,OAAQ,YAAY,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,2BAA2B;IACzF;IACA,sBAAsB;QAClB,OAAO,IAAI,CAAC,iBAAiB;IACjC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createScopedLineTokens(context, offset) {\n    const tokenCount = context.getCount();\n    const tokenIndex = context.findTokenIndexAtOffset(offset);\n    const desiredLanguageId = context.getLanguageId(tokenIndex);\n    let lastTokenIndex = tokenIndex;\n    while (lastTokenIndex + 1 < tokenCount && context.getLanguageId(lastTokenIndex + 1) === desiredLanguageId) {\n        lastTokenIndex++;\n    }\n    let firstTokenIndex = tokenIndex;\n    while (firstTokenIndex > 0 && context.getLanguageId(firstTokenIndex - 1) === desiredLanguageId) {\n        firstTokenIndex--;\n    }\n    return new ScopedLineTokens(context, desiredLanguageId, firstTokenIndex, lastTokenIndex + 1, context.getStartOffset(firstTokenIndex), context.getEndOffset(lastTokenIndex));\n}\nexport class ScopedLineTokens {\n    constructor(actual, languageId, firstTokenIndex, lastTokenIndex, firstCharOffset, lastCharOffset) {\n        this._scopedLineTokensBrand = undefined;\n        this._actual = actual;\n        this.languageId = languageId;\n        this._firstTokenIndex = firstTokenIndex;\n        this._lastTokenIndex = lastTokenIndex;\n        this.firstCharOffset = firstCharOffset;\n        this._lastCharOffset = lastCharOffset;\n        this.languageIdCodec = actual.languageIdCodec;\n    }\n    getLineContent() {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(this.firstCharOffset, this._lastCharOffset);\n    }\n    getLineLength() {\n        return this._lastCharOffset - this.firstCharOffset;\n    }\n    getActualLineContentBefore(offset) {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(0, this.firstCharOffset + offset);\n    }\n    getTokenCount() {\n        return this._lastTokenIndex - this._firstTokenIndex;\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._actual.findTokenIndexAtOffset(offset + this.firstCharOffset) - this._firstTokenIndex;\n    }\n    getStandardTokenType(tokenIndex) {\n        return this._actual.getStandardTokenType(tokenIndex + this._firstTokenIndex);\n    }\n    toIViewLineTokens() {\n        return this._actual.sliceAndInflate(this.firstCharOffset, this._lastCharOffset, 0);\n    }\n}\nexport function ignoreBracketsInToken(standardTokenType) {\n    return (standardTokenType & 3 /* IgnoreBracketsInTokens.value */) !== 0;\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;AACvF,SAAS,uBAAuB,OAAO,EAAE,MAAM;IAClD,MAAM,aAAa,QAAQ,QAAQ;IACnC,MAAM,aAAa,QAAQ,sBAAsB,CAAC;IAClD,MAAM,oBAAoB,QAAQ,aAAa,CAAC;IAChD,IAAI,iBAAiB;IACrB,MAAO,iBAAiB,IAAI,cAAc,QAAQ,aAAa,CAAC,iBAAiB,OAAO,kBAAmB;QACvG;IACJ;IACA,IAAI,kBAAkB;IACtB,MAAO,kBAAkB,KAAK,QAAQ,aAAa,CAAC,kBAAkB,OAAO,kBAAmB;QAC5F;IACJ;IACA,OAAO,IAAI,iBAAiB,SAAS,mBAAmB,iBAAiB,iBAAiB,GAAG,QAAQ,cAAc,CAAC,kBAAkB,QAAQ,YAAY,CAAC;AAC/J;AACO,MAAM;IACT,YAAY,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,CAAE;QAC9F,IAAI,CAAC,sBAAsB,GAAG;QAC9B,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,eAAe,GAAG,OAAO,eAAe;IACjD;IACA,iBAAiB;QACb,MAAM,oBAAoB,IAAI,CAAC,OAAO,CAAC,cAAc;QACrD,OAAO,kBAAkB,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe;IACjF;IACA,gBAAgB;QACZ,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe;IACtD;IACA,2BAA2B,MAAM,EAAE;QAC/B,MAAM,oBAAoB,IAAI,CAAC,OAAO,CAAC,cAAc;QACrD,OAAO,kBAAkB,SAAS,CAAC,GAAG,IAAI,CAAC,eAAe,GAAG;IACjE;IACA,gBAAgB;QACZ,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB;IACvD;IACA,uBAAuB,MAAM,EAAE;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,SAAS,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,gBAAgB;IACrG;IACA,qBAAqB,UAAU,EAAE;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,aAAa,IAAI,CAAC,gBAAgB;IAC/E;IACA,oBAAoB;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE;IACpF;AACJ;AACO,SAAS,sBAAsB,iBAAiB;IACnD,OAAO,CAAC,oBAAoB,EAAE,gCAAgC,GAAE,MAAM;AAC1E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/richEditBrackets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport * as stringBuilder from '../../core/stringBuilder.js';\nimport { Range } from '../../core/range.js';\n/**\n * Represents a grouping of colliding bracket pairs.\n *\n * Most of the times this contains a single bracket pair,\n * but sometimes this contains multiple bracket pairs in cases\n * where the same string appears as a closing bracket for multiple\n * bracket pairs, or the same string appears an opening bracket for\n * multiple bracket pairs.\n *\n * e.g. of a group containing a single pair:\n *   open: ['{'], close: ['}']\n *\n * e.g. of a group containing multiple pairs:\n *   open: ['if', 'for'], close: ['end', 'end']\n */\nexport class RichEditBracket {\n    constructor(languageId, index, open, close, forwardRegex, reversedRegex) {\n        this._richEditBracketBrand = undefined;\n        this.languageId = languageId;\n        this.index = index;\n        this.open = open;\n        this.close = close;\n        this.forwardRegex = forwardRegex;\n        this.reversedRegex = reversedRegex;\n        this._openSet = RichEditBracket._toSet(this.open);\n        this._closeSet = RichEditBracket._toSet(this.close);\n    }\n    /**\n     * Check if the provided `text` is an open bracket in this group.\n     */\n    isOpen(text) {\n        return this._openSet.has(text);\n    }\n    /**\n     * Check if the provided `text` is a close bracket in this group.\n     */\n    isClose(text) {\n        return this._closeSet.has(text);\n    }\n    static _toSet(arr) {\n        const result = new Set();\n        for (const element of arr) {\n            result.add(element);\n        }\n        return result;\n    }\n}\n/**\n * Groups together brackets that have equal open or close sequences.\n *\n * For example, if the following brackets are defined:\n *   ['IF','END']\n *   ['for','end']\n *   ['{','}']\n *\n * Then the grouped brackets would be:\n *   { open: ['if', 'for'], close: ['end', 'end'] }\n *   { open: ['{'], close: ['}'] }\n *\n */\nfunction groupFuzzyBrackets(brackets) {\n    const N = brackets.length;\n    brackets = brackets.map(b => [b[0].toLowerCase(), b[1].toLowerCase()]);\n    const group = [];\n    for (let i = 0; i < N; i++) {\n        group[i] = i;\n    }\n    const areOverlapping = (a, b) => {\n        const [aOpen, aClose] = a;\n        const [bOpen, bClose] = b;\n        return (aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose);\n    };\n    const mergeGroups = (g1, g2) => {\n        const newG = Math.min(g1, g2);\n        const oldG = Math.max(g1, g2);\n        for (let i = 0; i < N; i++) {\n            if (group[i] === oldG) {\n                group[i] = newG;\n            }\n        }\n    };\n    // group together brackets that have the same open or the same close sequence\n    for (let i = 0; i < N; i++) {\n        const a = brackets[i];\n        for (let j = i + 1; j < N; j++) {\n            const b = brackets[j];\n            if (areOverlapping(a, b)) {\n                mergeGroups(group[i], group[j]);\n            }\n        }\n    }\n    const result = [];\n    for (let g = 0; g < N; g++) {\n        const currentOpen = [];\n        const currentClose = [];\n        for (let i = 0; i < N; i++) {\n            if (group[i] === g) {\n                const [open, close] = brackets[i];\n                currentOpen.push(open);\n                currentClose.push(close);\n            }\n        }\n        if (currentOpen.length > 0) {\n            result.push({\n                open: currentOpen,\n                close: currentClose\n            });\n        }\n    }\n    return result;\n}\nexport class RichEditBrackets {\n    constructor(languageId, _brackets) {\n        this._richEditBracketsBrand = undefined;\n        const brackets = groupFuzzyBrackets(_brackets);\n        this.brackets = brackets.map((b, index) => {\n            return new RichEditBracket(languageId, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\n        });\n        this.forwardRegex = getRegexForBrackets(this.brackets);\n        this.reversedRegex = getReversedRegexForBrackets(this.brackets);\n        this.textIsBracket = {};\n        this.textIsOpenBracket = {};\n        this.maxBracketLength = 0;\n        for (const bracket of this.brackets) {\n            for (const open of bracket.open) {\n                this.textIsBracket[open] = bracket;\n                this.textIsOpenBracket[open] = true;\n                this.maxBracketLength = Math.max(this.maxBracketLength, open.length);\n            }\n            for (const close of bracket.close) {\n                this.textIsBracket[close] = bracket;\n                this.textIsOpenBracket[close] = false;\n                this.maxBracketLength = Math.max(this.maxBracketLength, close.length);\n            }\n        }\n    }\n}\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\n    for (let i = 0, len = brackets.length; i < len; i++) {\n        if (i === currentIndex) {\n            continue;\n        }\n        const bracket = brackets[i];\n        for (const open of bracket.open) {\n            if (open.indexOf(str) >= 0) {\n                dest.push(open);\n            }\n        }\n        for (const close of bracket.close) {\n            if (close.indexOf(str) >= 0) {\n                dest.push(close);\n            }\n        }\n    }\n}\nfunction lengthcmp(a, b) {\n    return a.length - b.length;\n}\nfunction unique(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const result = [];\n    const seen = new Set();\n    for (const element of arr) {\n        if (seen.has(element)) {\n            continue;\n        }\n        result.push(element);\n        seen.add(element);\n    }\n    return result;\n}\n/**\n * Create a regular expression that can be used to search forward in a piece of text\n * for a group of bracket pairs. But this regex must be built in a way in which\n * it is aware of the other bracket pairs defined for the language.\n *\n * For example, if a language contains the following bracket pairs:\n *   ['begin', 'end']\n *   ['if', 'end if']\n * The two bracket pairs do not collide because no open or close brackets are equal.\n * So the function getRegexForBracketPair is called twice, once with\n * the ['begin'], ['end'] group consisting of one bracket pair, and once with\n * the ['if'], ['end if'] group consiting of the other bracket pair.\n *\n * But there could be a situation where an occurrence of 'end if' is mistaken\n * for an occurrence of 'end'.\n *\n * Therefore, for the bracket pair ['begin', 'end'], the regex will also\n * target 'end if'. The regex will be something like:\n *   /(\\bend if\\b)|(\\bend\\b)|(\\bif\\b)/\n *\n * The regex also searches for \"superstrings\" (other brackets that might be mistaken with the current bracket).\n *\n */\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\n    // search in all brackets for other brackets that are a superstring of these brackets\n    let pieces = [];\n    pieces = pieces.concat(open);\n    pieces = pieces.concat(close);\n    for (let i = 0, len = pieces.length; i < len; i++) {\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n    }\n    pieces = unique(pieces);\n    pieces.sort(lengthcmp);\n    pieces.reverse();\n    return createBracketOrRegExp(pieces);\n}\n/**\n * Matching a regular expression in JS can only be done \"forwards\". So JS offers natively only\n * methods to find the first match of a regex in a string. But sometimes, it is useful to\n * find the last match of a regex in a string. For such a situation, a nice solution is to\n * simply reverse the string and then search for a reversed regex.\n *\n * This function also has the fine details of `getRegexForBracketPair`. For the same example\n * given above, the regex produced here would look like:\n *   /(\\bfi dne\\b)|(\\bdne\\b)|(\\bfi\\b)/\n */\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\n    // search in all brackets for other brackets that are a superstring of these brackets\n    let pieces = [];\n    pieces = pieces.concat(open);\n    pieces = pieces.concat(close);\n    for (let i = 0, len = pieces.length; i < len; i++) {\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n    }\n    pieces = unique(pieces);\n    pieces.sort(lengthcmp);\n    pieces.reverse();\n    return createBracketOrRegExp(pieces.map(toReversedString));\n}\n/**\n * Creates a regular expression that targets all bracket pairs.\n *\n * e.g. for the bracket pairs:\n *  ['{','}']\n *  ['begin,'end']\n *  ['for','end']\n * the regex would look like:\n *  /(\\{)|(\\})|(\\bbegin\\b)|(\\bend\\b)|(\\bfor\\b)/\n */\nfunction getRegexForBrackets(brackets) {\n    let pieces = [];\n    for (const bracket of brackets) {\n        for (const open of bracket.open) {\n            pieces.push(open);\n        }\n        for (const close of bracket.close) {\n            pieces.push(close);\n        }\n    }\n    pieces = unique(pieces);\n    return createBracketOrRegExp(pieces);\n}\n/**\n * Matching a regular expression in JS can only be done \"forwards\". So JS offers natively only\n * methods to find the first match of a regex in a string. But sometimes, it is useful to\n * find the last match of a regex in a string. For such a situation, a nice solution is to\n * simply reverse the string and then search for a reversed regex.\n *\n * e.g. for the bracket pairs:\n *  ['{','}']\n *  ['begin,'end']\n *  ['for','end']\n * the regex would look like:\n *  /(\\{)|(\\})|(\\bnigeb\\b)|(\\bdne\\b)|(\\brof\\b)/\n */\nfunction getReversedRegexForBrackets(brackets) {\n    let pieces = [];\n    for (const bracket of brackets) {\n        for (const open of bracket.open) {\n            pieces.push(open);\n        }\n        for (const close of bracket.close) {\n            pieces.push(close);\n        }\n    }\n    pieces = unique(pieces);\n    return createBracketOrRegExp(pieces.map(toReversedString));\n}\nfunction prepareBracketForRegExp(str) {\n    // This bracket pair uses letters like e.g. \"begin\" - \"end\"\n    const insertWordBoundaries = (/^[\\w ]+$/.test(str));\n    str = strings.escapeRegExpCharacters(str);\n    return (insertWordBoundaries ? `\\\\b${str}\\\\b` : str);\n}\nexport function createBracketOrRegExp(pieces, options) {\n    const regexStr = `(${pieces.map(prepareBracketForRegExp).join(')|(')})`;\n    return strings.createRegExp(regexStr, true, options);\n}\nconst toReversedString = (function () {\n    function reverse(str) {\n        // create a Uint16Array and then use a TextDecoder to create a string\n        const arr = new Uint16Array(str.length);\n        let offset = 0;\n        for (let i = str.length - 1; i >= 0; i--) {\n            arr[offset++] = str.charCodeAt(i);\n        }\n        return stringBuilder.getPlatformTextDecoder().decode(arr);\n    }\n    let lastInput = null;\n    let lastOutput = null;\n    return function toReversedString(str) {\n        if (lastInput !== str) {\n            lastInput = str;\n            lastOutput = reverse(lastInput);\n        }\n        return lastOutput;\n    };\n})();\nexport class BracketsUtils {\n    static _findPrevBracketInText(reversedBracketRegex, lineNumber, reversedText, offset) {\n        const m = reversedText.match(reversedBracketRegex);\n        if (!m) {\n            return null;\n        }\n        const matchOffset = reversedText.length - (m.index || 0);\n        const matchLength = m[0].length;\n        const absoluteMatchOffset = offset + matchOffset;\n        return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n    }\n    static findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\n        // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n        const reversedLineText = toReversedString(lineText);\n        const reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\n        return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\n    }\n    static findNextBracketInText(bracketRegex, lineNumber, text, offset) {\n        const m = text.match(bracketRegex);\n        if (!m) {\n            return null;\n        }\n        const matchOffset = m.index || 0;\n        const matchLength = m[0].length;\n        if (matchLength === 0) {\n            return null;\n        }\n        const absoluteMatchOffset = offset + matchOffset;\n        return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n    }\n    static findNextBracketInRange(bracketRegex, lineNumber, lineText, startOffset, endOffset) {\n        const substr = lineText.substring(startOffset, endOffset);\n        return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/electricCharacter.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../../base/common/arrays.js';\nimport { ignoreBracketsInToken } from '../supports.js';\nimport { BracketsUtils } from './richEditBrackets.js';\nexport class BracketElectricCharacterSupport {\n    constructor(richEditBrackets) {\n        this._richEditBrackets = richEditBrackets;\n    }\n    getElectricCharacters() {\n        const result = [];\n        if (this._richEditBrackets) {\n            for (const bracket of this._richEditBrackets.brackets) {\n                for (const close of bracket.close) {\n                    const lastChar = close.charAt(close.length - 1);\n                    result.push(lastChar);\n                }\n            }\n        }\n        return distinct(result);\n    }\n    onElectricCharacter(character, context, column) {\n        if (!this._richEditBrackets || this._richEditBrackets.brackets.length === 0) {\n            return null;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 1);\n        if (ignoreBracketsInToken(context.getStandardTokenType(tokenIndex))) {\n            return null;\n        }\n        const reversedBracketRegex = this._richEditBrackets.reversedRegex;\n        const text = context.getLineContent().substring(0, column - 1) + character;\n        const r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, 1, text, 0, text.length);\n        if (!r) {\n            return null;\n        }\n        const bracketText = text.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n        const isOpen = this._richEditBrackets.textIsOpenBracket[bracketText];\n        if (isOpen) {\n            return null;\n        }\n        const textBeforeBracket = context.getActualLineContentBefore(r.startColumn - 1);\n        if (!/^\\s*$/.test(textBeforeBracket)) {\n            // There is other text on the line before the bracket\n            return null;\n        }\n        return {\n            matchOpenBracket: bracketText\n        };\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;AACA;AACA;;;;AACO,MAAM;IACT,YAAY,gBAAgB,CAAE;QAC1B,IAAI,CAAC,iBAAiB,GAAG;IAC7B;IACA,wBAAwB;QACpB,MAAM,SAAS,EAAE;QACjB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,KAAK,MAAM,WAAW,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE;gBACnD,KAAK,MAAM,SAAS,QAAQ,KAAK,CAAE;oBAC/B,MAAM,WAAW,MAAM,MAAM,CAAC,MAAM,MAAM,GAAG;oBAC7C,OAAO,IAAI,CAAC;gBAChB;YACJ;QACJ;QACA,OAAO,CAAA,GAAA,yKAAA,CAAA,WAAQ,AAAD,EAAE;IACpB;IACA,oBAAoB,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE;QAC5C,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG;YACzE,OAAO;QACX;QACA,MAAM,aAAa,QAAQ,sBAAsB,CAAC,SAAS;QAC3D,IAAI,CAAA,GAAA,0LAAA,CAAA,wBAAqB,AAAD,EAAE,QAAQ,oBAAoB,CAAC,cAAc;YACjE,OAAO;QACX;QACA,MAAM,uBAAuB,IAAI,CAAC,iBAAiB,CAAC,aAAa;QACjE,MAAM,OAAO,QAAQ,cAAc,GAAG,SAAS,CAAC,GAAG,SAAS,KAAK;QACjE,MAAM,IAAI,8MAAA,CAAA,gBAAa,CAAC,sBAAsB,CAAC,sBAAsB,GAAG,MAAM,GAAG,KAAK,MAAM;QAC5F,IAAI,CAAC,GAAG;YACJ,OAAO;QACX;QACA,MAAM,cAAc,KAAK,SAAS,CAAC,EAAE,WAAW,GAAG,GAAG,EAAE,SAAS,GAAG,GAAG,WAAW;QAClF,MAAM,SAAS,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,YAAY;QACpE,IAAI,QAAQ;YACR,OAAO;QACX;QACA,MAAM,oBAAoB,QAAQ,0BAA0B,CAAC,EAAE,WAAW,GAAG;QAC7E,IAAI,CAAC,QAAQ,IAAI,CAAC,oBAAoB;YAClC,qDAAqD;YACrD,OAAO;QACX;QACA,OAAO;YACH,kBAAkB;QACtB;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/indentRules.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction resetGlobalRegex(reg) {\n    if (reg.global) {\n        reg.lastIndex = 0;\n    }\n    return true;\n}\nexport class IndentRulesSupport {\n    constructor(indentationRules) {\n        this._indentationRules = indentationRules;\n    }\n    shouldIncrease(text) {\n        if (this._indentationRules) {\n            if (this._indentationRules.increaseIndentPattern && resetGlobalRegex(this._indentationRules.increaseIndentPattern) && this._indentationRules.increaseIndentPattern.test(text)) {\n                return true;\n            }\n            // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n            // \treturn true;\n            // }\n        }\n        return false;\n    }\n    shouldDecrease(text) {\n        if (this._indentationRules && this._indentationRules.decreaseIndentPattern && resetGlobalRegex(this._indentationRules.decreaseIndentPattern) && this._indentationRules.decreaseIndentPattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    shouldIndentNextLine(text) {\n        if (this._indentationRules && this._indentationRules.indentNextLinePattern && resetGlobalRegex(this._indentationRules.indentNextLinePattern) && this._indentationRules.indentNextLinePattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    shouldIgnore(text) {\n        // the text matches `unIndentedLinePattern`\n        if (this._indentationRules && this._indentationRules.unIndentedLinePattern && resetGlobalRegex(this._indentationRules.unIndentedLinePattern) && this._indentationRules.unIndentedLinePattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    getIndentMetadata(text) {\n        let ret = 0;\n        if (this.shouldIncrease(text)) {\n            ret += 1 /* IndentConsts.INCREASE_MASK */;\n        }\n        if (this.shouldDecrease(text)) {\n            ret += 2 /* IndentConsts.DECREASE_MASK */;\n        }\n        if (this.shouldIndentNextLine(text)) {\n            ret += 4 /* IndentConsts.INDENT_NEXTLINE_MASK */;\n        }\n        if (this.shouldIgnore(text)) {\n            ret += 8 /* IndentConsts.UNINDENT_MASK */;\n        }\n        return ret;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F,SAAS,iBAAiB,GAAG;IACzB,IAAI,IAAI,MAAM,EAAE;QACZ,IAAI,SAAS,GAAG;IACpB;IACA,OAAO;AACX;AACO,MAAM;IACT,YAAY,gBAAgB,CAAE;QAC1B,IAAI,CAAC,iBAAiB,GAAG;IAC7B;IACA,eAAe,IAAI,EAAE;QACjB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,IAAI,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,KAAK,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO;gBAC3K,OAAO;YACX;QACA,iHAAiH;QACjH,gBAAgB;QAChB,IAAI;QACR;QACA,OAAO;IACX;IACA,eAAe,IAAI,EAAE;QACjB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,IAAI,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,KAAK,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO;YACrM,OAAO;QACX;QACA,OAAO;IACX;IACA,qBAAqB,IAAI,EAAE;QACvB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,IAAI,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,KAAK,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO;YACrM,OAAO;QACX;QACA,OAAO;IACX;IACA,aAAa,IAAI,EAAE;QACf,2CAA2C;QAC3C,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,IAAI,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,KAAK,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO;YACrM,OAAO;QACX;QACA,OAAO;IACX;IACA,kBAAkB,IAAI,EAAE;QACpB,IAAI,MAAM;QACV,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO;YAC3B,OAAO,EAAE,8BAA8B;QAC3C;QACA,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO;YAC3B,OAAO,EAAE,8BAA8B;QAC3C;QACA,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO;YACjC,OAAO,EAAE,qCAAqC;QAClD;QACA,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO;YACzB,OAAO,EAAE,8BAA8B;QAC3C;QACA,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/onEnter.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { IndentAction } from '../languageConfiguration.js';\nexport class OnEnterSupport {\n    constructor(opts) {\n        opts = opts || {};\n        opts.brackets = opts.brackets || [\n            ['(', ')'],\n            ['{', '}'],\n            ['[', ']']\n        ];\n        this._brackets = [];\n        opts.brackets.forEach((bracket) => {\n            const openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\n            const closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\n            if (openRegExp && closeRegExp) {\n                this._brackets.push({\n                    open: bracket[0],\n                    openRegExp: openRegExp,\n                    close: bracket[1],\n                    closeRegExp: closeRegExp,\n                });\n            }\n        });\n        this._regExpRules = opts.onEnterRules || [];\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        // (1): `regExpRules`\n        if (autoIndent >= 3 /* EditorAutoIndentStrategy.Advanced */) {\n            for (let i = 0, len = this._regExpRules.length; i < len; i++) {\n                const rule = this._regExpRules[i];\n                const regResult = [{\n                        reg: rule.beforeText,\n                        text: beforeEnterText\n                    }, {\n                        reg: rule.afterText,\n                        text: afterEnterText\n                    }, {\n                        reg: rule.previousLineText,\n                        text: previousLineText\n                    }].every((obj) => {\n                    if (!obj.reg) {\n                        return true;\n                    }\n                    obj.reg.lastIndex = 0; // To disable the effect of the \"g\" flag.\n                    return obj.reg.test(obj.text);\n                });\n                if (regResult) {\n                    return rule.action;\n                }\n            }\n        }\n        // (2): Special indent-outdent\n        if (autoIndent >= 2 /* EditorAutoIndentStrategy.Brackets */) {\n            if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n                for (let i = 0, len = this._brackets.length; i < len; i++) {\n                    const bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n                        return { indentAction: IndentAction.IndentOutdent };\n                    }\n                }\n            }\n        }\n        // (4): Open bracket based logic\n        if (autoIndent >= 2 /* EditorAutoIndentStrategy.Brackets */) {\n            if (beforeEnterText.length > 0) {\n                for (let i = 0, len = this._brackets.length; i < len; i++) {\n                    const bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText)) {\n                        return { indentAction: IndentAction.Indent };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    static _createOpenBracketRegExp(bracket) {\n        let str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(0))) {\n            str = '\\\\b' + str;\n        }\n        str += '\\\\s*$';\n        return OnEnterSupport._safeRegExp(str);\n    }\n    static _createCloseBracketRegExp(bracket) {\n        let str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(str.length - 1))) {\n            str = str + '\\\\b';\n        }\n        str = '^\\\\s*' + str;\n        return OnEnterSupport._safeRegExp(str);\n    }\n    static _safeRegExp(def) {\n        try {\n            return new RegExp(def);\n        }\n        catch (err) {\n            onUnexpectedError(err);\n            return null;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 875, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/language.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageService = createDecorator('languageService');\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;;AACO,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,kBAAe,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/modesRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Extensions as ConfigurationExtensions } from '../../../platform/configuration/common/configurationRegistry.js';\n// Define extension point ids\nexport const Extensions = {\n    ModesRegistry: 'editor.modesRegistry'\n};\nexport class EditorModesRegistry {\n    constructor() {\n        this._onDidChangeLanguages = new Emitter();\n        this.onDidChangeLanguages = this._onDidChangeLanguages.event;\n        this._languages = [];\n    }\n    registerLanguage(def) {\n        this._languages.push(def);\n        this._onDidChangeLanguages.fire(undefined);\n        return {\n            dispose: () => {\n                for (let i = 0, len = this._languages.length; i < len; i++) {\n                    if (this._languages[i] === def) {\n                        this._languages.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    getLanguages() {\n        return this._languages;\n    }\n}\nexport const ModesRegistry = new EditorModesRegistry();\nRegistry.add(Extensions.ModesRegistry, ModesRegistry);\nexport const PLAINTEXT_LANGUAGE_ID = 'plaintext';\nexport const PLAINTEXT_EXTENSION = '.txt';\nModesRegistry.registerLanguage({\n    id: PLAINTEXT_LANGUAGE_ID,\n    extensions: [PLAINTEXT_EXTENSION],\n    aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n    mimetypes: [Mimes.text]\n});\nRegistry.as(ConfigurationExtensions.Configuration)\n    .registerDefaultConfigurations([{\n        overrides: {\n            '[plaintext]': {\n                'editor.unicodeHighlight.ambiguousCharacters': false,\n                'editor.unicodeHighlight.invisibleCharacters': false\n            }\n        }\n    }]);\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;;AAC9F;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,aAAa;IACtB,eAAe;AACnB;AACO,MAAM;IACT,aAAc;QACV,IAAI,CAAC,qBAAqB,GAAG,IAAI,wKAAA,CAAA,UAAO;QACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK;QAC5D,IAAI,CAAC,UAAU,GAAG,EAAE;IACxB;IACA,iBAAiB,GAAG,EAAE;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;QAChC,OAAO;YACH,SAAS;gBACL,IAAK,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,KAAK,IAAK;oBACxD,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,KAAK;wBAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG;wBAC1B;oBACJ;gBACJ;YACJ;QACJ;IACJ;IACA,eAAe;QACX,OAAO,IAAI,CAAC,UAAU;IAC1B;AACJ;AACO,MAAM,gBAAgB,IAAI;AACjC,2LAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,WAAW,aAAa,EAAE;AAChC,MAAM,wBAAwB;AAC9B,MAAM,sBAAsB;AACnC,cAAc,gBAAgB,CAAC;IAC3B,IAAI;IACJ,YAAY;QAAC;KAAoB;IACjC,SAAS;QAAC,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,mBAAmB;QAAe;KAAO;IAChE,WAAW;QAAC,uKAAA,CAAA,QAAK,CAAC,IAAI;KAAC;AAC3B;AACA,2LAAA,CAAA,WAAQ,CAAC,EAAE,CAAC,6MAAA,CAAA,aAAuB,CAAC,aAAa,EAC5C,6BAA6B,CAAC;IAAC;QAC5B,WAAW;YACP,eAAe;gBACX,+CAA+C;gBAC/C,+CAA+C;YACnD;QACJ;IACJ;CAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/languageBracketsConfiguration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CachedFunction } from '../../../../base/common/cache.js';\nimport { createBracketOrRegExp } from './richEditBrackets.js';\n/**\n * Captures all bracket related configurations for a single language.\n * Immutable.\n*/\nexport class LanguageBracketsConfiguration {\n    constructor(languageId, config) {\n        this.languageId = languageId;\n        const bracketPairs = config.brackets ? filterValidBrackets(config.brackets) : [];\n        const openingBracketInfos = new CachedFunction((bracket) => {\n            const closing = new Set();\n            return {\n                info: new OpeningBracketKind(this, bracket, closing),\n                closing,\n            };\n        });\n        const closingBracketInfos = new CachedFunction((bracket) => {\n            const opening = new Set();\n            const openingColorized = new Set();\n            return {\n                info: new ClosingBracketKind(this, bracket, opening, openingColorized),\n                opening,\n                openingColorized,\n            };\n        });\n        for (const [open, close] of bracketPairs) {\n            const opening = openingBracketInfos.get(open);\n            const closing = closingBracketInfos.get(close);\n            opening.closing.add(closing.info);\n            closing.opening.add(opening.info);\n        }\n        // Treat colorized brackets as brackets, and mark them as colorized.\n        const colorizedBracketPairs = config.colorizedBracketPairs\n            ? filterValidBrackets(config.colorizedBracketPairs)\n            // If not configured: Take all brackets except `<` ... `>`\n            // Many languages set < ... > as bracket pair, even though they also use it as comparison operator.\n            // This leads to problems when colorizing this bracket, so we exclude it if not explicitly configured otherwise.\n            // https://github.com/microsoft/vscode/issues/132476\n            : bracketPairs.filter((p) => !(p[0] === '<' && p[1] === '>'));\n        for (const [open, close] of colorizedBracketPairs) {\n            const opening = openingBracketInfos.get(open);\n            const closing = closingBracketInfos.get(close);\n            opening.closing.add(closing.info);\n            closing.openingColorized.add(opening.info);\n            closing.opening.add(opening.info);\n        }\n        this._openingBrackets = new Map([...openingBracketInfos.cachedValues].map(([k, v]) => [k, v.info]));\n        this._closingBrackets = new Map([...closingBracketInfos.cachedValues].map(([k, v]) => [k, v.info]));\n    }\n    /**\n     * No two brackets have the same bracket text.\n    */\n    get openingBrackets() {\n        return [...this._openingBrackets.values()];\n    }\n    /**\n     * No two brackets have the same bracket text.\n    */\n    get closingBrackets() {\n        return [...this._closingBrackets.values()];\n    }\n    getOpeningBracketInfo(bracketText) {\n        return this._openingBrackets.get(bracketText);\n    }\n    getClosingBracketInfo(bracketText) {\n        return this._closingBrackets.get(bracketText);\n    }\n    getBracketInfo(bracketText) {\n        return this.getOpeningBracketInfo(bracketText) || this.getClosingBracketInfo(bracketText);\n    }\n    getBracketRegExp(options) {\n        const brackets = Array.from([...this._openingBrackets.keys(), ...this._closingBrackets.keys()]);\n        return createBracketOrRegExp(brackets, options);\n    }\n}\nfunction filterValidBrackets(bracketPairs) {\n    return bracketPairs.filter(([open, close]) => open !== '' && close !== '');\n}\nexport class BracketKindBase {\n    constructor(config, bracketText) {\n        this.config = config;\n        this.bracketText = bracketText;\n    }\n    get languageId() {\n        return this.config.languageId;\n    }\n}\nexport class OpeningBracketKind extends BracketKindBase {\n    constructor(config, bracketText, openedBrackets) {\n        super(config, bracketText);\n        this.openedBrackets = openedBrackets;\n        this.isOpeningBracket = true;\n    }\n}\nexport class ClosingBracketKind extends BracketKindBase {\n    constructor(config, bracketText, \n    /**\n     * Non empty array of all opening brackets this bracket closes.\n    */\n    openingBrackets, openingColorizedBrackets) {\n        super(config, bracketText);\n        this.openingBrackets = openingBrackets;\n        this.openingColorizedBrackets = openingColorizedBrackets;\n        this.isOpeningBracket = false;\n    }\n    /**\n     * Checks if this bracket closes the given other bracket.\n     * If the bracket infos come from different configurations, this method will return false.\n    */\n    closes(other) {\n        if (other['config'] !== this.config) {\n            return false;\n        }\n        return this.openingBrackets.has(other);\n    }\n    closesColorized(other) {\n        if (other['config'] !== this.config) {\n            return false;\n        }\n        return this.openingColorizedBrackets.has(other);\n    }\n    getOpeningBrackets() {\n        return [...this.openingBrackets];\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1118, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { DEFAULT_WORD_REGEXP, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { AutoClosingPairs } from './languageConfiguration.js';\nimport { CharacterPairSupport } from './supports/characterPair.js';\nimport { BracketElectricCharacterSupport } from './supports/electricCharacter.js';\nimport { IndentRulesSupport } from './supports/indentRules.js';\nimport { OnEnterSupport } from './supports/onEnter.js';\nimport { RichEditBrackets } from './supports/richEditBrackets.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ILanguageService } from './language.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { PLAINTEXT_LANGUAGE_ID } from './modesRegistry.js';\nimport { LanguageBracketsConfiguration } from './supports/languageBracketsConfiguration.js';\nexport class LanguageConfigurationServiceChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n    affects(languageId) {\n        return !this.languageId ? true : this.languageId === languageId;\n    }\n}\nexport const ILanguageConfigurationService = createDecorator('languageConfigurationService');\nlet LanguageConfigurationService = class LanguageConfigurationService extends Disposable {\n    constructor(configurationService, languageService) {\n        super();\n        this.configurationService = configurationService;\n        this.languageService = languageService;\n        this._registry = this._register(new LanguageConfigurationRegistry());\n        this.onDidChangeEmitter = this._register(new Emitter());\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.configurations = new Map();\n        const languageConfigKeys = new Set(Object.values(customizedLanguageConfigKeys));\n        this._register(this.configurationService.onDidChangeConfiguration((e) => {\n            const globalConfigChanged = e.change.keys.some((k) => languageConfigKeys.has(k));\n            const localConfigChanged = e.change.overrides\n                .filter(([overrideLangName, keys]) => keys.some((k) => languageConfigKeys.has(k)))\n                .map(([overrideLangName]) => overrideLangName);\n            if (globalConfigChanged) {\n                this.configurations.clear();\n                this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(undefined));\n            }\n            else {\n                for (const languageId of localConfigChanged) {\n                    if (this.languageService.isRegisteredLanguageId(languageId)) {\n                        this.configurations.delete(languageId);\n                        this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(languageId));\n                    }\n                }\n            }\n        }));\n        this._register(this._registry.onDidChange((e) => {\n            this.configurations.delete(e.languageId);\n            this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId));\n        }));\n    }\n    register(languageId, configuration, priority) {\n        return this._registry.register(languageId, configuration, priority);\n    }\n    getLanguageConfiguration(languageId) {\n        let result = this.configurations.get(languageId);\n        if (!result) {\n            result = computeConfig(languageId, this._registry, this.configurationService, this.languageService);\n            this.configurations.set(languageId, result);\n        }\n        return result;\n    }\n};\nLanguageConfigurationService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ILanguageService)\n], LanguageConfigurationService);\nexport { LanguageConfigurationService };\nfunction computeConfig(languageId, registry, configurationService, languageService) {\n    let languageConfig = registry.getLanguageConfiguration(languageId);\n    if (!languageConfig) {\n        if (!languageService.isRegisteredLanguageId(languageId)) {\n            // this happens for the null language, which can be returned by monarch.\n            // Instead of throwing an error, we just return a default config.\n            return new ResolvedLanguageConfiguration(languageId, {});\n        }\n        languageConfig = new ResolvedLanguageConfiguration(languageId, {});\n    }\n    const customizedConfig = getCustomizedLanguageConfig(languageConfig.languageId, configurationService);\n    const data = combineLanguageConfigurations([languageConfig.underlyingConfig, customizedConfig]);\n    const config = new ResolvedLanguageConfiguration(languageConfig.languageId, data);\n    return config;\n}\nconst customizedLanguageConfigKeys = {\n    brackets: 'editor.language.brackets',\n    colorizedBracketPairs: 'editor.language.colorizedBracketPairs'\n};\nfunction getCustomizedLanguageConfig(languageId, configurationService) {\n    const brackets = configurationService.getValue(customizedLanguageConfigKeys.brackets, {\n        overrideIdentifier: languageId,\n    });\n    const colorizedBracketPairs = configurationService.getValue(customizedLanguageConfigKeys.colorizedBracketPairs, {\n        overrideIdentifier: languageId,\n    });\n    return {\n        brackets: validateBracketPairs(brackets),\n        colorizedBracketPairs: validateBracketPairs(colorizedBracketPairs),\n    };\n}\nfunction validateBracketPairs(data) {\n    if (!Array.isArray(data)) {\n        return undefined;\n    }\n    return data.map(pair => {\n        if (!Array.isArray(pair) || pair.length !== 2) {\n            return undefined;\n        }\n        return [pair[0], pair[1]];\n    }).filter((p) => !!p);\n}\nexport function getIndentationAtPosition(model, lineNumber, column) {\n    const lineText = model.getLineContent(lineNumber);\n    let indentation = strings.getLeadingWhitespace(lineText);\n    if (indentation.length > column - 1) {\n        indentation = indentation.substring(0, column - 1);\n    }\n    return indentation;\n}\nclass ComposedLanguageConfiguration {\n    constructor(languageId) {\n        this.languageId = languageId;\n        this._resolved = null;\n        this._entries = [];\n        this._order = 0;\n        this._resolved = null;\n    }\n    register(configuration, priority) {\n        const entry = new LanguageConfigurationContribution(configuration, priority, ++this._order);\n        this._entries.push(entry);\n        this._resolved = null;\n        return toDisposable(() => {\n            for (let i = 0; i < this._entries.length; i++) {\n                if (this._entries[i] === entry) {\n                    this._entries.splice(i, 1);\n                    this._resolved = null;\n                    break;\n                }\n            }\n        });\n    }\n    getResolvedConfiguration() {\n        if (!this._resolved) {\n            const config = this._resolve();\n            if (config) {\n                this._resolved = new ResolvedLanguageConfiguration(this.languageId, config);\n            }\n        }\n        return this._resolved;\n    }\n    _resolve() {\n        if (this._entries.length === 0) {\n            return null;\n        }\n        this._entries.sort(LanguageConfigurationContribution.cmp);\n        return combineLanguageConfigurations(this._entries.map(e => e.configuration));\n    }\n}\nfunction combineLanguageConfigurations(configs) {\n    let result = {\n        comments: undefined,\n        brackets: undefined,\n        wordPattern: undefined,\n        indentationRules: undefined,\n        onEnterRules: undefined,\n        autoClosingPairs: undefined,\n        surroundingPairs: undefined,\n        autoCloseBefore: undefined,\n        folding: undefined,\n        colorizedBracketPairs: undefined,\n        __electricCharacterSupport: undefined,\n    };\n    for (const entry of configs) {\n        result = {\n            comments: entry.comments || result.comments,\n            brackets: entry.brackets || result.brackets,\n            wordPattern: entry.wordPattern || result.wordPattern,\n            indentationRules: entry.indentationRules || result.indentationRules,\n            onEnterRules: entry.onEnterRules || result.onEnterRules,\n            autoClosingPairs: entry.autoClosingPairs || result.autoClosingPairs,\n            surroundingPairs: entry.surroundingPairs || result.surroundingPairs,\n            autoCloseBefore: entry.autoCloseBefore || result.autoCloseBefore,\n            folding: entry.folding || result.folding,\n            colorizedBracketPairs: entry.colorizedBracketPairs || result.colorizedBracketPairs,\n            __electricCharacterSupport: entry.__electricCharacterSupport || result.__electricCharacterSupport,\n        };\n    }\n    return result;\n}\nclass LanguageConfigurationContribution {\n    constructor(configuration, priority, order) {\n        this.configuration = configuration;\n        this.priority = priority;\n        this.order = order;\n    }\n    static cmp(a, b) {\n        if (a.priority === b.priority) {\n            // higher order last\n            return a.order - b.order;\n        }\n        // higher priority last\n        return a.priority - b.priority;\n    }\n}\nexport class LanguageConfigurationChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n}\nexport class LanguageConfigurationRegistry extends Disposable {\n    constructor() {\n        super();\n        this._entries = new Map();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._register(this.register(PLAINTEXT_LANGUAGE_ID, {\n            brackets: [\n                ['(', ')'],\n                ['[', ']'],\n                ['{', '}'],\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>' },\n                { open: '\\\"', close: '\\\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' },\n            ],\n            colorizedBracketPairs: [],\n            folding: {\n                offSide: true\n            }\n        }, 0));\n    }\n    /**\n     * @param priority Use a higher number for higher priority\n     */\n    register(languageId, configuration, priority = 0) {\n        let entries = this._entries.get(languageId);\n        if (!entries) {\n            entries = new ComposedLanguageConfiguration(languageId);\n            this._entries.set(languageId, entries);\n        }\n        const disposable = entries.register(configuration, priority);\n        this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        return toDisposable(() => {\n            disposable.dispose();\n            this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        });\n    }\n    getLanguageConfiguration(languageId) {\n        const entries = this._entries.get(languageId);\n        return entries?.getResolvedConfiguration() || null;\n    }\n}\n/**\n * Immutable.\n*/\nexport class ResolvedLanguageConfiguration {\n    constructor(languageId, underlyingConfig) {\n        this.languageId = languageId;\n        this.underlyingConfig = underlyingConfig;\n        this._brackets = null;\n        this._electricCharacter = null;\n        this._onEnterSupport =\n            this.underlyingConfig.brackets ||\n                this.underlyingConfig.indentationRules ||\n                this.underlyingConfig.onEnterRules\n                ? new OnEnterSupport(this.underlyingConfig)\n                : null;\n        this.comments = ResolvedLanguageConfiguration._handleComments(this.underlyingConfig);\n        this.characterPair = new CharacterPairSupport(this.underlyingConfig);\n        this.wordDefinition = this.underlyingConfig.wordPattern || DEFAULT_WORD_REGEXP;\n        this.indentationRules = this.underlyingConfig.indentationRules;\n        if (this.underlyingConfig.indentationRules) {\n            this.indentRulesSupport = new IndentRulesSupport(this.underlyingConfig.indentationRules);\n        }\n        else {\n            this.indentRulesSupport = null;\n        }\n        this.foldingRules = this.underlyingConfig.folding || {};\n        this.bracketsNew = new LanguageBracketsConfiguration(languageId, this.underlyingConfig);\n    }\n    getWordDefinition() {\n        return ensureValidWordDefinition(this.wordDefinition);\n    }\n    get brackets() {\n        if (!this._brackets && this.underlyingConfig.brackets) {\n            this._brackets = new RichEditBrackets(this.languageId, this.underlyingConfig.brackets);\n        }\n        return this._brackets;\n    }\n    get electricCharacter() {\n        if (!this._electricCharacter) {\n            this._electricCharacter = new BracketElectricCharacterSupport(this.brackets);\n        }\n        return this._electricCharacter;\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        if (!this._onEnterSupport) {\n            return null;\n        }\n        return this._onEnterSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n    }\n    getAutoClosingPairs() {\n        return new AutoClosingPairs(this.characterPair.getAutoClosingPairs());\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return this.characterPair.getAutoCloseBeforeSet(forQuotes);\n    }\n    getSurroundingPairs() {\n        return this.characterPair.getSurroundingPairs();\n    }\n    static _handleComments(conf) {\n        const commentRule = conf.comments;\n        if (!commentRule) {\n            return null;\n        }\n        // comment configuration\n        const comments = {};\n        if (commentRule.lineComment) {\n            comments.lineCommentToken = commentRule.lineComment;\n        }\n        if (commentRule.blockComment) {\n            const [blockStart, blockEnd] = commentRule.blockComment;\n            comments.blockCommentStartToken = blockStart;\n            comments.blockCommentEndToken = blockEnd;\n        }\n        return comments;\n    }\n}\nregisterSingleton(ILanguageConfigurationService, LanguageConfigurationService, 1 /* InstantiationType.Delayed */);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1526, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/linkComputer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* State.Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = new Uint8Matrix(maxState, maxCharCode, 0 /* State.Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* State.Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* State.Start */, 104 /* CharCode.h */, 2 /* State.H */],\n            [1 /* State.Start */, 72 /* CharCode.H */, 2 /* State.H */],\n            [1 /* State.Start */, 102 /* CharCode.f */, 6 /* State.F */],\n            [1 /* State.Start */, 70 /* CharCode.F */, 6 /* State.F */],\n            [2 /* State.H */, 116 /* CharCode.t */, 3 /* State.HT */],\n            [2 /* State.H */, 84 /* CharCode.T */, 3 /* State.HT */],\n            [3 /* State.HT */, 116 /* CharCode.t */, 4 /* State.HTT */],\n            [3 /* State.HT */, 84 /* CharCode.T */, 4 /* State.HTT */],\n            [4 /* State.HTT */, 112 /* CharCode.p */, 5 /* State.HTTP */],\n            [4 /* State.HTT */, 80 /* CharCode.P */, 5 /* State.HTTP */],\n            [5 /* State.HTTP */, 115 /* CharCode.s */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 83 /* CharCode.S */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [6 /* State.F */, 105 /* CharCode.i */, 7 /* State.FI */],\n            [6 /* State.F */, 73 /* CharCode.I */, 7 /* State.FI */],\n            [7 /* State.FI */, 108 /* CharCode.l */, 8 /* State.FIL */],\n            [7 /* State.FI */, 76 /* CharCode.L */, 8 /* State.FIL */],\n            [8 /* State.FIL */, 101 /* CharCode.e */, 9 /* State.BeforeColon */],\n            [8 /* State.FIL */, 69 /* CharCode.E */, 9 /* State.BeforeColon */],\n            [9 /* State.BeforeColon */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [10 /* State.AfterColon */, 47 /* CharCode.Slash */, 11 /* State.AlmostThere */],\n            [11 /* State.AlmostThere */, 47 /* CharCode.Slash */, 12 /* State.End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* CharacterClass.None */);\n        // allow-any-unicode-next-line\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* CharacterClass.ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CharacterClass.CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CharacterClass.CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* CharCode.OpenParen */ && lastCharCodeInLink === 41 /* CharCode.CloseParen */)\n                || (charCodeBeforeLink === 91 /* CharCode.OpenSquareBracket */ && lastCharCodeInLink === 93 /* CharCode.CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* CharCode.OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CharCode.CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* State.Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* State.Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* CharCode.OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 41 /* CharCode.CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 91 /* CharCode.OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 93 /* CharCode.CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 123 /* CharCode.OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 125 /* CharCode.CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        // The following three rules make it that ' or \" or ` are allowed inside links\n                        // only if the link is wrapped by some other quote character\n                        case 39 /* CharCode.SingleQuote */:\n                        case 34 /* CharCode.DoubleQuote */:\n                        case 96 /* CharCode.BackTick */:\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            else if (linkBeginChCode === 39 /* CharCode.SingleQuote */ || linkBeginChCode === 34 /* CharCode.DoubleQuote */ || linkBeginChCode === 96 /* CharCode.BackTick */) {\n                                chClass = 0 /* CharacterClass.None */;\n                            }\n                            else {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            break;\n                        case 42 /* CharCode.Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* CharCode.Asterisk */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 124 /* CharCode.Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* CharCode.Pipe */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 32 /* CharCode.Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* State.End */) {\n                    let chClass;\n                    if (chCode === 91 /* CharCode.OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* CharacterClass.None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* State.Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* State.Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* State.Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* State.Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1882, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/inplaceReplaceSupport.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = new BasicInplaceReplace(); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AACvF,MAAM;IACT,aAAc;QACV,IAAI,CAAC,gBAAgB,GAAG;YACpB;gBAAC;gBAAQ;aAAQ;YACjB;gBAAC;gBAAQ;aAAQ;YACjB;gBAAC;gBAAW;gBAAU;gBAAU;gBAAY;gBAAW;gBAAa;aAAY;YAChF;gBAAC;gBAAU;gBAAa;aAAU;SACrC;IACL;IACA,MAAO;QAAE,IAAI,CAAC,QAAQ,GAAG,IAAI;IAAuB,CAAC;IACrD,iBAAiB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;QAC/C,IAAI,UAAU,OAAO;YACjB,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC,OAAO;YAC9C,IAAI,QAAQ;gBACR,OAAO;oBACH,OAAO;oBACP,OAAO;gBACX;YACJ;QACJ;QACA,IAAI,UAAU,OAAO;YACjB,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC,OAAO;YAC9C,IAAI,QAAQ;gBACR,OAAO;oBACH,OAAO;oBACP,OAAO;gBACX;YACJ;QACJ;QACA,OAAO;IACX;IACA,mBAAmB,IAAI,EAAE,EAAE,EAAE;QACzB,MAAM,eAAe,IAAI,CAAC,aAAa,CAAC,MAAM;QAC9C,IAAI,iBAAiB,MAAM;YACvB,OAAO;QACX;QACA,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM;IAClC;IACA,cAAc,KAAK,EAAE,EAAE,EAAE;QACrB,MAAM,YAAY,KAAK,GAAG,CAAC,IAAI,MAAM,MAAM,GAAG,CAAC,MAAM,WAAW,CAAC,OAAO,CAAC;QACzE,IAAI,KAAK,OAAO;QAChB,MAAM,KAAK,WAAW;QACtB,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO,OAAO,IAAI;YACvC,IAAI,OAAO,KAAK,CAAC,IAAI;gBACjB,OAAO,MAAM,oBAAoB;YACjC,gCAAgC;YAChC,mDAAmD;YACvD,OACK;gBACD,KAAK,KAAK,KAAK,CAAC,KAAK;gBACrB,MAAM,KAAK,YAAY,CAAC;gBACxB,OAAO,OAAO,KAAK;YACvB;QACJ;QACA,OAAO;IACX;IACA,YAAY,KAAK,EAAE,EAAE,EAAE;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO;IAC/D;IACA,iBAAiB,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE;QACnC,IAAI,SAAS;QACb,IAAK,IAAI,IAAI,GAAG,MAAM,UAAU,MAAM,EAAE,WAAW,QAAQ,IAAI,KAAK,IAAK;YACrE,SAAS,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO;QACvD;QACA,OAAO;IACX;IACA,gBAAgB,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE;QACjC,IAAI,MAAM,SAAS,OAAO,CAAC;QAC3B,IAAI,OAAO,GAAG;YACV,OAAO,KAAK,CAAC,IAAI,CAAC;YAClB,IAAI,MAAM,GAAG;gBACT,MAAM,SAAS,MAAM,GAAG;YAC5B,OACK;gBACD,OAAO,SAAS,MAAM;YAC1B;YACA,OAAO,QAAQ,CAAC,IAAI;QACxB;QACA,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1993, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/defaultDocumentColorsComputer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    // Early validation for RGB and HSL\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    // Potential colors have been found, validate the parameters\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return computeColors(model);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/nullTokenize.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n};\nexport function nullTokenize(languageId, state) {\n    return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = ((languageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */)\n        | (0 /* StandardTokenType.Other */ << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */)\n        | (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;AAC9F;;AACO,MAAM,YAAY,IAAI;IACzB,QAAQ;QACJ,OAAO,IAAI;IACf;IACA,OAAO,KAAK,EAAE;QACV,OAAQ,IAAI,KAAK;IACrB;AACJ;AACO,SAAS,aAAa,UAAU,EAAE,KAAK;IAC1C,OAAO,IAAI,8KAAA,CAAA,qBAAkB,CAAC;QAAC,IAAI,8KAAA,CAAA,QAAK,CAAC,GAAG,IAAI;KAAY,EAAE;AAClE;AACO,SAAS,oBAAoB,UAAU,EAAE,KAAK;IACjD,MAAM,SAAS,IAAI,YAAY;IAC/B,MAAM,CAAC,EAAE,GAAG;IACZ,MAAM,CAAC,EAAE,GAAG,CAAC,AAAC,cAAc,EAAE,oCAAoC,MAC3D,EAAE,2BAA2B,OAAM,EAAE,oCAAoC,MACzE,EAAE,kBAAkB,OAAM,GAAG,oCAAoC,MACjE,EAAE,6BAA6B,OAAM,GAAG,oCAAoC,MAC5E,EAAE,6BAA6B,OAAM,GAAG,oCAAoC,GAAG,MAAM;IAC5F,OAAO,IAAI,8KAAA,CAAA,4BAAyB,CAAC,QAAQ,UAAU,OAAO,YAAY;AAC9E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2166, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/textToHtmlTokenizer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { LineTokens } from '../tokens/lineTokens.js';\nimport { TokenizationRegistry } from '../languages.js';\nimport { NullState, nullTokenizeEncoded } from './nullTokenize.js';\nconst fallback = {\n    getInitialState: () => NullState,\n    tokenizeEncoded: (buffer, hasEOL, state) => nullTokenizeEncoded(0 /* LanguageId.Null */, state)\n};\nexport async function tokenizeToString(languageService, text, languageId) {\n    if (!languageId) {\n        return _tokenizeToString(text, languageService.languageIdCodec, fallback);\n    }\n    const tokenizationSupport = await TokenizationRegistry.getOrCreate(languageId);\n    return _tokenizeToString(text, languageService.languageIdCodec, tokenizationSupport || fallback);\n}\nexport function tokenizeLineToHTML(text, viewLineTokens, colorMap, startOffset, endOffset, tabSize, useNbsp) {\n    let result = `<div>`;\n    let charIndex = startOffset;\n    let tabsCharDelta = 0;\n    let prevIsSpace = true;\n    for (let tokenIndex = 0, tokenCount = viewLineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n        const tokenEndIndex = viewLineTokens.getEndOffset(tokenIndex);\n        if (tokenEndIndex <= startOffset) {\n            continue;\n        }\n        let partContent = '';\n        for (; charIndex < tokenEndIndex && charIndex < endOffset; charIndex++) {\n            const charCode = text.charCodeAt(charIndex);\n            switch (charCode) {\n                case 9 /* CharCode.Tab */: {\n                    let insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    while (insertSpacesCount > 0) {\n                        if (useNbsp && prevIsSpace) {\n                            partContent += '&#160;';\n                            prevIsSpace = false;\n                        }\n                        else {\n                            partContent += ' ';\n                            prevIsSpace = true;\n                        }\n                        insertSpacesCount--;\n                    }\n                    break;\n                }\n                case 60 /* CharCode.LessThan */:\n                    partContent += '&lt;';\n                    prevIsSpace = false;\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    partContent += '&gt;';\n                    prevIsSpace = false;\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    partContent += '&amp;';\n                    prevIsSpace = false;\n                    break;\n                case 0 /* CharCode.Null */:\n                    partContent += '&#00;';\n                    prevIsSpace = false;\n                    break;\n                case 65279 /* CharCode.UTF8_BOM */:\n                case 8232 /* CharCode.LINE_SEPARATOR */:\n                case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n                case 133 /* CharCode.NEXT_LINE */:\n                    partContent += '\\ufffd';\n                    prevIsSpace = false;\n                    break;\n                case 13 /* CharCode.CarriageReturn */:\n                    // zero width space, because carriage return would introduce a line break\n                    partContent += '&#8203';\n                    prevIsSpace = false;\n                    break;\n                case 32 /* CharCode.Space */:\n                    if (useNbsp && prevIsSpace) {\n                        partContent += '&#160;';\n                        prevIsSpace = false;\n                    }\n                    else {\n                        partContent += ' ';\n                        prevIsSpace = true;\n                    }\n                    break;\n                default:\n                    partContent += String.fromCharCode(charCode);\n                    prevIsSpace = false;\n            }\n        }\n        result += `<span style=\"${viewLineTokens.getInlineStyle(tokenIndex, colorMap)}\">${partContent}</span>`;\n        if (tokenEndIndex > endOffset || charIndex >= endOffset) {\n            break;\n        }\n    }\n    result += `</div>`;\n    return result;\n}\nexport function _tokenizeToString(text, languageIdCodec, tokenizationSupport) {\n    let result = `<div class=\"monaco-tokenized-source\">`;\n    const lines = strings.splitLines(text);\n    let currentState = tokenizationSupport.getInitialState();\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const line = lines[i];\n        if (i > 0) {\n            result += `<br/>`;\n        }\n        const tokenizationResult = tokenizationSupport.tokenizeEncoded(line, true, currentState);\n        LineTokens.convertToEndOffset(tokenizationResult.tokens, line.length);\n        const lineTokens = new LineTokens(tokenizationResult.tokens, line, languageIdCodec);\n        const viewLineTokens = lineTokens.inflate();\n        let startOffset = 0;\n        for (let j = 0, lenJ = viewLineTokens.getCount(); j < lenJ; j++) {\n            const type = viewLineTokens.getClassName(j);\n            const endIndex = viewLineTokens.getEndOffset(j);\n            result += `<span class=\"${type}\">${strings.escape(line.substring(startOffset, endIndex))}</span>`;\n            startOffset = endIndex;\n        }\n        currentState = tokenizationResult.endState;\n    }\n    result += `</div>`;\n    return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2304, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/tokenization.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color } from '../../../../base/common/color.js';\nexport class ParsedTokenThemeRule {\n    constructor(token, index, fontStyle, foreground, background) {\n        this._parsedThemeRuleBrand = undefined;\n        this.token = token;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\n/**\n * Parse a raw theme into rules.\n */\nexport function parseTokenTheme(source) {\n    if (!source || !Array.isArray(source)) {\n        return [];\n    }\n    const result = [];\n    let resultLen = 0;\n    for (let i = 0, len = source.length; i < len; i++) {\n        const entry = source[i];\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        if (typeof entry.fontStyle === 'string') {\n            fontStyle = 0 /* FontStyle.None */;\n            const segments = entry.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                const segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* FontStyle.Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* FontStyle.Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* FontStyle.Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* FontStyle.Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.foreground === 'string') {\n            foreground = entry.foreground;\n        }\n        let background = null;\n        if (typeof entry.background === 'string') {\n            background = entry.background;\n        }\n        result[resultLen++] = new ParsedTokenThemeRule(entry.token || '', i, fontStyle, foreground, background);\n    }\n    return result;\n}\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedTokenThemeRules(parsedThemeRules, customTokenColors) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        const r = strcmp(a.token, b.token);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* FontStyle.None */;\n    let defaultForeground = '000000';\n    let defaultBackground = 'ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].token === '') {\n        const incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* FontStyle.NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    const colorMap = new ColorMap();\n    // start with token colors from custom token themes\n    for (const color of customTokenColors) {\n        colorMap.getId(color);\n    }\n    const foregroundColorId = colorMap.getId(defaultForeground);\n    const backgroundColorId = colorMap.getId(defaultBackground);\n    const defaults = new ThemeTrieElementRule(defaultFontStyle, foregroundColorId, backgroundColorId);\n    const root = new ThemeTrieElement(defaults);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        const rule = parsedThemeRules[i];\n        root.insert(rule.token, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new TokenTheme(colorMap, root);\n}\nconst colorRegExp = /^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\nexport class ColorMap {\n    constructor() {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = new Map();\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        const match = color.match(colorRegExp);\n        if (!match) {\n            throw new Error('Illegal value for token color: ' + color);\n        }\n        color = match[1].toUpperCase();\n        let value = this._color2id.get(color);\n        if (value) {\n            return value;\n        }\n        value = ++this._lastColorId;\n        this._color2id.set(color, value);\n        this._id2color[value] = Color.fromHex('#' + color);\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nexport class TokenTheme {\n    static createFromRawTokenTheme(source, customTokenColors) {\n        return this.createFromParsedTokenTheme(parseTokenTheme(source), customTokenColors);\n    }\n    static createFromParsedTokenTheme(source, customTokenColors) {\n        return resolveParsedTokenThemeRules(source, customTokenColors);\n    }\n    constructor(colorMap, root) {\n        this._colorMap = colorMap;\n        this._root = root;\n        this._cache = new Map();\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    _match(token) {\n        return this._root.match(token);\n    }\n    match(languageId, token) {\n        // The cache contains the metadata without the language bits set.\n        let result = this._cache.get(token);\n        if (typeof result === 'undefined') {\n            const rule = this._match(token);\n            const standardToken = toStandardTokenType(token);\n            result = (rule.metadata\n                | (standardToken << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */)) >>> 0;\n            this._cache.set(token, result);\n        }\n        return (result\n            | (languageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */)) >>> 0;\n    }\n}\nconst STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|regexp)\\b/;\nexport function toStandardTokenType(tokenType) {\n    const m = tokenType.match(STANDARD_TOKEN_TYPE_REGEXP);\n    if (!m) {\n        return 0 /* StandardTokenType.Other */;\n    }\n    switch (m[1]) {\n        case 'comment':\n            return 1 /* StandardTokenType.Comment */;\n        case 'string':\n            return 2 /* StandardTokenType.String */;\n        case 'regex':\n            return 3 /* StandardTokenType.RegEx */;\n        case 'regexp':\n            return 3 /* StandardTokenType.RegEx */;\n    }\n    throw new Error('Unexpected match for standard token type!');\n}\nexport function strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nexport class ThemeTrieElementRule {\n    constructor(fontStyle, foreground, background) {\n        this._themeTrieElementRuleBrand = undefined;\n        this._fontStyle = fontStyle;\n        this._foreground = foreground;\n        this._background = background;\n        this.metadata = ((this._fontStyle << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n            | (this._foreground << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n            | (this._background << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this._fontStyle, this._foreground, this._background);\n    }\n    acceptOverwrite(fontStyle, foreground, background) {\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            this._fontStyle = fontStyle;\n        }\n        if (foreground !== 0 /* ColorId.None */) {\n            this._foreground = foreground;\n        }\n        if (background !== 0 /* ColorId.None */) {\n            this._background = background;\n        }\n        this.metadata = ((this._fontStyle << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n            | (this._foreground << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n            | (this._background << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    }\n}\nexport class ThemeTrieElement {\n    constructor(mainRule) {\n        this._themeTrieElementBrand = undefined;\n        this._mainRule = mainRule;\n        this._children = new Map();\n    }\n    match(token) {\n        if (token === '') {\n            return this._mainRule;\n        }\n        const dotIndex = token.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = token;\n            tail = '';\n        }\n        else {\n            head = token.substring(0, dotIndex);\n            tail = token.substring(dotIndex + 1);\n        }\n        const child = this._children.get(head);\n        if (typeof child !== 'undefined') {\n            return child.match(tail);\n        }\n        return this._mainRule;\n    }\n    insert(token, fontStyle, foreground, background) {\n        if (token === '') {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(fontStyle, foreground, background);\n            return;\n        }\n        const dotIndex = token.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = token;\n            tail = '';\n        }\n        else {\n            head = token.substring(0, dotIndex);\n            tail = token.substring(dotIndex + 1);\n        }\n        let child = this._children.get(head);\n        if (typeof child === 'undefined') {\n            child = new ThemeTrieElement(this._mainRule.clone());\n            this._children.set(head, child);\n        }\n        child.insert(tail, fontStyle, foreground, background);\n    }\n}\nexport function generateTokensCSSForColorMap(colorMap) {\n    const rules = [];\n    for (let i = 1, len = colorMap.length; i < len; i++) {\n        const color = colorMap[i];\n        rules[i] = `.mtk${i} { color: ${color}; }`;\n    }\n    rules.push('.mtki { font-style: italic; }');\n    rules.push('.mtkb { font-weight: bold; }');\n    rules.push('.mtku { text-decoration: underline; text-underline-position: under; }');\n    rules.push('.mtks { text-decoration: line-through; }');\n    rules.push('.mtks.mtku { text-decoration: underline line-through; text-underline-position: under; }');\n    return rules.join('\\n');\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2593, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/indentationLineProcessor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { createScopedLineTokens } from '../supports.js';\nimport { LineTokens } from '../../tokens/lineTokens.js';\n/**\n * This class is a wrapper class around {@link IndentRulesSupport}.\n * It processes the lines by removing the language configuration brackets from the regex, string and comment tokens.\n * It then calls into the {@link IndentRulesSupport} to validate the indentation conditions.\n */\nexport class ProcessedIndentRulesSupport {\n    constructor(model, indentRulesSupport, languageConfigurationService) {\n        this._indentRulesSupport = indentRulesSupport;\n        this._indentationLineProcessor = new IndentationLineProcessor(model, languageConfigurationService);\n    }\n    /**\n     * Apply the new indentation and return whether the indentation level should be increased after the given line number\n     */\n    shouldIncrease(lineNumber, newIndentation) {\n        const processedLine = this._indentationLineProcessor.getProcessedLine(lineNumber, newIndentation);\n        return this._indentRulesSupport.shouldIncrease(processedLine);\n    }\n    /**\n     * Apply the new indentation and return whether the indentation level should be decreased after the given line number\n     */\n    shouldDecrease(lineNumber, newIndentation) {\n        const processedLine = this._indentationLineProcessor.getProcessedLine(lineNumber, newIndentation);\n        return this._indentRulesSupport.shouldDecrease(processedLine);\n    }\n    /**\n     * Apply the new indentation and return whether the indentation level should remain unchanged at the given line number\n     */\n    shouldIgnore(lineNumber, newIndentation) {\n        const processedLine = this._indentationLineProcessor.getProcessedLine(lineNumber, newIndentation);\n        return this._indentRulesSupport.shouldIgnore(processedLine);\n    }\n    /**\n     * Apply the new indentation and return whether the indentation level should increase on the line after the given line number\n     */\n    shouldIndentNextLine(lineNumber, newIndentation) {\n        const processedLine = this._indentationLineProcessor.getProcessedLine(lineNumber, newIndentation);\n        return this._indentRulesSupport.shouldIndentNextLine(processedLine);\n    }\n}\n/**\n * This class fetches the processed text around a range which can be used for indentation evaluation.\n * It returns:\n * - The processed text before the given range and on the same start line\n * - The processed text after the given range and on the same end line\n * - The processed text on the previous line\n */\nexport class IndentationContextProcessor {\n    constructor(model, languageConfigurationService) {\n        this.model = model;\n        this.indentationLineProcessor = new IndentationLineProcessor(model, languageConfigurationService);\n    }\n    /**\n     * Returns the processed text, stripped from the language configuration brackets within the string, comment and regex tokens, around the given range\n     */\n    getProcessedTokenContextAroundRange(range) {\n        const beforeRangeProcessedTokens = this._getProcessedTokensBeforeRange(range);\n        const afterRangeProcessedTokens = this._getProcessedTokensAfterRange(range);\n        const previousLineProcessedTokens = this._getProcessedPreviousLineTokens(range);\n        return { beforeRangeProcessedTokens, afterRangeProcessedTokens, previousLineProcessedTokens };\n    }\n    _getProcessedTokensBeforeRange(range) {\n        this.model.tokenization.forceTokenization(range.startLineNumber);\n        const lineTokens = this.model.tokenization.getLineTokens(range.startLineNumber);\n        const scopedLineTokens = createScopedLineTokens(lineTokens, range.startColumn - 1);\n        let slicedTokens;\n        if (isLanguageDifferentFromLineStart(this.model, range.getStartPosition())) {\n            const columnIndexWithinScope = (range.startColumn - 1) - scopedLineTokens.firstCharOffset;\n            const firstCharacterOffset = scopedLineTokens.firstCharOffset;\n            const lastCharacterOffset = firstCharacterOffset + columnIndexWithinScope;\n            slicedTokens = lineTokens.sliceAndInflate(firstCharacterOffset, lastCharacterOffset, 0);\n        }\n        else {\n            const columnWithinLine = range.startColumn - 1;\n            slicedTokens = lineTokens.sliceAndInflate(0, columnWithinLine, 0);\n        }\n        const processedTokens = this.indentationLineProcessor.getProcessedTokens(slicedTokens);\n        return processedTokens;\n    }\n    _getProcessedTokensAfterRange(range) {\n        const position = range.isEmpty() ? range.getStartPosition() : range.getEndPosition();\n        this.model.tokenization.forceTokenization(position.lineNumber);\n        const lineTokens = this.model.tokenization.getLineTokens(position.lineNumber);\n        const scopedLineTokens = createScopedLineTokens(lineTokens, position.column - 1);\n        const columnIndexWithinScope = position.column - 1 - scopedLineTokens.firstCharOffset;\n        const firstCharacterOffset = scopedLineTokens.firstCharOffset + columnIndexWithinScope;\n        const lastCharacterOffset = scopedLineTokens.firstCharOffset + scopedLineTokens.getLineLength();\n        const slicedTokens = lineTokens.sliceAndInflate(firstCharacterOffset, lastCharacterOffset, 0);\n        const processedTokens = this.indentationLineProcessor.getProcessedTokens(slicedTokens);\n        return processedTokens;\n    }\n    _getProcessedPreviousLineTokens(range) {\n        const getScopedLineTokensAtEndColumnOfLine = (lineNumber) => {\n            this.model.tokenization.forceTokenization(lineNumber);\n            const lineTokens = this.model.tokenization.getLineTokens(lineNumber);\n            const endColumnOfLine = this.model.getLineMaxColumn(lineNumber) - 1;\n            const scopedLineTokensAtEndColumn = createScopedLineTokens(lineTokens, endColumnOfLine);\n            return scopedLineTokensAtEndColumn;\n        };\n        this.model.tokenization.forceTokenization(range.startLineNumber);\n        const lineTokens = this.model.tokenization.getLineTokens(range.startLineNumber);\n        const scopedLineTokens = createScopedLineTokens(lineTokens, range.startColumn - 1);\n        const emptyTokens = LineTokens.createEmpty('', scopedLineTokens.languageIdCodec);\n        const previousLineNumber = range.startLineNumber - 1;\n        const isFirstLine = previousLineNumber === 0;\n        if (isFirstLine) {\n            return emptyTokens;\n        }\n        const canScopeExtendOnPreviousLine = scopedLineTokens.firstCharOffset === 0;\n        if (!canScopeExtendOnPreviousLine) {\n            return emptyTokens;\n        }\n        const scopedLineTokensAtEndColumnOfPreviousLine = getScopedLineTokensAtEndColumnOfLine(previousLineNumber);\n        const doesLanguageContinueOnPreviousLine = scopedLineTokens.languageId === scopedLineTokensAtEndColumnOfPreviousLine.languageId;\n        if (!doesLanguageContinueOnPreviousLine) {\n            return emptyTokens;\n        }\n        const previousSlicedLineTokens = scopedLineTokensAtEndColumnOfPreviousLine.toIViewLineTokens();\n        const processedTokens = this.indentationLineProcessor.getProcessedTokens(previousSlicedLineTokens);\n        return processedTokens;\n    }\n}\n/**\n * This class performs the actual processing of the indentation lines.\n * The brackets of the language configuration are removed from the regex, string and comment tokens.\n */\nclass IndentationLineProcessor {\n    constructor(model, languageConfigurationService) {\n        this.model = model;\n        this.languageConfigurationService = languageConfigurationService;\n    }\n    /**\n     * Get the processed line for the given line number and potentially adjust the indentation level.\n     * Remove the language configuration brackets from the regex, string and comment tokens.\n     */\n    getProcessedLine(lineNumber, newIndentation) {\n        const replaceIndentation = (line, newIndentation) => {\n            const currentIndentation = strings.getLeadingWhitespace(line);\n            const adjustedLine = newIndentation + line.substring(currentIndentation.length);\n            return adjustedLine;\n        };\n        this.model.tokenization.forceTokenization?.(lineNumber);\n        const tokens = this.model.tokenization.getLineTokens(lineNumber);\n        let processedLine = this.getProcessedTokens(tokens).getLineContent();\n        if (newIndentation !== undefined) {\n            processedLine = replaceIndentation(processedLine, newIndentation);\n        }\n        return processedLine;\n    }\n    /**\n     * Process the line with the given tokens, remove the language configuration brackets from the regex, string and comment tokens.\n     */\n    getProcessedTokens(tokens) {\n        const shouldRemoveBracketsFromTokenType = (tokenType) => {\n            return tokenType === 2 /* StandardTokenType.String */\n                || tokenType === 3 /* StandardTokenType.RegEx */\n                || tokenType === 1 /* StandardTokenType.Comment */;\n        };\n        const languageId = tokens.getLanguageId(0);\n        const bracketsConfiguration = this.languageConfigurationService.getLanguageConfiguration(languageId).bracketsNew;\n        const bracketsRegExp = bracketsConfiguration.getBracketRegExp({ global: true });\n        const textAndMetadata = [];\n        tokens.forEach((tokenIndex) => {\n            const tokenType = tokens.getStandardTokenType(tokenIndex);\n            let text = tokens.getTokenText(tokenIndex);\n            if (shouldRemoveBracketsFromTokenType(tokenType)) {\n                text = text.replace(bracketsRegExp, '');\n            }\n            const metadata = tokens.getMetadata(tokenIndex);\n            textAndMetadata.push({ text, metadata });\n        });\n        const processedLineTokens = LineTokens.createFromTextAndMetadata(textAndMetadata, tokens.languageIdCodec);\n        return processedLineTokens;\n    }\n}\nexport function isLanguageDifferentFromLineStart(model, position) {\n    model.tokenization.forceTokenization(position.lineNumber);\n    const lineTokens = model.tokenization.getLineTokens(position.lineNumber);\n    const scopedLineTokens = createScopedLineTokens(lineTokens, position.column - 1);\n    const doesScopeStartAtOffsetZero = scopedLineTokens.firstCharOffset === 0;\n    const isScopedLanguageEqualToFirstLanguageOnLine = lineTokens.getLanguageId(0) === scopedLineTokens.languageId;\n    const languageIsDifferentFromLineStart = !doesScopeStartAtOffsetZero && !isScopedLanguageEqualToFirstLanguageOnLine;\n    return languageIsDifferentFromLineStart;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2782, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/enterAction.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndentAction } from './languageConfiguration.js';\nimport { getIndentationAtPosition } from './languageConfigurationRegistry.js';\nimport { IndentationContextProcessor } from './supports/indentationLineProcessor.js';\nexport function getEnterAction(autoIndent, model, range, languageConfigurationService) {\n    model.tokenization.forceTokenization(range.startLineNumber);\n    const languageId = model.getLanguageIdAtPosition(range.startLineNumber, range.startColumn);\n    const richEditSupport = languageConfigurationService.getLanguageConfiguration(languageId);\n    if (!richEditSupport) {\n        return null;\n    }\n    const indentationContextProcessor = new IndentationContextProcessor(model, languageConfigurationService);\n    const processedContextTokens = indentationContextProcessor.getProcessedTokenContextAroundRange(range);\n    const previousLineText = processedContextTokens.previousLineProcessedTokens.getLineContent();\n    const beforeEnterText = processedContextTokens.beforeRangeProcessedTokens.getLineContent();\n    const afterEnterText = processedContextTokens.afterRangeProcessedTokens.getLineContent();\n    const enterResult = richEditSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n    if (!enterResult) {\n        return null;\n    }\n    const indentAction = enterResult.indentAction;\n    let appendText = enterResult.appendText;\n    const removeText = enterResult.removeText || 0;\n    // Here we add `\\t` to appendText first because enterAction is leveraging appendText and removeText to change indentation.\n    if (!appendText) {\n        if ((indentAction === IndentAction.Indent) ||\n            (indentAction === IndentAction.IndentOutdent)) {\n            appendText = '\\t';\n        }\n        else {\n            appendText = '';\n        }\n    }\n    else if (indentAction === IndentAction.Indent) {\n        appendText = '\\t' + appendText;\n    }\n    let indentation = getIndentationAtPosition(model, range.startLineNumber, range.startColumn);\n    if (removeText) {\n        indentation = indentation.substring(0, indentation.length - removeText);\n    }\n    return {\n        indentAction: indentAction,\n        appendText: appendText,\n        removeText: removeText,\n        indentation: indentation\n    };\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;AACA;AACA;;;;AACO,SAAS,eAAe,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,4BAA4B;IACjF,MAAM,YAAY,CAAC,iBAAiB,CAAC,MAAM,eAAe;IAC1D,MAAM,aAAa,MAAM,uBAAuB,CAAC,MAAM,eAAe,EAAE,MAAM,WAAW;IACzF,MAAM,kBAAkB,6BAA6B,wBAAwB,CAAC;IAC9E,IAAI,CAAC,iBAAiB;QAClB,OAAO;IACX;IACA,MAAM,8BAA8B,IAAI,sNAAA,CAAA,8BAA2B,CAAC,OAAO;IAC3E,MAAM,yBAAyB,4BAA4B,mCAAmC,CAAC;IAC/F,MAAM,mBAAmB,uBAAuB,2BAA2B,CAAC,cAAc;IAC1F,MAAM,kBAAkB,uBAAuB,0BAA0B,CAAC,cAAc;IACxF,MAAM,iBAAiB,uBAAuB,yBAAyB,CAAC,cAAc;IACtF,MAAM,cAAc,gBAAgB,OAAO,CAAC,YAAY,kBAAkB,iBAAiB;IAC3F,IAAI,CAAC,aAAa;QACd,OAAO;IACX;IACA,MAAM,eAAe,YAAY,YAAY;IAC7C,IAAI,aAAa,YAAY,UAAU;IACvC,MAAM,aAAa,YAAY,UAAU,IAAI;IAC7C,0HAA0H;IAC1H,IAAI,CAAC,YAAY;QACb,IAAI,AAAC,iBAAiB,uMAAA,CAAA,eAAY,CAAC,MAAM,IACpC,iBAAiB,uMAAA,CAAA,eAAY,CAAC,aAAa,EAAG;YAC/C,aAAa;QACjB,OACK;YACD,aAAa;QACjB;IACJ,OACK,IAAI,iBAAiB,uMAAA,CAAA,eAAY,CAAC,MAAM,EAAE;QAC3C,aAAa,OAAO;IACxB;IACA,IAAI,cAAc,CAAA,GAAA,+MAAA,CAAA,2BAAwB,AAAD,EAAE,OAAO,MAAM,eAAe,EAAE,MAAM,WAAW;IAC1F,IAAI,YAAY;QACZ,cAAc,YAAY,SAAS,CAAC,GAAG,YAAY,MAAM,GAAG;IAChE;IACA,OAAO;QACH,cAAc;QACd,YAAY;QACZ,YAAY;QACZ,aAAa;IACjB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2840, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/common/languages/autoIndent.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { IndentAction } from './languageConfiguration.js';\nimport { IndentationContextProcessor, isLanguageDifferentFromLineStart, ProcessedIndentRulesSupport } from './supports/indentationLineProcessor.js';\n/**\n * Get nearest preceding line which doesn't match unIndentPattern or contains all whitespace.\n * Result:\n * -1: run into the boundary of embedded languages\n * 0: every line above are invalid\n * else: nearest preceding line of the same language\n */\nfunction getPrecedingValidLine(model, lineNumber, processedIndentRulesSupport) {\n    const languageId = model.tokenization.getLanguageIdAtPosition(lineNumber, 0);\n    if (lineNumber > 1) {\n        let lastLineNumber;\n        let resultLineNumber = -1;\n        for (lastLineNumber = lineNumber - 1; lastLineNumber >= 1; lastLineNumber--) {\n            if (model.tokenization.getLanguageIdAtPosition(lastLineNumber, 0) !== languageId) {\n                return resultLineNumber;\n            }\n            const text = model.getLineContent(lastLineNumber);\n            if (processedIndentRulesSupport.shouldIgnore(lastLineNumber) || /^\\s+$/.test(text) || text === '') {\n                resultLineNumber = lastLineNumber;\n                continue;\n            }\n            return lastLineNumber;\n        }\n    }\n    return -1;\n}\n/**\n * Get inherited indentation from above lines.\n * 1. Find the nearest preceding line which doesn't match unIndentedLinePattern.\n * 2. If this line matches indentNextLinePattern or increaseIndentPattern, it means that the indent level of `lineNumber` should be 1 greater than this line.\n * 3. If this line doesn't match any indent rules\n *   a. check whether the line above it matches indentNextLinePattern\n *   b. If not, the indent level of this line is the result\n *   c. If so, it means the indent of this line is *temporary*, go upward utill we find a line whose indent is not temporary (the same workflow a -> b -> c).\n * 4. Otherwise, we fail to get an inherited indent from aboves. Return null and we should not touch the indent of `lineNumber`\n *\n * This function only return the inherited indent based on above lines, it doesn't check whether current line should decrease or not.\n */\nexport function getInheritIndentForLine(autoIndent, model, lineNumber, honorIntentialIndent = true, languageConfigurationService) {\n    if (autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n        return null;\n    }\n    const indentRulesSupport = languageConfigurationService.getLanguageConfiguration(model.tokenization.getLanguageId()).indentRulesSupport;\n    if (!indentRulesSupport) {\n        return null;\n    }\n    const processedIndentRulesSupport = new ProcessedIndentRulesSupport(model, indentRulesSupport, languageConfigurationService);\n    if (lineNumber <= 1) {\n        return {\n            indentation: '',\n            action: null\n        };\n    }\n    // Use no indent if this is the first non-blank line\n    for (let priorLineNumber = lineNumber - 1; priorLineNumber > 0; priorLineNumber--) {\n        if (model.getLineContent(priorLineNumber) !== '') {\n            break;\n        }\n        if (priorLineNumber === 1) {\n            return {\n                indentation: '',\n                action: null\n            };\n        }\n    }\n    const precedingUnIgnoredLine = getPrecedingValidLine(model, lineNumber, processedIndentRulesSupport);\n    if (precedingUnIgnoredLine < 0) {\n        return null;\n    }\n    else if (precedingUnIgnoredLine < 1) {\n        return {\n            indentation: '',\n            action: null\n        };\n    }\n    if (processedIndentRulesSupport.shouldIncrease(precedingUnIgnoredLine) || processedIndentRulesSupport.shouldIndentNextLine(precedingUnIgnoredLine)) {\n        const precedingUnIgnoredLineContent = model.getLineContent(precedingUnIgnoredLine);\n        return {\n            indentation: strings.getLeadingWhitespace(precedingUnIgnoredLineContent),\n            action: IndentAction.Indent,\n            line: precedingUnIgnoredLine\n        };\n    }\n    else if (processedIndentRulesSupport.shouldDecrease(precedingUnIgnoredLine)) {\n        const precedingUnIgnoredLineContent = model.getLineContent(precedingUnIgnoredLine);\n        return {\n            indentation: strings.getLeadingWhitespace(precedingUnIgnoredLineContent),\n            action: null,\n            line: precedingUnIgnoredLine\n        };\n    }\n    else {\n        // precedingUnIgnoredLine can not be ignored.\n        // it doesn't increase indent of following lines\n        // it doesn't increase just next line\n        // so current line is not affect by precedingUnIgnoredLine\n        // and then we should get a correct inheritted indentation from above lines\n        if (precedingUnIgnoredLine === 1) {\n            return {\n                indentation: strings.getLeadingWhitespace(model.getLineContent(precedingUnIgnoredLine)),\n                action: null,\n                line: precedingUnIgnoredLine\n            };\n        }\n        const previousLine = precedingUnIgnoredLine - 1;\n        const previousLineIndentMetadata = indentRulesSupport.getIndentMetadata(model.getLineContent(previousLine));\n        if (!(previousLineIndentMetadata & (1 /* IndentConsts.INCREASE_MASK */ | 2 /* IndentConsts.DECREASE_MASK */)) &&\n            (previousLineIndentMetadata & 4 /* IndentConsts.INDENT_NEXTLINE_MASK */)) {\n            let stopLine = 0;\n            for (let i = previousLine - 1; i > 0; i--) {\n                if (processedIndentRulesSupport.shouldIndentNextLine(i)) {\n                    continue;\n                }\n                stopLine = i;\n                break;\n            }\n            return {\n                indentation: strings.getLeadingWhitespace(model.getLineContent(stopLine + 1)),\n                action: null,\n                line: stopLine + 1\n            };\n        }\n        if (honorIntentialIndent) {\n            return {\n                indentation: strings.getLeadingWhitespace(model.getLineContent(precedingUnIgnoredLine)),\n                action: null,\n                line: precedingUnIgnoredLine\n            };\n        }\n        else {\n            // search from precedingUnIgnoredLine until we find one whose indent is not temporary\n            for (let i = precedingUnIgnoredLine; i > 0; i--) {\n                if (processedIndentRulesSupport.shouldIncrease(i)) {\n                    return {\n                        indentation: strings.getLeadingWhitespace(model.getLineContent(i)),\n                        action: IndentAction.Indent,\n                        line: i\n                    };\n                }\n                else if (processedIndentRulesSupport.shouldIndentNextLine(i)) {\n                    let stopLine = 0;\n                    for (let j = i - 1; j > 0; j--) {\n                        if (processedIndentRulesSupport.shouldIndentNextLine(i)) {\n                            continue;\n                        }\n                        stopLine = j;\n                        break;\n                    }\n                    return {\n                        indentation: strings.getLeadingWhitespace(model.getLineContent(stopLine + 1)),\n                        action: null,\n                        line: stopLine + 1\n                    };\n                }\n                else if (processedIndentRulesSupport.shouldDecrease(i)) {\n                    return {\n                        indentation: strings.getLeadingWhitespace(model.getLineContent(i)),\n                        action: null,\n                        line: i\n                    };\n                }\n            }\n            return {\n                indentation: strings.getLeadingWhitespace(model.getLineContent(1)),\n                action: null,\n                line: 1\n            };\n        }\n    }\n}\nexport function getGoodIndentForLine(autoIndent, virtualModel, languageId, lineNumber, indentConverter, languageConfigurationService) {\n    if (autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n        return null;\n    }\n    const richEditSupport = languageConfigurationService.getLanguageConfiguration(languageId);\n    if (!richEditSupport) {\n        return null;\n    }\n    const indentRulesSupport = languageConfigurationService.getLanguageConfiguration(languageId).indentRulesSupport;\n    if (!indentRulesSupport) {\n        return null;\n    }\n    const processedIndentRulesSupport = new ProcessedIndentRulesSupport(virtualModel, indentRulesSupport, languageConfigurationService);\n    const indent = getInheritIndentForLine(autoIndent, virtualModel, lineNumber, undefined, languageConfigurationService);\n    if (indent) {\n        const inheritLine = indent.line;\n        if (inheritLine !== undefined) {\n            // Apply enter action as long as there are only whitespace lines between inherited line and this line.\n            let shouldApplyEnterRules = true;\n            for (let inBetweenLine = inheritLine; inBetweenLine < lineNumber - 1; inBetweenLine++) {\n                if (!/^\\s*$/.test(virtualModel.getLineContent(inBetweenLine))) {\n                    shouldApplyEnterRules = false;\n                    break;\n                }\n            }\n            if (shouldApplyEnterRules) {\n                const enterResult = richEditSupport.onEnter(autoIndent, '', virtualModel.getLineContent(inheritLine), '');\n                if (enterResult) {\n                    let indentation = strings.getLeadingWhitespace(virtualModel.getLineContent(inheritLine));\n                    if (enterResult.removeText) {\n                        indentation = indentation.substring(0, indentation.length - enterResult.removeText);\n                    }\n                    if ((enterResult.indentAction === IndentAction.Indent) ||\n                        (enterResult.indentAction === IndentAction.IndentOutdent)) {\n                        indentation = indentConverter.shiftIndent(indentation);\n                    }\n                    else if (enterResult.indentAction === IndentAction.Outdent) {\n                        indentation = indentConverter.unshiftIndent(indentation);\n                    }\n                    if (processedIndentRulesSupport.shouldDecrease(lineNumber)) {\n                        indentation = indentConverter.unshiftIndent(indentation);\n                    }\n                    if (enterResult.appendText) {\n                        indentation += enterResult.appendText;\n                    }\n                    return strings.getLeadingWhitespace(indentation);\n                }\n            }\n        }\n        if (processedIndentRulesSupport.shouldDecrease(lineNumber)) {\n            if (indent.action === IndentAction.Indent) {\n                return indent.indentation;\n            }\n            else {\n                return indentConverter.unshiftIndent(indent.indentation);\n            }\n        }\n        else {\n            if (indent.action === IndentAction.Indent) {\n                return indentConverter.shiftIndent(indent.indentation);\n            }\n            else {\n                return indent.indentation;\n            }\n        }\n    }\n    return null;\n}\nexport function getIndentForEnter(autoIndent, model, range, indentConverter, languageConfigurationService) {\n    if (autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n        return null;\n    }\n    const languageId = model.getLanguageIdAtPosition(range.startLineNumber, range.startColumn);\n    const indentRulesSupport = languageConfigurationService.getLanguageConfiguration(languageId).indentRulesSupport;\n    if (!indentRulesSupport) {\n        return null;\n    }\n    model.tokenization.forceTokenization(range.startLineNumber);\n    const indentationContextProcessor = new IndentationContextProcessor(model, languageConfigurationService);\n    const processedContextTokens = indentationContextProcessor.getProcessedTokenContextAroundRange(range);\n    const afterEnterProcessedTokens = processedContextTokens.afterRangeProcessedTokens;\n    const beforeEnterProcessedTokens = processedContextTokens.beforeRangeProcessedTokens;\n    const beforeEnterIndent = strings.getLeadingWhitespace(beforeEnterProcessedTokens.getLineContent());\n    const virtualModel = createVirtualModelWithModifiedTokensAtLine(model, range.startLineNumber, beforeEnterProcessedTokens);\n    const languageIsDifferentFromLineStart = isLanguageDifferentFromLineStart(model, range.getStartPosition());\n    const currentLine = model.getLineContent(range.startLineNumber);\n    const currentLineIndent = strings.getLeadingWhitespace(currentLine);\n    const afterEnterAction = getInheritIndentForLine(autoIndent, virtualModel, range.startLineNumber + 1, undefined, languageConfigurationService);\n    if (!afterEnterAction) {\n        const beforeEnter = languageIsDifferentFromLineStart ? currentLineIndent : beforeEnterIndent;\n        return {\n            beforeEnter: beforeEnter,\n            afterEnter: beforeEnter\n        };\n    }\n    let afterEnterIndent = languageIsDifferentFromLineStart ? currentLineIndent : afterEnterAction.indentation;\n    if (afterEnterAction.action === IndentAction.Indent) {\n        afterEnterIndent = indentConverter.shiftIndent(afterEnterIndent);\n    }\n    if (indentRulesSupport.shouldDecrease(afterEnterProcessedTokens.getLineContent())) {\n        afterEnterIndent = indentConverter.unshiftIndent(afterEnterIndent);\n    }\n    return {\n        beforeEnter: languageIsDifferentFromLineStart ? currentLineIndent : beforeEnterIndent,\n        afterEnter: afterEnterIndent\n    };\n}\n/**\n * We should always allow intentional indentation. It means, if users change the indentation of `lineNumber` and the content of\n * this line doesn't match decreaseIndentPattern, we should not adjust the indentation.\n */\nexport function getIndentActionForType(cursorConfig, model, range, ch, indentConverter, languageConfigurationService) {\n    const autoIndent = cursorConfig.autoIndent;\n    if (autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n        return null;\n    }\n    const languageIsDifferentFromLineStart = isLanguageDifferentFromLineStart(model, range.getStartPosition());\n    if (languageIsDifferentFromLineStart) {\n        // this line has mixed languages and indentation rules will not work\n        return null;\n    }\n    const languageId = model.getLanguageIdAtPosition(range.startLineNumber, range.startColumn);\n    const indentRulesSupport = languageConfigurationService.getLanguageConfiguration(languageId).indentRulesSupport;\n    if (!indentRulesSupport) {\n        return null;\n    }\n    const indentationContextProcessor = new IndentationContextProcessor(model, languageConfigurationService);\n    const processedContextTokens = indentationContextProcessor.getProcessedTokenContextAroundRange(range);\n    const beforeRangeText = processedContextTokens.beforeRangeProcessedTokens.getLineContent();\n    const afterRangeText = processedContextTokens.afterRangeProcessedTokens.getLineContent();\n    const textAroundRange = beforeRangeText + afterRangeText;\n    const textAroundRangeWithCharacter = beforeRangeText + ch + afterRangeText;\n    // If previous content already matches decreaseIndentPattern, it means indentation of this line should already be adjusted\n    // Users might change the indentation by purpose and we should honor that instead of readjusting.\n    if (!indentRulesSupport.shouldDecrease(textAroundRange) && indentRulesSupport.shouldDecrease(textAroundRangeWithCharacter)) {\n        // after typing `ch`, the content matches decreaseIndentPattern, we should adjust the indent to a good manner.\n        // 1. Get inherited indent action\n        const r = getInheritIndentForLine(autoIndent, model, range.startLineNumber, false, languageConfigurationService);\n        if (!r) {\n            return null;\n        }\n        let indentation = r.indentation;\n        if (r.action !== IndentAction.Indent) {\n            indentation = indentConverter.unshiftIndent(indentation);\n        }\n        return indentation;\n    }\n    const previousLineNumber = range.startLineNumber - 1;\n    if (previousLineNumber > 0) {\n        const previousLine = model.getLineContent(previousLineNumber);\n        if (indentRulesSupport.shouldIndentNextLine(previousLine) && indentRulesSupport.shouldIncrease(textAroundRangeWithCharacter)) {\n            const inheritedIndentationData = getInheritIndentForLine(autoIndent, model, range.startLineNumber, false, languageConfigurationService);\n            const inheritedIndentation = inheritedIndentationData?.indentation;\n            if (inheritedIndentation !== undefined) {\n                const currentLine = model.getLineContent(range.startLineNumber);\n                const actualCurrentIndentation = strings.getLeadingWhitespace(currentLine);\n                const inferredCurrentIndentation = indentConverter.shiftIndent(inheritedIndentation);\n                // If the inferred current indentation is not equal to the actual current indentation, then the indentation has been intentionally changed, in that case keep it\n                const inferredIndentationEqualsActual = inferredCurrentIndentation === actualCurrentIndentation;\n                const textAroundRangeContainsOnlyWhitespace = /^\\s*$/.test(textAroundRange);\n                const autoClosingPairs = cursorConfig.autoClosingPairs.autoClosingPairsOpenByEnd.get(ch);\n                const autoClosingPairExists = autoClosingPairs && autoClosingPairs.length > 0;\n                const isChFirstNonWhitespaceCharacterAndInAutoClosingPair = autoClosingPairExists && textAroundRangeContainsOnlyWhitespace;\n                if (inferredIndentationEqualsActual && isChFirstNonWhitespaceCharacterAndInAutoClosingPair) {\n                    return inheritedIndentation;\n                }\n            }\n        }\n    }\n    return null;\n}\nexport function getIndentMetadata(model, lineNumber, languageConfigurationService) {\n    const indentRulesSupport = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentRulesSupport;\n    if (!indentRulesSupport) {\n        return null;\n    }\n    if (lineNumber < 1 || lineNumber > model.getLineCount()) {\n        return null;\n    }\n    return indentRulesSupport.getIndentMetadata(model.getLineContent(lineNumber));\n}\nfunction createVirtualModelWithModifiedTokensAtLine(model, modifiedLineNumber, modifiedTokens) {\n    const virtualModel = {\n        tokenization: {\n            getLineTokens: (lineNumber) => {\n                if (lineNumber === modifiedLineNumber) {\n                    return modifiedTokens;\n                }\n                else {\n                    return model.tokenization.getLineTokens(lineNumber);\n                }\n            },\n            getLanguageId: () => {\n                return model.getLanguageId();\n            },\n            getLanguageIdAtPosition: (lineNumber, column) => {\n                return model.getLanguageIdAtPosition(lineNumber, column);\n            },\n        },\n        getLineContent: (lineNumber) => {\n            if (lineNumber === modifiedLineNumber) {\n                return modifiedTokens.getLineContent();\n            }\n            else {\n                return model.getLineContent(lineNumber);\n            }\n        }\n    };\n    return virtualModel;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}