{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  // Useful regular expressions\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [\n      [/[^<&]+/, \"\"],\n      { include: \"@whitespace\" },\n      // Standard opening tag\n      [/(<)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"tag\", next: \"@tag\" }]],\n      // Standard closing tag\n      [\n        /(<\\/)(@qualifiedName)(\\s*)(>)/,\n        [{ token: \"delimiter\" }, { token: \"tag\" }, \"\", { token: \"delimiter\" }]\n      ],\n      // Meta tags - instruction\n      [/(<\\?)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      // Meta tags - declaration\n      [/(<\\!)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      // CDATA\n      [/<\\!\\[CDATA\\[/, { token: \"delimiter.cdata\", next: \"@cdata\" }],\n      [/&\\w+;/, \"string.escape\"]\n    ],\n    cdata: [\n      [/[^\\]]+/, \"\"],\n      [/\\]\\]>/, { token: \"delimiter.cdata\", next: \"@pop\" }],\n      [/\\]/, \"\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [\n        /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n        [\"attribute.name\", \"\", \"attribute.value\"]\n      ],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [/@qualifiedName/, \"attribute.name\"],\n      [/\\?>/, { token: \"delimiter\", next: \"@pop\" }],\n      [/(\\/)(>)/, [{ token: \"tag\" }, { token: \"delimiter\", next: \"@pop\" }]],\n      [/>/, { token: \"delimiter\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}