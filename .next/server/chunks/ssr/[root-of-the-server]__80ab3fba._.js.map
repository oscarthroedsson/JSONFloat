{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/editor/editorStyle.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"editor\": \"editorStyle-module__g5GrRa__editor\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/components/PrimativeValue/editors/JsonEditor.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Editor, EditorProps, OnMount } from \"@monaco-editor/react\";\nimport mockJson from \"@/assets/mock/jsonMock.json\";\nimport * as monacoEditor from \"monaco-editor\";\ninterface JSONEditorProps extends EditorProps {\n  handleChange: (val: string) => void;\n}\n\nexport default function JSONEditor({ handleChange, ...props }: JSONEditorProps) {\n  const [hasErrors, setHasErrors] = useState(false);\n  const editorRef = useRef<monacoEditor.editor.IStandaloneCodeEditor | null>(null);\n\n  const handleMount: OnMount = (editor, monaco) => {\n    editorRef.current = editor;\n\n    // ‚úÖ H√ÑR anv√§nder du monaco korrekt (utan direkt import)\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: false,\n      schemas: [],\n    });\n\n    monaco.editor.onDidChangeMarkers(() => {\n      const model = editor.getModel();\n      if (!model) return;\n      const markers = monaco.editor.getModelMarkers({ resource: model.uri });\n      setHasErrors(markers.length > 0);\n    });\n  };\n\n  return (\n    <>\n      <Editor\n        height=\"100%\"\n        language=\"json\"\n        defaultValue={JSON.stringify(mockJson, null, 2)}\n        onMount={handleMount}\n        onChange={(val) => {\n          console.log(\"VAL: \", val);\n          if (!hasErrors && val) handleChange(val);\n          else {\n            console.error(\"Editor has error\");\n          }\n        }}\n        options={{\n          minimap: { enabled: false },\n          readOnly: false,\n          wordWrap: \"on\",\n          formatOnPaste: true,\n          formatOnType: true,\n          tabSize: 2,\n          scrollBeyondLastLine: false,\n        }}\n        {...props}\n      />\n      {hasErrors && <p style={{ color: \"red\" }}>Fix JSON errors before continuing.</p>}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;;AAMe,SAAS,WAAW,EAAE,YAAY,EAAE,GAAG,OAAwB;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoD;IAE3E,MAAM,cAAuB,CAAC,QAAQ;QACpC,UAAU,OAAO,GAAG;QAEpB,wDAAwD;QACxD,OAAO,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC;YACvD,UAAU;YACV,eAAe;YACf,SAAS,EAAE;QACb;QAEA,OAAO,MAAM,CAAC,kBAAkB,CAAC;YAC/B,MAAM,QAAQ,OAAO,QAAQ;YAC7B,IAAI,CAAC,OAAO;YACZ,MAAM,UAAU,OAAO,MAAM,CAAC,eAAe,CAAC;gBAAE,UAAU,MAAM,GAAG;YAAC;YACpE,aAAa,QAAQ,MAAM,GAAG;QAChC;IACF;IAEA,qBACE;;0BACE,8OAAC,6KAAA,CAAA,SAAM;gBACL,QAAO;gBACP,UAAS;gBACT,cAAc,KAAK,SAAS,CAAC,yGAAA,CAAA,UAAQ,EAAE,MAAM;gBAC7C,SAAS;gBACT,UAAU,CAAC;oBACT,QAAQ,GAAG,CAAC,SAAS;oBACrB,IAAI,CAAC,aAAa,KAAK,aAAa;yBAC/B;wBACH,QAAQ,KAAK,CAAC;oBAChB;gBACF;gBACA,SAAS;oBACP,SAAS;wBAAE,SAAS;oBAAM;oBAC1B,UAAU;oBACV,UAAU;oBACV,eAAe;oBACf,cAAc;oBACd,SAAS;oBACT,sBAAsB;gBACxB;gBACC,GAAG,KAAK;;;;;;YAEV,2BAAa,8OAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAG;;;;;;;;AAGhD","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/utils/extractNodes.ts"],"sourcesContent":["import { ParsedNode, ParsedEdge, NodeData } from \"@/types/node.types\";\n\nexport function extractNodes(\n  input: unknown,\n  parentPath = \"root\",\n  nodes: ParsedNode[] = [],\n  edges: ParsedEdge[] = []\n): { nodes: ParsedNode[]; edges: ParsedEdge[] } {\n  if (typeof input !== \"object\" || input === null) return { nodes, edges };\n\n  // current node we looping over\n  const currentNode: ParsedNode = {\n    id: parentPath,\n    label: parentPath.split(\".\").pop() || parentPath,\n    data: [],\n    breakouts: [],\n  };\n\n  const entries = Object.entries(input as Record<string, unknown>);\n\n  for (const [key, value] of entries) {\n    const fullPath = `${parentPath}.${key}`;\n\n    if (isPrimitive(value)) {\n      currentNode.data.push({\n        key,\n        value: String(value),\n        dataType: getDataType(value),\n        variations: [],\n      });\n    } else if (Array.isArray(value)) {\n      currentNode.breakouts?.push({ key, type: \"array\" });\n      edges.push({ id: `${parentPath}->${fullPath}`, from: parentPath, to: fullPath });\n\n      // Bryt ut arrayen som en egen nod (du kan justera djupare logik vid behov)\n      const {} = extractNodes({ array: value }, fullPath, nodes, edges);\n    } else if (typeof value === \"object\" && value !== null) {\n      currentNode.breakouts?.push({ key, type: \"object\" });\n      edges.push({ id: `${parentPath}->${fullPath}`, from: parentPath, to: fullPath });\n\n      extractNodes(value, fullPath, nodes, edges);\n    }\n  }\n\n  nodes.push(currentNode);\n  return { nodes, edges };\n}\n\nfunction isPrimitive(value: unknown): value is string | number | boolean | null {\n  return typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\" || value === null;\n}\n\nfunction getDataType(value: unknown): NodeData[\"dataType\"] {\n  if (typeof value === \"string\") return \"string\";\n  if (typeof value === \"number\") return \"number\";\n  if (typeof value === \"boolean\") return \"boolean\";\n  if (value === null) return \"null\";\n  if (Array.isArray(value)) return \"array\";\n  return \"object\";\n}\n"],"names":[],"mappings":";;;AAEO,SAAS,aACd,KAAc,EACd,aAAa,MAAM,EACnB,QAAsB,EAAE,EACxB,QAAsB,EAAE;IAExB,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM,OAAO;QAAE;QAAO;IAAM;IAEvE,+BAA+B;IAC/B,MAAM,cAA0B;QAC9B,IAAI;QACJ,OAAO,WAAW,KAAK,CAAC,KAAK,GAAG,MAAM;QACtC,MAAM,EAAE;QACR,WAAW,EAAE;IACf;IAEA,MAAM,UAAU,OAAO,OAAO,CAAC;IAE/B,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,QAAS;QAClC,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,KAAK;QAEvC,IAAI,YAAY,QAAQ;YACtB,YAAY,IAAI,CAAC,IAAI,CAAC;gBACpB;gBACA,OAAO,OAAO;gBACd,UAAU,YAAY;gBACtB,YAAY,EAAE;YAChB;QACF,OAAO,IAAI,MAAM,OAAO,CAAC,QAAQ;YAC/B,YAAY,SAAS,EAAE,KAAK;gBAAE;gBAAK,MAAM;YAAQ;YACjD,MAAM,IAAI,CAAC;gBAAE,IAAI,GAAG,WAAW,EAAE,EAAE,UAAU;gBAAE,MAAM;gBAAY,IAAI;YAAS;YAE9E,2EAA2E;YAC3E,MAAM,EAAE,GAAG,aAAa;gBAAE,OAAO;YAAM,GAAG,UAAU,OAAO;QAC7D,OAAO,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;YACtD,YAAY,SAAS,EAAE,KAAK;gBAAE;gBAAK,MAAM;YAAS;YAClD,MAAM,IAAI,CAAC;gBAAE,IAAI,GAAG,WAAW,EAAE,EAAE,UAAU;gBAAE,MAAM;gBAAY,IAAI;YAAS;YAE9E,aAAa,OAAO,UAAU,OAAO;QACvC;IACF;IAEA,MAAM,IAAI,CAAC;IACX,OAAO;QAAE;QAAO;IAAM;AACxB;AAEA,SAAS,YAAY,KAAc;IACjC,OAAO,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,OAAO,UAAU,aAAa,UAAU;AAC3G;AAEA,SAAS,YAAY,KAAc;IACjC,IAAI,OAAO,UAAU,UAAU,OAAO;IACtC,IAAI,OAAO,UAAU,UAAU,OAAO;IACtC,IAAI,OAAO,UAAU,WAAW,OAAO;IACvC,IAAI,UAAU,MAAM,OAAO;IAC3B,IAAI,MAAM,OAAO,CAAC,QAAQ,OAAO;IACjC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/validation/isJson.ts"],"sourcesContent":["export const isValidJson = (data: string) => {\n  try {\n    console.log(\"data: \", data);\n    JSON.parse(data);\n    return true;\n  } catch (err) {\n    console.error(\"‚ùå JSON.parse error:\", err);\n    console.error(\"‚õîÔ∏è Offending input:\", data);\n    return false;\n  }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,QAAQ,GAAG,CAAC,UAAU;QACtB,KAAK,KAAK,CAAC;QACX,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,uBAAuB;QACrC,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/hooks/useJsonGraph.tsx"],"sourcesContent":["import { ParsedEdge, ParsedNode } from \"@/types/node.types\";\nimport { extractNodes } from \"@/utils/extractNodes\";\nimport { isValidJson } from \"@/validation/isJson\";\nimport { useState } from \"react\";\n\nexport function useJsonGraph() {\n  const [input, setInput] = useState(\"\");\n  const [nodes, setNodes] = useState<ParsedNode[]>([]);\n  const [edges, setEdges] = useState<ParsedEdge[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  function handleChange(value: string) {\n    setInput(value);\n    try {\n      if (!isValidJson(value)) {\n        return console.error(\"üö® No valid JSON\");\n      }\n\n      const json = JSON.parse(value);\n      console.log(\"json :\", json);\n      const [userInputKey] = Object.keys(json).pop();\n\n      const result = extractNodes(json[userInputKey]);\n      console.log(\"result: \", result);\n      setNodes(result.nodes);\n      setEdges(result.edges);\n      setError(null);\n    } catch {\n      setNodes([]);\n      setEdges([]);\n      setError(\"Invalid JSON\");\n    }\n  }\n\n  return { input, nodes, edges, error, handleChange };\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,SAAS,aAAa,KAAa;QACjC,SAAS;QACT,IAAI;YACF,IAAI,CAAC,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD,EAAE,QAAQ;gBACvB,OAAO,QAAQ,KAAK,CAAC;YACvB;YAEA,MAAM,OAAO,KAAK,KAAK,CAAC;YACxB,QAAQ,GAAG,CAAC,UAAU;YACtB,MAAM,CAAC,aAAa,GAAG,OAAO,IAAI,CAAC,MAAM,GAAG;YAE5C,MAAM,SAAS,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD,EAAE,IAAI,CAAC,aAAa;YAC9C,QAAQ,GAAG,CAAC,YAAY;YACxB,SAAS,OAAO,KAAK;YACrB,SAAS,OAAO,KAAK;YACrB,SAAS;QACX,EAAE,OAAM;YACN,SAAS,EAAE;YACX,SAAS,EAAE;YACX,SAAS;QACX;IACF;IAEA,OAAO;QAAE;QAAO;QAAO;QAAO;QAAO;IAAa;AACpD","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/src/app/editor/page.tsx"],"sourcesContent":["// app/home/page.tsx\n\"use client\";\nimport styles from \"./editorStyle.module.css\";\nimport { Canvas } from \"reaflow\";\nimport JSONEditor from \"@/components/PrimativeValue/editors/JsonEditor\";\n\nimport { useJsonGraph } from \"@/hooks/useJsonGraph\";\nimport { useEffect } from \"react\";\n\nexport default function HomePage() {\n  const { nodes, handleChange } = useJsonGraph();\n\n  useEffect(() => {\n    console.log(\"nodes: \", nodes);\n  }, [nodes]);\n\n  return (\n    <div className={styles.editor}>\n      <JSONEditor handleChange={handleChange} />\n      <Canvas></Canvas>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAEpB;AACA;AACA;AAEA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,WAAW;IACzB,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC;QAAI,WAAW,+IAAA,CAAA,UAAM,CAAC,MAAM;;0BAC3B,8OAAC,6JAAA,CAAA,UAAU;gBAAC,cAAc;;;;;;0BAC1B,8OAAC,wIAAA,CAAA,SAAM;;;;;;;;;;;AAGb","debugId":null}}]
}