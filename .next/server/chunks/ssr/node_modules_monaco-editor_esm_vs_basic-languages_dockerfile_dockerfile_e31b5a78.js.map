{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/dockerfile/dockerfile.ts\nvar conf = {\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".dockerfile\",\n  variable: /\\${?[\\w]+}?/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      [/(ONBUILD)(\\s+)/, [\"keyword\", \"\"]],\n      [/(ENV)(\\s+)([\\w]+)/, [\"keyword\", \"\", { token: \"variable\", next: \"@arguments\" }]],\n      [\n        /(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/,\n        { token: \"keyword\", next: \"@arguments\" }\n      ]\n    ],\n    arguments: [\n      { include: \"@whitespace\" },\n      { include: \"@strings\" },\n      [\n        /(@variable)/,\n        {\n          cases: {\n            \"@eos\": { token: \"variable\", next: \"@popall\" },\n            \"@default\": \"variable\"\n          }\n        }\n      ],\n      [\n        /\\\\/,\n        {\n          cases: {\n            \"@eos\": \"\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [\n        /./,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@popall\" },\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    // Deal with white space, including comments\n    whitespace: [\n      [\n        /\\s+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@popall\" },\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    comment: [[/(^#.*$)/, \"comment\", \"@popall\"]],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [\n      [/\\\\'$/, \"\", \"@popall\"],\n      // \\' leaves @arguments at eol\n      [/\\\\'/, \"\"],\n      // \\' is not a string\n      [/'$/, \"string\", \"@popall\"],\n      [/'/, \"string\", \"@stringBody\"],\n      [/\"$/, \"string\", \"@popall\"],\n      [/\"/, \"string\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [\n        /[^\\\\\\$']/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/\\\\./, \"string.escape\"],\n      [/'$/, \"string\", \"@popall\"],\n      [/'/, \"string\", \"@pop\"],\n      [/(@variable)/, \"variable\"],\n      [/\\\\$/, \"string\"],\n      [/$/, \"string\", \"@popall\"]\n    ],\n    dblStringBody: [\n      [\n        /[^\\\\\\$\"]/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/\\\\./, \"string.escape\"],\n      [/\"$/, \"string\", \"@popall\"],\n      [/\"/, \"string\", \"@pop\"],\n      [/(@variable)/, \"variable\"],\n      [/\\\\$/, \"string\"],\n      [/$/, \"string\", \"@popall\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}