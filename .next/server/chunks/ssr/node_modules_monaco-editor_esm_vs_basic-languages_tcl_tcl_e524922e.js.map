{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/tcl/tcl.ts\nvar conf = {\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  tokenPostfix: \".tcl\",\n  specialFunctions: [\n    \"set\",\n    \"unset\",\n    \"rename\",\n    \"variable\",\n    \"proc\",\n    \"coroutine\",\n    \"foreach\",\n    \"incr\",\n    \"append\",\n    \"lappend\",\n    \"linsert\",\n    \"lreplace\"\n  ],\n  mainFunctions: [\n    \"if\",\n    \"then\",\n    \"elseif\",\n    \"else\",\n    \"case\",\n    \"switch\",\n    \"while\",\n    \"for\",\n    \"break\",\n    \"continue\",\n    \"return\",\n    \"package\",\n    \"namespace\",\n    \"catch\",\n    \"exit\",\n    \"eval\",\n    \"expr\",\n    \"uplevel\",\n    \"upvar\"\n  ],\n  builtinFunctions: [\n    \"file\",\n    \"info\",\n    \"concat\",\n    \"join\",\n    \"lindex\",\n    \"list\",\n    \"llength\",\n    \"lrange\",\n    \"lsearch\",\n    \"lsort\",\n    \"split\",\n    \"array\",\n    \"parray\",\n    \"binary\",\n    \"format\",\n    \"regexp\",\n    \"regsub\",\n    \"scan\",\n    \"string\",\n    \"subst\",\n    \"dict\",\n    \"cd\",\n    \"clock\",\n    \"exec\",\n    \"glob\",\n    \"pid\",\n    \"pwd\",\n    \"close\",\n    \"eof\",\n    \"fblocked\",\n    \"fconfigure\",\n    \"fcopy\",\n    \"fileevent\",\n    \"flush\",\n    \"gets\",\n    \"open\",\n    \"puts\",\n    \"read\",\n    \"seek\",\n    \"socket\",\n    \"tell\",\n    \"interp\",\n    \"after\",\n    \"auto_execok\",\n    \"auto_load\",\n    \"auto_mkindex\",\n    \"auto_reset\",\n    \"bgerror\",\n    \"error\",\n    \"global\",\n    \"history\",\n    \"load\",\n    \"source\",\n    \"time\",\n    \"trace\",\n    \"unknown\",\n    \"unset\",\n    \"update\",\n    \"vwait\",\n    \"winfo\",\n    \"wm\",\n    \"bind\",\n    \"event\",\n    \"pack\",\n    \"place\",\n    \"grid\",\n    \"font\",\n    \"bell\",\n    \"clipboard\",\n    \"destroy\",\n    \"focus\",\n    \"grab\",\n    \"lower\",\n    \"option\",\n    \"raise\",\n    \"selection\",\n    \"send\",\n    \"tk\",\n    \"tkwait\",\n    \"tk_bisque\",\n    \"tk_focusNext\",\n    \"tk_focusPrev\",\n    \"tk_focusFollowsMouse\",\n    \"tk_popup\",\n    \"tk_setPalette\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  brackets: [\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" }\n  ],\n  escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@specialFunctions\": {\n              token: \"keyword.flow\",\n              next: \"@specialFunc\"\n            },\n            \"@mainFunctions\": \"keyword\",\n            \"@builtinFunctions\": \"variable\",\n            \"@default\": \"operator.scss\"\n          }\n        }\n      ],\n      [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, \"metatag\"],\n      // whitespace\n      { include: \"@whitespace\" },\n      // delimiters and operators\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"operator\"],\n      [/\\$+(?:\\:\\:)?\\{/, { token: \"identifier\", next: \"@nestedVariable\" }],\n      [/@variables/, \"type.identifier\"],\n      [/\\.(?!\\d|\\.)[\\w\\-]*/, \"operator.sql\"],\n      // numbers\n      [/\\d+(\\.\\d+)?/, \"number\"],\n      [/\\d+/, \"number\"],\n      // delimiter\n      [/;/, \"delimiter\"],\n      // strings\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@dstring\" }],\n      [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }]\n    ],\n    dstring: [\n      [/\\[/, { token: \"@brackets\", next: \"@nestedCall\" }],\n      [/\\$+(?:\\:\\:)?\\{/, { token: \"identifier\", next: \"@nestedVariable\" }],\n      [/@variables/, \"type.identifier\"],\n      [/[^\\\\$\\[\\]\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    sstring: [\n      [/\\[/, { token: \"@brackets\", next: \"@nestedCall\" }],\n      [/\\$+(?:\\:\\:)?\\{/, { token: \"identifier\", next: \"@nestedVariable\" }],\n      [/@variables/, \"type.identifier\"],\n      [/[^\\\\$\\[\\]']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/#.*\\\\$/, { token: \"comment\", next: \"@newlineComment\" }],\n      [/#.*(?!\\\\)$/, \"comment\"]\n    ],\n    newlineComment: [\n      [/.*\\\\$/, \"comment\"],\n      [/.*(?!\\\\)$/, { token: \"comment\", next: \"@pop\" }]\n    ],\n    nestedVariable: [\n      [/[^\\{\\}\\$]+/, \"type.identifier\"],\n      [/\\}/, { token: \"identifier\", next: \"@pop\" }]\n    ],\n    nestedCall: [\n      [/\\[/, { token: \"@brackets\", next: \"@nestedCall\" }],\n      [/\\]/, { token: \"@brackets\", next: \"@pop\" }],\n      { include: \"root\" }\n    ],\n    specialFunc: [\n      [/\"/, { token: \"string\", next: \"@dstring\" }],\n      [/'/, { token: \"string\", next: \"@sstring\" }],\n      [/\\S+/, { token: \"type\", next: \"@pop\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"AAAA;;;;;+EAK+E,GAG/E,iCAAiC;;;;;AACjC,IAAI,OAAO;IACT,UAAU;QACR;YAAC;YAAK;SAAI;QACV;YAAC;YAAK;SAAI;QACV;YAAC;YAAK;SAAI;KACX;IACD,kBAAkB;QAChB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;KACzB;IACD,kBAAkB;QAChB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;QACxB;YAAE,MAAM;YAAK,OAAO;QAAI;KACzB;AACH;AACA,IAAI,WAAW;IACb,cAAc;IACd,kBAAkB;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,eAAe;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,kBAAkB;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,SAAS;IACT,UAAU;QACR;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;QAAwB;QACxD;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;QAAkB;QAClD;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;QAAmB;KACpD;IACD,SAAS;IACT,WAAW;IACX,WAAW;QACT,MAAM;YACJ,2BAA2B;YAC3B;gBACE;gBACA;oBACE,OAAO;wBACL,qBAAqB;4BACnB,OAAO;4BACP,MAAM;wBACR;wBACA,kBAAkB;wBAClB,qBAAqB;wBACrB,YAAY;oBACd;gBACF;aACD;YACD;gBAAC;gBAA2B;aAAU;YACtC,aAAa;YACb;gBAAE,SAAS;YAAc;YACzB,2BAA2B;YAC3B;gBAAC;gBAAc;aAAY;YAC3B;gBAAC;gBAAY;aAAW;YACxB;gBAAC;gBAAkB;oBAAE,OAAO;oBAAc,MAAM;gBAAkB;aAAE;YACpE;gBAAC;gBAAc;aAAkB;YACjC;gBAAC;gBAAsB;aAAe;YACtC,UAAU;YACV;gBAAC;gBAAe;aAAS;YACzB;gBAAC;gBAAO;aAAS;YACjB,YAAY;YACZ;gBAAC;gBAAK;aAAY;YAClB,UAAU;YACV;gBAAC;gBAAK;oBAAE,OAAO;oBAAgB,SAAS;oBAAS,MAAM;gBAAW;aAAE;YACpE;gBAAC;gBAAK;oBAAE,OAAO;oBAAgB,SAAS;oBAAS,MAAM;gBAAW;aAAE;SACrE;QACD,SAAS;YACP;gBAAC;gBAAM;oBAAE,OAAO;oBAAa,MAAM;gBAAc;aAAE;YACnD;gBAAC;gBAAkB;oBAAE,OAAO;oBAAc,MAAM;gBAAkB;aAAE;YACpE;gBAAC;gBAAc;aAAkB;YACjC;gBAAC;gBAAgB;aAAS;YAC1B;gBAAC;gBAAY;aAAgB;YAC7B;gBAAC;gBAAK;oBAAE,OAAO;oBAAgB,SAAS;oBAAU,MAAM;gBAAO;aAAE;SAClE;QACD,SAAS;YACP;gBAAC;gBAAM;oBAAE,OAAO;oBAAa,MAAM;gBAAc;aAAE;YACnD;gBAAC;gBAAkB;oBAAE,OAAO;oBAAc,MAAM;gBAAkB;aAAE;YACpE;gBAAC;gBAAc;aAAkB;YACjC;gBAAC;gBAAgB;aAAS;YAC1B;gBAAC;gBAAY;aAAgB;YAC7B;gBAAC;gBAAK;oBAAE,OAAO;oBAAgB,SAAS;oBAAU,MAAM;gBAAO;aAAE;SAClE;QACD,YAAY;YACV;gBAAC;gBAAc;aAAQ;YACvB;gBAAC;gBAAU;oBAAE,OAAO;oBAAW,MAAM;gBAAkB;aAAE;YACzD;gBAAC;gBAAc;aAAU;SAC1B;QACD,gBAAgB;YACd;gBAAC;gBAAS;aAAU;YACpB;gBAAC;gBAAa;oBAAE,OAAO;oBAAW,MAAM;gBAAO;aAAE;SAClD;QACD,gBAAgB;YACd;gBAAC;gBAAc;aAAkB;YACjC;gBAAC;gBAAM;oBAAE,OAAO;oBAAc,MAAM;gBAAO;aAAE;SAC9C;QACD,YAAY;YACV;gBAAC;gBAAM;oBAAE,OAAO;oBAAa,MAAM;gBAAc;aAAE;YACnD;gBAAC;gBAAM;oBAAE,OAAO;oBAAa,MAAM;gBAAO;aAAE;YAC5C;gBAAE,SAAS;YAAO;SACnB;QACD,aAAa;YACX;gBAAC;gBAAK;oBAAE,OAAO;oBAAU,MAAM;gBAAW;aAAE;YAC5C;gBAAC;gBAAK;oBAAE,OAAO;oBAAU,MAAM;gBAAW;aAAE;YAC5C;gBAAC;gBAAO;oBAAE,OAAO;oBAAQ,MAAM;gBAAO;aAAE;SACzC;IACH;AACF","ignoreList":[0],"debugId":null}}]
}