{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nexport class RangeUtil {\n    static _createRange() {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    }\n    static _detachRange(range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    }\n    static _readClientRects(startElement, startOffset, endElement, endOffset, endNode) {\n        const range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    }\n    static _mergeAdjacentRanges(ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return ranges;\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        const result = [];\n        let resultLen = 0;\n        let prev = ranges[0];\n        for (let i = 1, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            if (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n                prev.width = Math.max(prev.width, range.left + range.width - prev.left);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = range;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft, clientRectScale) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        const result = [];\n        for (let i = 0, len = clientRects.length; i < len; i++) {\n            const clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n        }\n        return this._mergeAdjacentRanges(result);\n    }\n    static readHorizontalRanges(domNode, startChildIndex, startOffset, endChildIndex, endOffset, context) {\n        // Panic check\n        const min = 0;\n        const max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        if (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n            // We must find the position at the beginning of a <span>\n            // To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n            const clientRects = domNode.children[startChildIndex].getClientRects();\n            context.markDidDomLayout();\n            return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n        }\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        let startElement = domNode.children[startChildIndex].firstChild;\n        let endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        const clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n        context.markDidDomLayout();\n        return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n        }\n        else {\n            // whitespace is rendered in a different layer\n            this.renderWhitespace = 'none';\n        }\n        this.renderControlCharacters = options.get(95 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(33 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(118 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(51 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    static { this.CLASS_NAME = 'view-line'; }\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType)) {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    if (this._options.renderWhitespace === 'selection') {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(lineHeight));\n        sb.appendString('px;\" class=\"');\n        sb.appendString(ViewLine.CLASS_NAME);\n        sb.appendString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop, lineHeight) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth(context) {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth(context);\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            return new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(false, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n    }\n}\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this._cachedWidth = -1;\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        const keyColumnCount = Math.floor(renderLineInput.lineContent.length / 300 /* Constants.MaxMonospaceDistance */);\n        if (keyColumnCount > 0) {\n            this._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n            for (let i = 0; i < keyColumnCount; i++) {\n                this._keyColumnPixelOffsetCache[i] = -1;\n            }\n        }\n        else {\n            this._keyColumnPixelOffsetCache = null;\n        }\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth(context) {\n        if (!this.domNode || this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n            return Math.round(this._charWidth * horizontalOffset);\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context?.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        return (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) || this._cachedWidth !== -1;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const expectedWidth = this.getWidth(null);\n            const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n            if (Math.abs(expectedWidth - actualWidth) >= 2) {\n                // more than 2px off\n                console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n                monospaceAssumptionsAreValid = false;\n            }\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n        const endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getColumnPixelOffset(lineNumber, column, context) {\n        if (column <= 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnOrdinal = Math.floor((column - 1) / 300 /* Constants.MaxMonospaceDistance */) - 1;\n        const keyColumn = (keyColumnOrdinal + 1) * 300 /* Constants.MaxMonospaceDistance */ + 1;\n        let keyColumnPixelOffset = -1;\n        if (this._keyColumnPixelOffsetCache) {\n            keyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n            if (keyColumnPixelOffset === -1) {\n                keyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n                this._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n            }\n        }\n        if (keyColumnPixelOffset === -1) {\n            // Could not read actual key column pixel offset\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n    }\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    _actualReadPixelOffset(lineNumber, column, context) {\n        if (!this.domNode) {\n            return -1;\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        return r[0].left;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth(context) {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context?.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth(context);\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                context.markDidDomLayout();\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth(context);\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth(context))];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nexport function getColumnOfNodeOffset(characterMapping, spanNode, offset) {\n    const spanNodeTextContentLength = spanNode.textContent.length;\n    let spanIndex = -1;\n    while (spanNode) {\n        spanNode = spanNode.previousSibling;\n        spanIndex++;\n    }\n    return characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA,MAAM,6BAA6B,AAAC;IAChC,IAAI,2KAAA,CAAA,WAAiB,EAAE;QACnB,0DAA0D;QAC1D,OAAO;IACX;IACA,IAAI,2KAAA,CAAA,UAAgB,IAAI,2KAAA,CAAA,YAAiB,IAAI,2KAAA,CAAA,WAAgB,EAAE;QAC3D,0FAA0F;QAC1F,KAAK;QACL,4FAA4F;QAC5F,6DAA6D;QAC7D,KAAK;QACL,uFAAuF;QACvF,6DAA6D;QAC7D,KAAK;QACL,sDAAsD;QACtD,KAAK;QACL,yCAAyC;QACzC,OAAO;IACX;IACA,OAAO;AACX;AACA,IAAI,+BAA+B;AAC5B,MAAM;IACT,YAAY,MAAM,EAAE,SAAS,CAAE;QAC3B,IAAI,CAAC,SAAS,GAAG;QACjB,MAAM,UAAU,OAAO,OAAO;QAC9B,MAAM,WAAW,QAAQ,GAAG,CAAC,GAAG,yBAAyB;QACzD,MAAM,kCAAkC,QAAQ,GAAG,CAAC,GAAG,gDAAgD;QACvG,IAAI,oCAAoC,OAAO;YAC3C,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAG,CAAC,IAAI,iCAAiC;QAC7E,OACK;YACD,8CAA8C;YAC9C,IAAI,CAAC,gBAAgB,GAAG;QAC5B;QACA,IAAI,CAAC,uBAAuB,GAAG,QAAQ,GAAG,CAAC,GAAG,wCAAwC;QACtF,IAAI,CAAC,UAAU,GAAG,SAAS,UAAU;QACrC,IAAI,CAAC,WAAW,GAAG,SAAS,WAAW;QACvC,IAAI,CAAC,aAAa,GAAG,SAAS,aAAa;QAC3C,IAAI,CAAC,yBAAyB,GAAI,SAAS,WAAW,IAC/C,CAAC,QAAQ,GAAG,CAAC,GAAG,8CAA8C;QACrE,IAAI,CAAC,8BAA8B,GAAG,SAAS,8BAA8B;QAC7E,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,CAAC,GAAG,2BAA2B;QAC5D,IAAI,CAAC,sBAAsB,GAAG,QAAQ,GAAG,CAAC,IAAI,uCAAuC;QACrF,IAAI,CAAC,aAAa,GAAG,QAAQ,GAAG,CAAC,GAAG,8BAA8B;IACtE;IACA,OAAO,KAAK,EAAE;QACV,OAAQ,IAAI,CAAC,SAAS,KAAK,MAAM,SAAS,IACnC,IAAI,CAAC,gBAAgB,KAAK,MAAM,gBAAgB,IAChD,IAAI,CAAC,uBAAuB,KAAK,MAAM,uBAAuB,IAC9D,IAAI,CAAC,UAAU,KAAK,MAAM,UAAU,IACpC,IAAI,CAAC,WAAW,KAAK,MAAM,WAAW,IACtC,IAAI,CAAC,aAAa,KAAK,MAAM,aAAa,IAC1C,IAAI,CAAC,yBAAyB,KAAK,MAAM,yBAAyB,IAClE,IAAI,CAAC,8BAA8B,KAAK,MAAM,8BAA8B,IAC5E,IAAI,CAAC,UAAU,KAAK,MAAM,UAAU,IACpC,IAAI,CAAC,sBAAsB,KAAK,MAAM,sBAAsB,IAC5D,IAAI,CAAC,aAAa,KAAK,MAAM,aAAa;IACrD;AACJ;AACO,MAAM;IACT,MAAO;QAAE,IAAI,CAAC,UAAU,GAAG;IAAa,CAAC;IACzC,YAAY,OAAO,CAAE;QACjB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,iBAAiB,GAAG;IAC7B;IACA,6BAA6B;IAC7B,aAAa;QACT,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;YAC1D,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO;QACjD;QACA,OAAO;IACX;IACA,WAAW,OAAO,EAAE;QAChB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE;QACvD,OACK;YACD,MAAM,IAAI,MAAM;QACpB;IACJ;IACA,mBAAmB;QACf,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,kBAAkB;QACd,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,uBAAuB;QACnB,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,iBAAiB,UAAU,EAAE;QACzB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA,qBAAqB;QACjB,IAAI,CAAA,GAAA,qLAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC,gBAAgB,KAAK,aAAa;YAC3F,IAAI,CAAC,eAAe,GAAG;YACvB,OAAO;QACX;QACA,OAAO;IACX;IACA,WAAW,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,EAAE,EAAE;QAC3D,IAAI,IAAI,CAAC,eAAe,KAAK,OAAO;YAChC,+CAA+C;YAC/C,OAAO;QACX;QACA,IAAI,CAAC,eAAe,GAAG;QACvB,MAAM,WAAW,aAAa,wBAAwB,CAAC;QACvD,MAAM,UAAU,IAAI,CAAC,QAAQ;QAC7B,MAAM,0BAA0B,kMAAA,CAAA,iBAAc,CAAC,MAAM,CAAC,SAAS,iBAAiB,EAAE,YAAY,SAAS,SAAS,EAAE,SAAS,SAAS;QACpI,uEAAuE;QACvE,IAAI,mBAAmB;QACvB,IAAI,CAAA,GAAA,qLAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC,gBAAgB,KAAK,aAAa;YACrF,MAAM,aAAa,aAAa,UAAU;YAC1C,KAAK,MAAM,aAAa,WAAY;gBAChC,IAAI,UAAU,aAAa,GAAG,cAAc,UAAU,eAAe,GAAG,YAAY;oBAEhF;gBACJ;gBACA,MAAM,cAAe,UAAU,eAAe,KAAK,aAAa,UAAU,WAAW,GAAG,SAAS,SAAS;gBAC1G,MAAM,YAAa,UAAU,aAAa,KAAK,aAAa,UAAU,SAAS,GAAG,SAAS,SAAS;gBACpG,IAAI,cAAc,WAAW;oBACzB,IAAI,CAAA,GAAA,qLAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,SAAS,GAAG;wBACnC,wBAAwB,IAAI,CAAC,IAAI,kMAAA,CAAA,iBAAc,CAAC,aAAa,WAAW,wBAAwB,EAAE,gCAAgC;oBACtI;oBACA,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,KAAK,aAAa;wBAChD,IAAI,CAAC,kBAAkB;4BACnB,mBAAmB,EAAE;wBACzB;wBACA,iBAAiB,IAAI,CAAC,IAAI,mMAAA,CAAA,YAAS,CAAC,cAAc,GAAG,YAAY;oBACrE;gBACJ;YACJ;QACJ;QACA,MAAM,kBAAkB,IAAI,mMAAA,CAAA,kBAAe,CAAC,QAAQ,yBAAyB,EAAE,QAAQ,8BAA8B,EAAE,SAAS,OAAO,EAAE,SAAS,wBAAwB,EAAE,SAAS,YAAY,EAAE,SAAS,WAAW,EAAE,SAAS,SAAS,GAAG,GAAG,SAAS,MAAM,EAAE,yBAAyB,SAAS,OAAO,EAAE,SAAS,kBAAkB,EAAE,QAAQ,UAAU,EAAE,QAAQ,WAAW,EAAE,QAAQ,aAAa,EAAE,QAAQ,sBAAsB,EAAE,QAAQ,gBAAgB,EAAE,QAAQ,uBAAuB,EAAE,QAAQ,aAAa,KAAK,4LAAA,CAAA,sBAAmB,CAAC,GAAG,EAAE;QACxhB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB;YAChF,wDAAwD;YACxD,OAAO;QACX;QACA,GAAG,YAAY,CAAC;QAChB,GAAG,YAAY,CAAC,OAAO;QACvB,GAAG,YAAY,CAAC;QAChB,GAAG,YAAY,CAAC,OAAO;QACvB,GAAG,YAAY,CAAC;QAChB,GAAG,YAAY,CAAC,SAAS,UAAU;QACnC,GAAG,YAAY,CAAC;QAChB,MAAM,SAAS,CAAA,GAAA,mMAAA,CAAA,iBAAc,AAAD,EAAE,iBAAiB;QAC/C,GAAG,YAAY,CAAC;QAChB,IAAI,mBAAmB;QACvB,IAAI,gCAAgC,8BAA8B,SAAS,YAAY,IAAI,QAAQ,yBAAyB,IAAI,OAAO,uBAAuB,KAAK,EAAE,2BAA2B,KAAI;YAChM,mBAAmB,IAAI,qBAAqB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,MAAM,iBAAiB,OAAO,gBAAgB;QACxJ;QACA,IAAI,CAAC,kBAAkB;YACnB,mBAAmB,mBAAmB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,MAAM,iBAAiB,OAAO,gBAAgB,EAAE,OAAO,WAAW,EAAE,OAAO,uBAAuB;QACtM;QACA,IAAI,CAAC,iBAAiB,GAAG;QACzB,OAAO;IACX;IACA,WAAW,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE;QACzC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;YAC1D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC;QAC7C;IACJ;IACA,2BAA2B;IAC3B,SAAS,OAAO,EAAE;QACd,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO;QACX;QACA,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;IAC3C;IACA,iBAAiB;QACb,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO;QACX;QACA,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc;IAChD;IACA,0BAA0B;QACtB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO;QACX;QACA,OAAQ,IAAI,CAAC,iBAAiB,YAAY;IAC9C;IACA,+BAA+B;QAC3B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO;QACX;QACA,IAAI,IAAI,CAAC,iBAAiB,YAAY,sBAAsB;YACxD,OAAO,IAAI,CAAC,iBAAiB,CAAC,4BAA4B;QAC9D;QACA,OAAO;IACX;IACA,oCAAoC;QAChC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,YAAY,sBAAsB;YAClF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB;QACtE;IACJ;IACA,yBAAyB,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE;QAClE,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO;QACX;QACA,cAAc,KAAK,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG;QACxF,YAAY,KAAK,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG;QACtF,MAAM,yBAAyB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,sBAAsB;QAClF,IAAI,2BAA2B,CAAC,KAAK,cAAc,yBAAyB,KAAK,YAAY,yBAAyB,GAAG;YACrH,sCAAsC;YACtC,OAAO,IAAI,8LAAA,CAAA,gBAAa,CAAC,MAAM;gBAAC,IAAI,8LAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU;aAAG;QACxF;QACA,IAAI,2BAA2B,CAAC,KAAK,cAAc,yBAAyB,GAAG;YAC3E,cAAc,yBAAyB;QAC3C;QACA,IAAI,2BAA2B,CAAC,KAAK,YAAY,yBAAyB,GAAG;YACzE,YAAY,yBAAyB;QACzC;QACA,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,YAAY,aAAa,WAAW;QAC7G,IAAI,oBAAoB,iBAAiB,MAAM,GAAG,GAAG;YACjD,OAAO,IAAI,8LAAA,CAAA,gBAAa,CAAC,OAAO;QACpC;QACA,OAAO;IACX;IACA,sBAAsB,QAAQ,EAAE,MAAM,EAAE;QACpC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO;QACX;QACA,OAAO,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,UAAU;IAClE;AACJ;AACA;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,EAAE,eAAe,EAAE,gBAAgB,CAAE;QACpD,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG;QACb,MAAM,iBAAiB,KAAK,KAAK,CAAC,gBAAgB,WAAW,CAAC,MAAM,GAAG,IAAI,kCAAkC;QAC7G,IAAI,iBAAiB,GAAG;YACpB,IAAI,CAAC,0BAA0B,GAAG,IAAI,aAAa;YACnD,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;gBACrC,IAAI,CAAC,0BAA0B,CAAC,EAAE,GAAG,CAAC;YAC1C;QACJ,OACK;YACD,IAAI,CAAC,0BAA0B,GAAG;QACtC;QACA,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,UAAU,GAAG,gBAAgB,UAAU;IAChD;IACA,SAAS,OAAO,EAAE;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,kCAAkC,KAAI;YAC3F,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM;YACjG,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG;QACxC;QACA,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,GAAG;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW;YACpE,SAAS;QACb;QACA,OAAO,IAAI,CAAC,YAAY;IAC5B;IACA,iBAAiB;QACb,OAAO,AAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,kCAAkC,OAAO,IAAI,CAAC,YAAY,KAAK,CAAC;IAChH;IACA,+BAA+B;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;QACX;QACA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,kCAAkC,KAAI;YAC1E,MAAM,gBAAgB,IAAI,CAAC,QAAQ,CAAC;YACpC,MAAM,cAAc,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW;YAC/D,IAAI,KAAK,GAAG,CAAC,gBAAgB,gBAAgB,GAAG;gBAC5C,oBAAoB;gBACpB,QAAQ,IAAI,CAAC,CAAC,sFAAsF,CAAC;gBACrG,+BAA+B;YACnC;QACJ;QACA,OAAO;IACX;IACA,qBAAqB;QACjB,OAAO,mBAAmB,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,2BAA2B;IACpH;IACA,yBAAyB,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE;QAClE,MAAM,gBAAgB,IAAI,CAAC,qBAAqB,CAAC,YAAY,aAAa;QAC1E,MAAM,cAAc,IAAI,CAAC,qBAAqB,CAAC,YAAY,WAAW;QACtE,OAAO;YAAC,IAAI,8LAAA,CAAA,uBAAoB,CAAC,eAAe,cAAc;SAAe;IACjF;IACA,sBAAsB,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE;QAC/C,IAAI,UAAU,IAAI,kCAAkC,KAAI;YACpD,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YACpE,OAAO,IAAI,CAAC,UAAU,GAAG;QAC7B;QACA,MAAM,mBAAmB,KAAK,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,kCAAkC,OAAM;QAC/F,MAAM,YAAY,CAAC,mBAAmB,CAAC,IAAI,IAAI,kCAAkC,MAAK;QACtF,IAAI,uBAAuB,CAAC;QAC5B,IAAI,IAAI,CAAC,0BAA0B,EAAE;YACjC,uBAAuB,IAAI,CAAC,0BAA0B,CAAC,iBAAiB;YACxE,IAAI,yBAAyB,CAAC,GAAG;gBAC7B,uBAAuB,IAAI,CAAC,sBAAsB,CAAC,YAAY,WAAW;gBAC1E,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,GAAG;YACxD;QACJ;QACA,IAAI,yBAAyB,CAAC,GAAG;YAC7B,gDAAgD;YAChD,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YACpE,OAAO,IAAI,CAAC,UAAU,GAAG;QAC7B;QACA,MAAM,4BAA4B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;QAC7E,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;QACpE,OAAO,uBAAuB,IAAI,CAAC,UAAU,GAAG,CAAC,mBAAmB,yBAAyB;IACjG;IACA,kBAAkB,SAAS,EAAE;QACzB,OAAO,UAAU,OAAO,CAAC,UAAU;IACvC;IACA,uBAAuB,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE;QAChD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO,CAAC;QACZ;QACA,MAAM,cAAc,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC1D,MAAM,IAAI,qMAAA,CAAA,YAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,SAAS,EAAE,YAAY,SAAS,EAAE,YAAY,SAAS,EAAE,YAAY,SAAS,EAAE;QAC3K,IAAI,CAAC,KAAK,EAAE,MAAM,KAAK,GAAG;YACtB,OAAO,CAAC;QACZ;QACA,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI;IACpB;IACA,sBAAsB,QAAQ,EAAE,MAAM,EAAE;QACpC,OAAO,sBAAsB,IAAI,CAAC,iBAAiB,EAAE,UAAU;IACnE;AACJ;AACA;;CAEC,GACD,MAAM;IACF,YAAY,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,WAAW,EAAE,uBAAuB,CAAE;QAC1F,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,IAAI,CAAC,gBAAgB,WAAW;QACjE,IAAI,CAAC,wBAAwB,GAAG;QAChC,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,eAAe,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,EAAE,qBAAqB,KAAI;YAC7E,IAAI,CAAC,iBAAiB,GAAG,IAAI,aAAa,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG;YACtF,IAAK,IAAI,SAAS,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,UAAU,KAAK,SAAU;gBAC/E,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,CAAC;YACtC;QACJ;IACJ;IACA,mCAAmC;IACnC,kBAAkB,SAAS,EAAE;QACzB,OAAO,UAAU,OAAO,CAAC,UAAU;IACvC;IACA;;KAEC,GACD,SAAS,OAAO,EAAE;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;QACX;QACA,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,GAAG;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW;YACpE,SAAS;QACb;QACA,OAAO,IAAI,CAAC,YAAY;IAC5B;IACA,iBAAiB;QACb,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,GAAG;YAC1B,OAAO;QACX;QACA,OAAO;IACX;IACA;;KAEC,GACD,yBAAyB,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE;QAClE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;QACX;QACA,IAAI,IAAI,CAAC,iBAAiB,KAAK,MAAM;YACjC,kBAAkB;YAClB,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,aAAa;YACjF,IAAI,gBAAgB,CAAC,GAAG;gBACpB,OAAO;YACX;YACA,MAAM,YAAY,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,WAAW;YAC7E,IAAI,cAAc,CAAC,GAAG;gBAClB,OAAO;YACX;YACA,OAAO;gBAAC,IAAI,8LAAA,CAAA,uBAAoB,CAAC,aAAa,YAAY;aAAa;QAC3E;QACA,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,aAAa,WAAW;IAC7F;IACA,2BAA2B,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE;QAC7E,IAAI,gBAAgB,WAAW;YAC3B,MAAM,cAAc,IAAI,CAAC,gBAAgB,CAAC,SAAS,YAAY,aAAa;YAC5E,IAAI,gBAAgB,CAAC,GAAG;gBACpB,OAAO;YACX,OACK;gBACD,OAAO;oBAAC,IAAI,8LAAA,CAAA,uBAAoB,CAAC,aAAa;iBAAG;YACrD;QACJ,OACK;YACD,OAAO,IAAI,CAAC,6BAA6B,CAAC,SAAS,aAAa,WAAW;QAC/E;IACJ;IACA,iBAAiB,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE;QACnD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,GAAG;YACrC,2BAA2B;YAC3B,IAAI,IAAI,CAAC,wBAAwB,KAAK,EAAE,2BAA2B,KAAI;gBACnE,yCAAyC;gBACzC,OAAO;YACX;YACA,IAAI,IAAI,CAAC,wBAAwB,KAAK,EAAE,4BAA4B,KAAI;gBACpE,kDAAkD;gBAClD,OAAO;YACX;YACA,IAAI,IAAI,CAAC,wBAAwB,KAAK,EAAE,6BAA6B,KAAI;gBACrE,mDAAmD;gBACnD,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB;YACA,2DAA2D;YAC3D,MAAM,gBAAgB,IAAI,CAAC,iBAAiB,CAAC;YAC7C,IAAI,cAAc,UAAU,EAAE;gBAC1B,QAAQ,gBAAgB;gBACxB,OAAO,cAAc,UAAU,CAAC,WAAW;YAC/C,OACK;gBACD,OAAO;YACX;QACJ;QACA,IAAI,IAAI,CAAC,iBAAiB,KAAK,MAAM;YACjC,kBAAkB;YAClB,MAAM,oBAAoB,IAAI,CAAC,iBAAiB,CAAC,OAAO;YACxD,IAAI,sBAAsB,CAAC,GAAG;gBAC1B,OAAO;YACX;YACA,MAAM,SAAS,IAAI,CAAC,sBAAsB,CAAC,SAAS,YAAY,QAAQ;YACxE,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG;YACjC,OAAO;QACX;QACA,OAAO,IAAI,CAAC,sBAAsB,CAAC,SAAS,YAAY,QAAQ;IACpE;IACA,uBAAuB,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE;QACzD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,GAAG;YACrC,2BAA2B;YAC3B,MAAM,IAAI,qMAAA,CAAA,YAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,GAAG,GAAG,GAAG;YACtF,IAAI,CAAC,KAAK,EAAE,MAAM,KAAK,GAAG;gBACtB,OAAO,CAAC;YACZ;YACA,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI;QACpB;QACA,IAAI,WAAW,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,wBAAwB,KAAK,EAAE,2BAA2B,KAAI;YACzI,gFAAgF;YAChF,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB;QACA,MAAM,cAAc,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC1D,MAAM,IAAI,qMAAA,CAAA,YAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,YAAY,SAAS,EAAE,YAAY,SAAS,EAAE,YAAY,SAAS,EAAE,YAAY,SAAS,EAAE;QACtK,IAAI,CAAC,KAAK,EAAE,MAAM,KAAK,GAAG;YACtB,OAAO,CAAC;QACZ;QACA,MAAM,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI;QACxB,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YACzB,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YACpE,MAAM,iBAAiB,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;YAC1D,IAAI,KAAK,GAAG,CAAC,iBAAiB,WAAW,GAAG;gBACxC,OAAO;YACX;QACJ;QACA,OAAO;IACX;IACA,8BAA8B,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE;QACpE,IAAI,gBAAgB,KAAK,cAAc,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAClE,mIAAmI;YACnI,OAAO;gBAAC,IAAI,8LAAA,CAAA,uBAAoB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;aAAU;QAChE;QACA,MAAM,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC/D,MAAM,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC7D,OAAO,qMAAA,CAAA,YAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,iBAAiB,SAAS,EAAE,iBAAiB,SAAS,EAAE,eAAe,SAAS,EAAE,eAAe,SAAS,EAAE;IACvL;IACA;;KAEC,GACD,sBAAsB,QAAQ,EAAE,MAAM,EAAE;QACpC,OAAO,sBAAsB,IAAI,CAAC,iBAAiB,EAAE,UAAU;IACnE;AACJ;AACA,MAAM,+BAA+B;IACjC,2BAA2B,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE;QAC7E,MAAM,SAAS,KAAK,CAAC,2BAA2B,SAAS,YAAY,aAAa,WAAW;QAC7F,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,KAAK,gBAAgB,aAAc,gBAAgB,KAAK,cAAc,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAG;YACnI,OAAO;QACX;QACA,iFAAiF;QACjF,6CAA6C;QAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YACzB,wCAAwC;YACxC,+BAA+B;YAC/B,MAAM,iBAAiB,IAAI,CAAC,gBAAgB,CAAC,SAAS,YAAY,WAAW;YAC7E,IAAI,mBAAmB,CAAC,GAAG;gBACvB,MAAM,YAAY,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;gBAC3C,IAAI,UAAU,IAAI,GAAG,gBAAgB;oBACjC,2FAA2F;oBAC3F,UAAU,KAAK,GAAG,iBAAiB,UAAU,IAAI;gBACrD;YACJ;QACJ;QACA,OAAO;IACX;AACJ;AACA,MAAM,qBAAqB,AAAC;IACxB,IAAI,2KAAA,CAAA,WAAgB,EAAE;QAClB,OAAO;IACX;IACA,OAAO;AACX;AACA,SAAS,yBAAyB,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,WAAW,EAAE,uBAAuB;IAC9G,OAAO,IAAI,uBAAuB,SAAS,iBAAiB,kBAAkB,aAAa;AAC/F;AACA,SAAS,yBAAyB,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,WAAW,EAAE,uBAAuB;IAC9G,OAAO,IAAI,iBAAiB,SAAS,iBAAiB,kBAAkB,aAAa;AACzF;AACO,SAAS,sBAAsB,gBAAgB,EAAE,QAAQ,EAAE,MAAM;IACpE,MAAM,4BAA4B,SAAS,WAAW,CAAC,MAAM;IAC7D,IAAI,YAAY,CAAC;IACjB,MAAO,SAAU;QACb,WAAW,SAAS,eAAe;QACnC;IACJ;IACA,OAAO,iBAAiB,SAAS,CAAC,IAAI,mMAAA,CAAA,cAAW,CAAC,WAAW,SAAS;AAC1E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n    static { this.CLASS_NAME = 'line-numbers'; }\n    constructor(context) {\n        super();\n        this._context = context;\n        this._readConfig();\n        this._lastCursorModelPosition = new Position(1, 1);\n        this._renderResult = null;\n        this._activeLineNumber = 1;\n        this._context.addEventHandler(this);\n    }\n    _readConfig() {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        const lineNumbers = options.get(68 /* EditorOption.lineNumbers */);\n        this._renderLineNumbers = lineNumbers.renderType;\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\n        this._renderFinalNewline = options.get(96 /* EditorOption.renderFinalNewline */);\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        this._readConfig();\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const primaryViewPosition = e.selections[0].getPosition();\n        this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n        let shouldRender = false;\n        if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n            this._activeLineNumber = primaryViewPosition.lineNumber;\n            shouldRender = true;\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return e.affectsLineNumber;\n    }\n    // --- end event handlers\n    _getLineRenderLineNumber(viewLineNumber) {\n        const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n        if (modelPosition.column !== 1) {\n            return '';\n        }\n        const modelLineNumber = modelPosition.lineNumber;\n        if (this._renderCustomLineNumbers) {\n            return this._renderCustomLineNumbers(modelLineNumber);\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n            if (diff === 0) {\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n            }\n            return String(diff);\n        }\n        if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n                return String(modelLineNumber);\n            }\n            if (modelLineNumber % 10 === 0) {\n                return String(modelLineNumber);\n            }\n            const finalLineNumber = this._context.viewModel.getLineCount();\n            if (modelLineNumber === finalLineNumber) {\n                return String(modelLineNumber);\n            }\n            return '';\n        }\n        return String(modelLineNumber);\n    }\n    prepareRender(ctx) {\n        if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n            this._renderResult = null;\n            return;\n        }\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n        lineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n        let decorationStartIndex = 0;\n        const lineCount = this._context.viewModel.getLineCount();\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            let renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n            let extraClassNames = '';\n            // skip decorations whose end positions we've already passed\n            while (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n                decorationStartIndex++;\n            }\n            for (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n                const { range, options } = lineNoDecorations[i];\n                if (range.startLineNumber <= lineNumber) {\n                    extraClassNames += ' ' + options.lineNumberClassName;\n                }\n            }\n            if (!renderLineNumber && !extraClassNames) {\n                output[lineIndex] = '';\n                continue;\n            }\n            if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n                // this is the last line\n                if (this._renderFinalNewline === 'off') {\n                    renderLineNumber = '';\n                }\n                if (this._renderFinalNewline === 'dimmed') {\n                    extraClassNames += ' dimmed-line-number';\n                }\n            }\n            if (lineNumber === this._activeLineNumber) {\n                extraClassNames += ' active-line-number';\n            }\n            output[lineIndex] = (`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`);\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorLineNumbersColor = theme.getColor(editorLineNumbers);\n    const editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n    if (editorDimmedLineNumberColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n    }\n    else if (editorLineNumbersColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n    }\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './margin.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Margin extends ViewPart {\n    static { this.CLASS_NAME = 'glyph-margin'; }\n    static { this.OUTER_CLASS_NAME = 'margin'; }\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n        this._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n        this._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n    }\n    dispose() {\n        super.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollTopChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setLayerHinting(this._canUseLayerHinting);\n        this._domNode.setContain('strict');\n        const adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n        this._domNode.setTop(-adjustedScrollTop);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this._domNode.setHeight(height);\n        this._domNode.setWidth(this._contentLeft);\n        this._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n        this._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n        this._glyphMarginBackgroundDomNode.setHeight(height);\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAE9F;AACA;;;;AACO,MAAM,eAAe,sLAAA,CAAA,WAAQ;IAChC,MAAO;QAAE,IAAI,CAAC,UAAU,GAAG;IAAgB,CAAC;IAC5C,MAAO;QAAE,IAAI,CAAC,gBAAgB,GAAG;IAAU,CAAC;IAC5C,YAAY,OAAO,CAAE;QACjB,KAAK,CAAC;QACN,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,aAAa,QAAQ,GAAG,CAAC,IAAI,2BAA2B;QAC9D,IAAI,CAAC,mBAAmB,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,oCAAoC;QAC/E,IAAI,CAAC,YAAY,GAAG,WAAW,WAAW;QAC1C,IAAI,CAAC,gBAAgB,GAAG,WAAW,eAAe;QAClD,IAAI,CAAC,iBAAiB,GAAG,WAAW,gBAAgB;QACpD,IAAI,CAAC,QAAQ,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,gBAAgB;QAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ;QACnC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe;QAC1C,IAAI,CAAC,6BAA6B,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QAC9E,IAAI,CAAC,6BAA6B,CAAC,YAAY,CAAC,OAAO,UAAU;QACjE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,6BAA6B;IAChE;IACA,UAAU;QACN,KAAK,CAAC;IACV;IACA,aAAa;QACT,OAAO,IAAI,CAAC,QAAQ;IACxB;IACA,2BAA2B;IAC3B,uBAAuB,CAAC,EAAE;QACtB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,aAAa,QAAQ,GAAG,CAAC,IAAI,2BAA2B;QAC9D,IAAI,CAAC,mBAAmB,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,oCAAoC;QAC/E,IAAI,CAAC,YAAY,GAAG,WAAW,WAAW;QAC1C,IAAI,CAAC,gBAAgB,GAAG,WAAW,eAAe;QAClD,IAAI,CAAC,iBAAiB,GAAG,WAAW,gBAAgB;QACpD,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,OAAO,KAAK,CAAC,gBAAgB,MAAM,EAAE,gBAAgB;IACzD;IACA,yBAAyB;IACzB,cAAc,GAAG,EAAE;IACf,kBAAkB;IACtB;IACA,OAAO,GAAG,EAAE;QACR,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB;QACtD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACzB,MAAM,oBAAoB,IAAI,SAAS,GAAG,IAAI,eAAe;QAC7D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI,YAAY,EAAE;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;QACxC,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB;QAChE,IAAI,CAAC,6BAA6B,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB;QAClE,IAAI,CAAC,6BAA6B,CAAC,SAAS,CAAC;IACjD;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.blocks = [];\n        this.contentWidth = -1;\n        this.contentLeft = 0;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('blockDecorations-container');\n        this.update();\n    }\n    update() {\n        let didChange = false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n        if (this.contentWidth !== newContentWidth) {\n            this.contentWidth = newContentWidth;\n            didChange = true;\n        }\n        const newContentLeft = layoutInfo.contentLeft;\n        if (this.contentLeft !== newContentLeft) {\n            this.contentLeft = newContentLeft;\n            didChange = true;\n        }\n        return didChange;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return this.update();\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollLeftChanged;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        let count = 0;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const decoration of decorations) {\n            if (!decoration.options.blockClassName) {\n                continue;\n            }\n            let block = this.blocks[count];\n            if (!block) {\n                block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n                this.domNode.appendChild(block);\n            }\n            let top;\n            let bottom;\n            if (decoration.options.blockIsAfterEnd) {\n                // range must be empty\n                top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n                bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            else {\n                top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n                bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n                    ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n                    : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            const [paddingTop, paddingRight, paddingBottom, paddingLeft] = decoration.options.blockPadding ?? [0, 0, 0, 0];\n            block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n            block.setLeft(this.contentLeft - paddingLeft);\n            block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n            block.setTop(top - ctx.scrollTop - paddingTop);\n            block.setHeight(bottom - top + paddingTop + paddingBottom);\n            count++;\n        }\n        for (let i = count; i < this.blocks.length; i++) {\n            this.blocks[i].domNode.remove();\n        }\n        this.blocks.length = count;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewContentWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        this._widgets = {};\n        this.domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n        this.domNode.setClassName('contentWidgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLineMappingChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesDeleted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesInserted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _updateAnchorsViewPositions() {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].updateAnchorViewPosition();\n        }\n    }\n    addWidget(_widget) {\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n        const myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n        this.setShouldRender();\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            const domNode = myWidget.domNode.domNode;\n            domNode.remove();\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    }\n    shouldSuppressMouseDownOnWidget(widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    }\n    onBeforeRender(viewportData) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    }\n    prepareRender(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].render(ctx);\n        }\n    }\n}\nclass Widget {\n    constructor(context, viewDomNode, actual) {\n        this._primaryAnchor = new PositionPair(null, null);\n        this._secondaryAnchor = new PositionPair(null, null);\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._fixedOverflowWidgets = options.get(42 /* EditorOption.fixedOverflowWidgets */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._affinity = null;\n        this._preference = [];\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setDisplay('none');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n            this._contentLeft = layoutInfo.contentLeft;\n            this._contentWidth = layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    }\n    updateAnchorViewPosition() {\n        this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n    _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n        this._affinity = affinity;\n        this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n        this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n        function getValidPositionPair(position, viewModel, affinity) {\n            if (!position) {\n                return new PositionPair(null, null);\n            }\n            // Do not trust that widgets give a valid position\n            const validModelPosition = viewModel.model.validatePosition(position);\n            if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity ?? undefined);\n                return new PositionPair(position, viewPosition);\n            }\n            return new PositionPair(position, null);\n        }\n    }\n    _getMaxWidth() {\n        const elDocument = this.domNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        return (this.allowEditorOverflow\n            ? elWindow?.innerWidth || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n            : this._contentWidth);\n    }\n    setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n        this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n        this._preference = preference;\n        if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n            // this content widget would like to be visible if possible\n            // we change it from `display:none` to `display:block` even if it\n            // might be outside the viewport such that we can measure its size\n            // in `prepareRender`\n            this.domNode.setDisplay('block');\n        }\n        else {\n            this.domNode.setDisplay('none');\n        }\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n    }\n    _layoutBoxInViewport(anchor, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        const aboveLineTop = anchor.top;\n        const heightAvailableAboveLine = aboveLineTop;\n        // b) the box under the line\n        const underLineTop = anchor.top + anchor.height;\n        const heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n        const aboveTop = aboveLineTop - height;\n        const fitsAbove = (heightAvailableAboveLine >= height);\n        const belowTop = underLineTop;\n        const fitsBelow = (heightAvailableUnderLine >= height);\n        // And its left\n        let left = anchor.left;\n        if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n            left = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (left < ctx.scrollLeft) {\n            left = ctx.scrollLeft;\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n        // Leave some clearance to the left/right\n        const LEFT_PADDING = 15;\n        const RIGHT_PADDING = 15;\n        // Initially, the limits are defined as the dom node limits\n        const MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        let absoluteLeft = domNodePosition.left + left - (elWindow?.scrollX ?? 0);\n        if (absoluteLeft + width > MAX_LIMIT) {\n            const delta = absoluteLeft - (MAX_LIMIT - width);\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        if (absoluteLeft < MIN_LIMIT) {\n            const delta = absoluteLeft - MIN_LIMIT;\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        return [left, absoluteLeft];\n    }\n    _layoutBoxInPage(anchor, width, height, ctx) {\n        const aboveTop = anchor.top - height;\n        const belowTop = anchor.top + anchor.height;\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        const absoluteAboveTop = domNodePosition.top + aboveTop - (elWindow?.scrollY ?? 0);\n        const absoluteBelowTop = domNodePosition.top + belowTop - (elWindow?.scrollY ?? 0);\n        const windowSize = dom.getClientArea(elDocument.body);\n        const [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n        // Leave some clearance to the top/bottom\n        const TOP_PADDING = 22;\n        const BOTTOM_PADDING = 22;\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n        if (this._fixedOverflowWidgets) {\n            return {\n                fitsAbove,\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n                fitsBelow,\n                belowTop: absoluteBelowTop,\n                left: absoluteAboveLeft\n            };\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n    _getAnchorsCoordinates(ctx) {\n        const primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n        const secondaryViewPosition = (this._secondaryAnchor.viewPosition?.lineNumber === this._primaryAnchor.viewPosition?.lineNumber ? this._secondaryAnchor.viewPosition : null);\n        const secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n        return { primary, secondary };\n        function getCoordinates(position, affinity, lineHeight) {\n            if (!position) {\n                return null;\n            }\n            const horizontalPosition = ctx.visibleRangeForPosition(position);\n            if (!horizontalPosition) {\n                return null;\n            }\n            // Left-align widgets that should appear :before content\n            const left = (position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left);\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n            return new AnchorCoordinate(top, left, lineHeight);\n        }\n    }\n    _reduceAnchorCoordinates(primary, secondary, width) {\n        if (!secondary) {\n            return primary;\n        }\n        const fontInfo = this._context.configuration.options.get(50 /* EditorOption.fontInfo */);\n        let left = secondary.left;\n        if (left < primary.left) {\n            left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n        }\n        else {\n            left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n        }\n        return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n    _prepareRenderWidget(ctx) {\n        if (!this._preference || this._preference.length === 0) {\n            return null;\n        }\n        const { primary, secondary } = this._getAnchorsCoordinates(ctx);\n        if (!primary) {\n            return {\n                kind: 'offViewport',\n                preserveFocus: this.domNode.domNode.contains(this.domNode.domNode.ownerDocument.activeElement)\n            };\n            // return null;\n        }\n        if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n            let preferredDimensions = null;\n            if (typeof this._actual.beforeRender === 'function') {\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n            }\n            if (preferredDimensions) {\n                this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n                this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n            }\n            else {\n                const domNode = this.domNode.domNode;\n                const clientRect = domNode.getBoundingClientRect();\n                this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n                this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n            }\n        }\n        const anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n        let placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        for (let pass = 1; pass <= 2; pass++) {\n            for (const pref of this._preference) {\n                // placement\n                if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsAbove) {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: new Coordinate(placement.aboveTop, placement.left),\n                            position: 1 /* ContentWidgetPositionPreference.ABOVE */\n                        };\n                    }\n                }\n                else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsBelow) {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: new Coordinate(placement.belowTop, placement.left),\n                            position: 2 /* ContentWidgetPositionPreference.BELOW */\n                        };\n                    }\n                }\n                else {\n                    if (this.allowEditorOverflow) {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)),\n                            position: 0 /* ContentWidgetPositionPreference.EXACT */\n                        };\n                    }\n                    else {\n                        return {\n                            kind: 'inViewport',\n                            coordinate: new Coordinate(anchor.top, anchor.left),\n                            position: 0 /* ContentWidgetPositionPreference.EXACT */\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    onBeforeRender(viewportData) {\n        if (!this._primaryAnchor.viewPosition || !this._preference) {\n            return;\n        }\n        if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData || this._renderData.kind === 'offViewport') {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                if (this._renderData?.kind === 'offViewport' && this._renderData.preserveFocus) {\n                    // widget wants to be shown, but it is outside of the viewport and it\n                    // has focus which we need to preserve\n                    this.domNode.setTop(-1000);\n                }\n                else {\n                    this.domNode.setVisibility('hidden');\n                }\n            }\n            if (typeof this._actual.afterRender === 'function') {\n                safeInvoke(this._actual.afterRender, this._actual, null);\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.coordinate.top);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n        if (typeof this._actual.afterRender === 'function') {\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n        }\n    }\n}\nclass PositionPair {\n    constructor(modelPosition, viewPosition) {\n        this.modelPosition = modelPosition;\n        this.viewPosition = viewPosition;\n    }\n}\nclass Coordinate {\n    constructor(top, left) {\n        this.top = top;\n        this.left = left;\n        this._coordinateBrand = undefined;\n    }\n}\nclass AnchorCoordinate {\n    constructor(top, left, height) {\n        this.top = top;\n        this.left = left;\n        this.height = height;\n        this._anchorCoordinateBrand = undefined;\n    }\n}\nfunction safeInvoke(fn, thisArg, ...args) {\n    try {\n        return fn.call(thisArg, ...args);\n    }\n    catch {\n        // ignore\n        return null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1554, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { Position } from '../../../common/core/position.js';\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._renderLineHighlight = options.get(97 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(98 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._wordWrap = layoutInfo.isViewportWrapping;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._selectionIsEmpty = true;\n        this._focused = false;\n        this._cursorLineNumbers = [1];\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderData = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    _readFromSelections() {\n        let hasChanged = false;\n        const lineNumbers = new Set();\n        for (const selection of this._selections) {\n            lineNumbers.add(selection.positionLineNumber);\n        }\n        const cursorsLineNumbers = Array.from(lineNumbers);\n        cursorsLineNumbers.sort((a, b) => a - b);\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n            this._cursorLineNumbers = cursorsLineNumbers;\n            hasChanged = true;\n        }\n        const selectionIsEmpty = this._selections.every(s => s.isEmpty());\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            hasChanged = true;\n        }\n        return hasChanged;\n    }\n    // --- begin event handlers\n    onThemeChanged(e) {\n        return this._readFromSelections();\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._renderLineHighlight = options.get(97 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(98 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._wordWrap = layoutInfo.isViewportWrapping;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return this._readFromSelections();\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        if (!this._renderLineHighlightOnlyWhenFocus) {\n            return false;\n        }\n        this._focused = e.isFocused;\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._shouldRenderThis()) {\n            this._renderData = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        // initialize renderData\n        const renderData = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            renderData[lineIndex] = '';\n        }\n        if (this._wordWrap) {\n            // do a first pass to render wrapped lines\n            const renderedLineWrapped = this._renderOne(ctx, false);\n            for (const cursorLineNumber of this._cursorLineNumbers) {\n                const coordinatesConverter = this._context.viewModel.coordinatesConverter;\n                const modelLineNumber = coordinatesConverter.convertViewPositionToModelPosition(new Position(cursorLineNumber, 1)).lineNumber;\n                const firstViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, 1)).lineNumber;\n                const lastViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, this._context.viewModel.model.getLineMaxColumn(modelLineNumber))).lineNumber;\n                const firstLine = Math.max(firstViewLineNumber, visibleStartLineNumber);\n                const lastLine = Math.min(lastViewLineNumber, visibleEndLineNumber);\n                for (let lineNumber = firstLine; lineNumber <= lastLine; lineNumber++) {\n                    const lineIndex = lineNumber - visibleStartLineNumber;\n                    renderData[lineIndex] = renderedLineWrapped;\n                }\n            }\n        }\n        // do a second pass to render exact lines\n        const renderedLineExact = this._renderOne(ctx, true);\n        for (const cursorLineNumber of this._cursorLineNumbers) {\n            if (cursorLineNumber < visibleStartLineNumber || cursorLineNumber > visibleEndLineNumber) {\n                continue;\n            }\n            const lineIndex = cursorLineNumber - visibleStartLineNumber;\n            renderData[lineIndex] = renderedLineExact;\n        }\n        this._renderData = renderData;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderData) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex >= this._renderData.length) {\n            return '';\n        }\n        return this._renderData[lineIndex];\n    }\n    _shouldRenderInMargin() {\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n    _shouldRenderInContent() {\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n            && this._selectionIsEmpty\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx, exact) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-both' : '') + (exact ? ' current-line-exact' : '');\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return this._shouldRenderInContent();\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInMargin();\n    }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx, exact) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '') + (this._shouldRenderInMargin() && exact ? ' current-line-exact-margin' : '');\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px\"></div>`;\n    }\n    _shouldRenderThis() {\n        return true;\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInContent();\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    if (lineHighlight) {\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n    }\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n        if (lineHighlightBorder) {\n            collector.addRule(`.monaco-editor .view-overlays .current-line-exact { border: 2px solid ${lineHighlightBorder}; }`);\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid ${lineHighlightBorder}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .view-overlays .current-line-exact { border-width: 1px; }`);\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }`);\n            }\n        }\n    }\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1768, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { HorizontalRange } from '../../view/renderingContext.js';\nimport { Range } from '../../../common/core/range.js';\nexport class DecorationsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        const _decorations = ctx.getDecorationsInViewport();\n        // Keep only decorations with `className`\n        let decorations = [];\n        let decorationsLen = 0;\n        for (let i = 0, len = _decorations.length; i < len; i++) {\n            const d = _decorations[i];\n            if (d.options.className) {\n                decorations[decorationsLen++] = d;\n            }\n        }\n        // Sort decorations for consistent render output\n        decorations = decorations.sort((a, b) => {\n            if (a.options.zIndex < b.options.zIndex) {\n                return -1;\n            }\n            if (a.options.zIndex > b.options.zIndex) {\n                return 1;\n            }\n            const aClassName = a.options.className;\n            const bClassName = b.options.className;\n            if (aClassName < bClassName) {\n                return -1;\n            }\n            if (aClassName > bClassName) {\n                return 1;\n            }\n            return Range.compareRangesUsingStarts(a.range, b.range);\n        });\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = '';\n        }\n        // Render first whole line decorations and then regular decorations\n        this._renderWholeLineDecorations(ctx, decorations, output);\n        this._renderNormalDecorations(ctx, decorations, output);\n        this._renderResult = output;\n    }\n    _renderWholeLineDecorations(ctx, decorations, output) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (!d.options.isWholeLine) {\n                continue;\n            }\n            const decorationOutput = ('<div class=\"cdr '\n                + d.options.className\n                + '\" style=\"left:0;width:100%;\"></div>');\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            for (let j = startLineNumber; j <= endLineNumber; j++) {\n                const lineIndex = j - visibleStartLineNumber;\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    _renderNormalDecorations(ctx, decorations, output) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        let prevClassName = null;\n        let prevShowIfCollapsed = false;\n        let prevRange = null;\n        let prevShouldFillLineOnLineBreak = false;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (d.options.isWholeLine) {\n                continue;\n            }\n            const className = d.options.className;\n            const showIfCollapsed = Boolean(d.options.showIfCollapsed);\n            let range = d.range;\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n            }\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n                // merge into previous decoration\n                prevRange = Range.plusRange(prevRange, range);\n                continue;\n            }\n            // flush previous decoration\n            if (prevClassName !== null) {\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n            }\n            prevClassName = className;\n            prevShowIfCollapsed = showIfCollapsed;\n            prevRange = range;\n            prevShouldFillLineOnLineBreak = d.options.shouldFillLineOnLineBreak ?? false;\n        }\n        if (prevClassName !== null) {\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n        }\n    }\n    _renderNormalDecoration(ctx, range, className, shouldFillLineOnLineBreak, showIfCollapsed, visibleStartLineNumber, output) {\n        const linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\n        if (!linesVisibleRanges) {\n            return;\n        }\n        for (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n            const lineVisibleRanges = linesVisibleRanges[j];\n            if (lineVisibleRanges.outsideRenderedLine) {\n                continue;\n            }\n            const lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n                const singleVisibleRange = lineVisibleRanges.ranges[0];\n                if (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n                    // collapsed/very small range case => make the decoration visible by expanding its width\n                    // expand its size on both sides (both to the left and to the right, keeping it centered)\n                    const center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n                    const left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n                }\n            }\n            for (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n                const expandToLeft = shouldFillLineOnLineBreak && lineVisibleRanges.continuesOnNextLine && lenK === 1;\n                const visibleRange = lineVisibleRanges.ranges[k];\n                const decorationOutput = ('<div class=\"cdr '\n                    + className\n                    + '\" style=\"left:'\n                    + String(visibleRange.left)\n                    + 'px;width:'\n                    + (expandToLeft ?\n                        '100%;' :\n                        (String(visibleRange.width) + 'px;'))\n                    + '\"></div>');\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1962, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n    constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        super(context);\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        const mouseWheelScrollSensitivity = options.get(75 /* EditorOption.mouseWheelScrollSensitivity */);\n        const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n        const scrollPredominantAxis = options.get(107 /* EditorOption.scrollPredominantAxis */);\n        const scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: scrollbar.vertical,\n            horizontal: scrollbar.horizontal,\n            verticalHasArrows: scrollbar.verticalHasArrows,\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n            verticalSliderSize: scrollbar.verticalSliderSize,\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\n            handleMouseWheel: scrollbar.handleMouseWheel,\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n            arrowSize: scrollbar.arrowSize,\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n            scrollPredominantAxis: scrollPredominantAxis,\n            scrollByPage: scrollbar.scrollByPage,\n        };\n        this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n        PartFingerprints.write(this.scrollbar.getDomNode(), 6 /* PartFingerprint.ScrollableElement */);\n        this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n        this.scrollbarDomNode.setPosition('absolute');\n        this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n            const newScrollPosition = {};\n            if (lookAtScrollTop) {\n                const deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                const deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n        this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n        this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n        this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _setLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        const minimap = options.get(73 /* EditorOption.minimap */);\n        const side = minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\n    }\n    getOverviewRulerLayoutInfo() {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    }\n    getDomNode() {\n        return this.scrollbarDomNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(104 /* EditorOption.scrollbar */)\n            || e.hasChanged(75 /* EditorOption.mouseWheelScrollSensitivity */)\n            || e.hasChanged(40 /* EditorOption.fastScrollSensitivity */)) {\n            const options = this._context.configuration.options;\n            const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n            const mouseWheelScrollSensitivity = options.get(75 /* EditorOption.mouseWheelScrollSensitivity */);\n            const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n            const scrollPredominantAxis = options.get(107 /* EditorOption.scrollPredominantAxis */);\n            const newOpts = {\n                vertical: scrollbar.vertical,\n                horizontal: scrollbar.horizontal,\n                verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n                horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n                scrollByPage: scrollbar.scrollByPage,\n                handleMouseWheel: scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n                fastScrollSensitivity: fastScrollSensitivity,\n                scrollPredominantAxis: scrollPredominantAxis\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            this._setLayout();\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to do\n    }\n    render(ctx) {\n        this.scrollbar.renderNow();\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2114, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\n/**\n * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.\n * This can end up producing multiple `LineDecorationToRender`.\n */\nexport class DecorationToRender {\n    constructor(startLineNumber, endLineNumber, className, tooltip, zIndex) {\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n        this.className = className;\n        this.tooltip = tooltip;\n        this._decorationToRenderBrand = undefined;\n        this.zIndex = zIndex ?? 0;\n    }\n}\n/**\n * A decoration that should be shown along a line.\n */\nexport class LineDecorationToRender {\n    constructor(className, zIndex, tooltip) {\n        this.className = className;\n        this.zIndex = zIndex;\n        this.tooltip = tooltip;\n    }\n}\n/**\n * Decorations to render on a visible line.\n */\nexport class VisibleLineDecorationsToRender {\n    constructor() {\n        this.decorations = [];\n    }\n    add(decoration) {\n        this.decorations.push(decoration);\n    }\n    getDecorations() {\n        return this.decorations;\n    }\n}\nexport class DedupOverlay extends DynamicViewOverlay {\n    /**\n     * Returns an array with an element for each visible line number.\n     */\n    _render(visibleStartLineNumber, visibleEndLineNumber, decorations) {\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = new VisibleLineDecorationsToRender();\n        }\n        if (decorations.length === 0) {\n            return output;\n        }\n        // Sort decorations by className, then by startLineNumber and then by endLineNumber\n        decorations.sort((a, b) => {\n            if (a.className === b.className) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return (a.className < b.className ? -1 : 1);\n        });\n        let prevClassName = null;\n        let prevEndLineIndex = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const className = d.className;\n            const zIndex = d.zIndex;\n            let startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n            const endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n            if (prevClassName === className) {\n                // Here we avoid rendering the same className multiple times on the same line\n                startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n                prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n            }\n            else {\n                prevClassName = className;\n                prevEndLineIndex = endLineIndex;\n            }\n            for (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n                output[i].add(new LineDecorationToRender(className, zIndex, d.tooltip));\n            }\n        }\n        return output;\n    }\n}\nexport class GlyphMarginWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._widgets = {};\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('glyph-margin-widgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n    }\n    dispose() {\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n        this._widgets = {};\n        super.dispose();\n    }\n    getWidgets() {\n        return Object.values(this._widgets);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin widget management\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: widget.getPosition(),\n            domNode: domNode,\n            renderInfo: null\n        };\n        domNode.setPosition('absolute');\n        domNode.setDisplay('none');\n        domNode.setAttribute('widgetId', widget.getId());\n        this.domNode.appendChild(domNode);\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, preference) {\n        const myWidget = this._widgets[widget.getId()];\n        if (myWidget.preference.lane === preference.lane\n            && myWidget.preference.zIndex === preference.zIndex\n            && Range.equalsRange(myWidget.preference.range, preference.range)) {\n            return false;\n        }\n        myWidget.preference = preference;\n        this.setShouldRender();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets[widgetId]) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.remove();\n            this.setShouldRender();\n        }\n    }\n    // --- end widget management\n    _collectDecorationBasedGlyphRenderRequest(ctx, requests) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const d of decorations) {\n            const glyphMarginClassName = d.options.glyphMarginClassName;\n            if (!glyphMarginClassName) {\n                continue;\n            }\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            const lane = d.options.glyphMargin?.position ?? GlyphMarginLane.Center;\n            const zIndex = d.options.zIndex ?? 0;\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 0));\n                const laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(lane);\n                requests.push(new DecorationBasedGlyphRenderRequest(lineNumber, laneIndex, zIndex, glyphMarginClassName));\n            }\n        }\n    }\n    _collectWidgetBasedGlyphRenderRequest(ctx, requests) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (const widget of Object.values(this._widgets)) {\n            const range = widget.preference.range;\n            const { startLineNumber, endLineNumber } = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(Range.lift(range));\n            if (!startLineNumber || !endLineNumber || endLineNumber < visibleStartLineNumber || startLineNumber > visibleEndLineNumber) {\n                // The widget is not in the viewport\n                continue;\n            }\n            // The widget is in the viewport, find a good line for it\n            const widgetLineNumber = Math.max(startLineNumber, visibleStartLineNumber);\n            const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(widgetLineNumber, 0));\n            const laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(widget.preference.lane);\n            requests.push(new WidgetBasedGlyphRenderRequest(widgetLineNumber, laneIndex, widget.preference.zIndex, widget));\n        }\n    }\n    _collectSortedGlyphRenderRequests(ctx) {\n        const requests = [];\n        this._collectDecorationBasedGlyphRenderRequest(ctx, requests);\n        this._collectWidgetBasedGlyphRenderRequest(ctx, requests);\n        // sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC\n        // don't change this sort unless you understand `prepareRender` below.\n        requests.sort((a, b) => {\n            if (a.lineNumber === b.lineNumber) {\n                if (a.laneIndex === b.laneIndex) {\n                    if (a.zIndex === b.zIndex) {\n                        if (b.type === a.type) {\n                            if (a.type === 0 /* GlyphRenderRequestType.Decoration */ && b.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                                return (a.className < b.className ? -1 : 1);\n                            }\n                            return 0;\n                        }\n                        return b.type - a.type;\n                    }\n                    return b.zIndex - a.zIndex;\n                }\n                return a.laneIndex - b.laneIndex;\n            }\n            return a.lineNumber - b.lineNumber;\n        });\n        return requests;\n    }\n    /**\n     * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.\n     */\n    prepareRender(ctx) {\n        if (!this._glyphMargin) {\n            this._decorationGlyphsToRender = [];\n            return;\n        }\n        for (const widget of Object.values(this._widgets)) {\n            widget.renderInfo = null;\n        }\n        const requests = new ArrayQueue(this._collectSortedGlyphRenderRequests(ctx));\n        const decorationGlyphsToRender = [];\n        while (requests.length > 0) {\n            const first = requests.peek();\n            if (!first) {\n                // not possible\n                break;\n            }\n            // Requests are sorted by lineNumber and lane, so we read all requests for this particular location\n            const requestsAtLocation = requests.takeWhile((el) => el.lineNumber === first.lineNumber && el.laneIndex === first.laneIndex);\n            if (!requestsAtLocation || requestsAtLocation.length === 0) {\n                // not possible\n                break;\n            }\n            const winner = requestsAtLocation[0];\n            if (winner.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                // combine all decorations with the same z-index\n                const classNames = [];\n                // requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one\n                for (const request of requestsAtLocation) {\n                    if (request.zIndex !== winner.zIndex || request.type !== winner.type) {\n                        break;\n                    }\n                    if (classNames.length === 0 || classNames[classNames.length - 1] !== request.className) {\n                        classNames.push(request.className);\n                    }\n                }\n                decorationGlyphsToRender.push(winner.accept(classNames.join(' '))); // TODO@joyceerhl Implement overflow for remaining decorations\n            }\n            else {\n                // widgets cannot be combined\n                winner.widget.renderInfo = {\n                    lineNumber: winner.lineNumber,\n                    laneIndex: winner.laneIndex,\n                };\n            }\n        }\n        this._decorationGlyphsToRender = decorationGlyphsToRender;\n    }\n    render(ctx) {\n        if (!this._glyphMargin) {\n            for (const widget of Object.values(this._widgets)) {\n                widget.domNode.setDisplay('none');\n            }\n            while (this._managedDomNodes.length > 0) {\n                const domNode = this._managedDomNodes.pop();\n                domNode?.domNode.remove();\n            }\n            return;\n        }\n        const width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount));\n        // Render widgets\n        for (const widget of Object.values(this._widgets)) {\n            if (!widget.renderInfo) {\n                // this widget is not visible\n                widget.domNode.setDisplay('none');\n            }\n            else {\n                const top = ctx.viewportData.relativeVerticalOffset[widget.renderInfo.lineNumber - ctx.viewportData.startLineNumber];\n                const left = this._glyphMarginLeft + widget.renderInfo.laneIndex * this._lineHeight;\n                widget.domNode.setDisplay('block');\n                widget.domNode.setTop(top);\n                widget.domNode.setLeft(left);\n                widget.domNode.setWidth(width);\n                widget.domNode.setHeight(this._lineHeight);\n            }\n        }\n        // Render decorations, reusing previous dom nodes as possible\n        for (let i = 0; i < this._decorationGlyphsToRender.length; i++) {\n            const dec = this._decorationGlyphsToRender[i];\n            const top = ctx.viewportData.relativeVerticalOffset[dec.lineNumber - ctx.viewportData.startLineNumber];\n            const left = this._glyphMarginLeft + dec.laneIndex * this._lineHeight;\n            let domNode;\n            if (i < this._managedDomNodes.length) {\n                domNode = this._managedDomNodes[i];\n            }\n            else {\n                domNode = createFastDomNode(document.createElement('div'));\n                this._managedDomNodes.push(domNode);\n                this.domNode.appendChild(domNode);\n            }\n            domNode.setClassName(`cgmr codicon ` + dec.combinedClassName);\n            domNode.setPosition(`absolute`);\n            domNode.setTop(top);\n            domNode.setLeft(left);\n            domNode.setWidth(width);\n            domNode.setHeight(this._lineHeight);\n        }\n        // remove extra dom nodes\n        while (this._managedDomNodes.length > this._decorationGlyphsToRender.length) {\n            const domNode = this._managedDomNodes.pop();\n            domNode?.domNode.remove();\n        }\n    }\n}\n/**\n * A request to render a decoration in the glyph margin at a certain location.\n */\nclass DecorationBasedGlyphRenderRequest {\n    constructor(lineNumber, laneIndex, zIndex, className) {\n        this.lineNumber = lineNumber;\n        this.laneIndex = laneIndex;\n        this.zIndex = zIndex;\n        this.className = className;\n        this.type = 0 /* GlyphRenderRequestType.Decoration */;\n    }\n    accept(combinedClassName) {\n        return new DecorationBasedGlyph(this.lineNumber, this.laneIndex, combinedClassName);\n    }\n}\n/**\n * A request to render a widget in the glyph margin at a certain location.\n */\nclass WidgetBasedGlyphRenderRequest {\n    constructor(lineNumber, laneIndex, zIndex, widget) {\n        this.lineNumber = lineNumber;\n        this.laneIndex = laneIndex;\n        this.zIndex = zIndex;\n        this.widget = widget;\n        this.type = 1 /* GlyphRenderRequestType.Widget */;\n    }\n}\nclass DecorationBasedGlyph {\n    constructor(lineNumber, laneIndex, combinedClassName) {\n        this.lineNumber = lineNumber;\n        this.laneIndex = laneIndex;\n        this.combinedClassName = combinedClassName;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2508, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!this._primaryPosition?.equals(newPosition)) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, Math.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()), activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n            for (const guide of indent) {\n                const left = guide.column === -1\n                    ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n                    : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? (ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))?.left ?? (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n            const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.viewModel.model.getOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, -1, `core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''), null, -1, -1));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const indentColors = [\n        { indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n        { indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n        { indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n        { indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n        { indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n        { indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n    ];\n    const colorValues = colors\n        .map(c => {\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    const indentColorValues = indentColors\n        .map(c => {\n        const indentColor = theme.getColor(c.indentColor);\n        const indentColorActive = theme.getColor(c.indentColorActive);\n        const effectiveIndentColor = transparentToUndefined(indentColor);\n        const effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n        if (!effectiveIndentColor || !effectiveIndentColorActive) {\n            return undefined;\n        }\n        return {\n            indentColor: effectiveIndentColor,\n            indentColorActive: effectiveIndentColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n    if (indentColorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = indentColorValues[level % indentColorValues.length];\n            collector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n    }\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2793, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/domReadingContext.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DomReadingContext {\n    get didDomLayout() {\n        return this._didDomLayout;\n    }\n    readClientRect() {\n        if (!this._clientRectRead) {\n            this._clientRectRead = true;\n            const rect = this._domNode.getBoundingClientRect();\n            this.markDidDomLayout();\n            this._clientRectDeltaLeft = rect.left;\n            this._clientRectScale = rect.width / this._domNode.offsetWidth;\n        }\n    }\n    get clientRectDeltaLeft() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectDeltaLeft;\n    }\n    get clientRectScale() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectScale;\n    }\n    constructor(_domNode, endNode) {\n        this._domNode = _domNode;\n        this.endNode = endNode;\n        this._didDomLayout = false;\n        this._clientRectDeltaLeft = 0;\n        this._clientRectScale = 1;\n        this._clientRectRead = false;\n    }\n    markDidDomLayout() {\n        this._didDomLayout = true;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AACvF,MAAM;IACT,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,aAAa;IAC7B;IACA,iBAAiB;QACb,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,IAAI,CAAC,eAAe,GAAG;YACvB,MAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB;YAChD,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,oBAAoB,GAAG,KAAK,IAAI;YACrC,IAAI,CAAC,gBAAgB,GAAG,KAAK,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW;QAClE;IACJ;IACA,IAAI,sBAAsB;QACtB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,IAAI,CAAC,cAAc;QACvB;QACA,OAAO,IAAI,CAAC,oBAAoB;IACpC;IACA,IAAI,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,IAAI,CAAC,cAAc;QACvB;QACA,OAAO,IAAI,CAAC,gBAAgB;IAChC;IACA,YAAY,QAAQ,EAAE,OAAO,CAAE;QAC3B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,mBAAmB;QACf,IAAI,CAAC,aAAa,GAAG;IACzB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2842, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport './viewLines.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { HorizontalPosition, HorizontalRange, LineVisibleRanges } from '../../view/renderingContext.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLine, ViewLineOptions } from './viewLine.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nclass LastRenderedData {\n    constructor() {\n        this._currentVisibleRange = new Range(1, 1, 1, 1);\n    }\n    getCurrentVisibleRange() {\n        return this._currentVisibleRange;\n    }\n    setCurrentVisibleRange(currentVisibleRange) {\n        this._currentVisibleRange = currentVisibleRange;\n    }\n}\nclass HorizontalRevealRangeRequest {\n    constructor(minimalReveal, lineNumber, startColumn, endColumn, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.lineNumber = lineNumber;\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'range';\n        this.minLineNumber = lineNumber;\n        this.maxLineNumber = lineNumber;\n    }\n}\nclass HorizontalRevealSelectionsRequest {\n    constructor(minimalReveal, selections, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.selections = selections;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'selections';\n        let minLineNumber = selections[0].startLineNumber;\n        let maxLineNumber = selections[0].endLineNumber;\n        for (let i = 1, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n            maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n        }\n        this.minLineNumber = minLineNumber;\n        this.maxLineNumber = maxLineNumber;\n    }\n}\nexport class ViewLines extends ViewPart {\n    /**\n     * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n     */\n    static { this.HORIZONTAL_EXTRA_PX = 30; }\n    constructor(context, linesContent) {\n        super(context);\n        const conf = this._context.configuration;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(101 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        this._linesContent = linesContent;\n        this._textRangeRestingSpot = document.createElement('div');\n        this._visibleLines = new VisibleLinesCollection({\n            createLine: () => new ViewLine(this._viewLineOptions),\n        });\n        this.domNode = this._visibleLines.domNode;\n        PartFingerprints.write(this.domNode, 8 /* PartFingerprint.ViewLines */);\n        this.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        applyFontInfo(this.domNode, fontInfo);\n        // --- width & height\n        this._maxLineWidth = 0;\n        this._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n            this._updateLineWidthsSlow();\n        }, 200);\n        this._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n            this._checkMonospaceFontAssumptions();\n        }, 2000);\n        this._lastRenderedData = new LastRenderedData();\n        this._horizontalRevealRequest = null;\n        // sticky scroll widget\n        this._stickyScrollEnabled = options.get(116 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(116 /* EditorOption.stickyScroll */).maxLineCount;\n    }\n    dispose() {\n        this._asyncUpdateLineWidths.dispose();\n        this._asyncCheckMonospaceFontAssumptions.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        if (e.hasChanged(147 /* EditorOption.wrappingInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(147 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(101 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        // sticky scroll\n        this._stickyScrollEnabled = options.get(116 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(116 /* EditorOption.stickyScroll */).maxLineCount;\n        applyFontInfo(this.domNode, fontInfo);\n        this._onOptionsMaybeChanged();\n        if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        return true;\n    }\n    _onOptionsMaybeChanged() {\n        const conf = this._context.configuration;\n        const newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        if (!this._viewLineOptions.equals(newViewLineOptions)) {\n            this._viewLineOptions = newViewLineOptions;\n            const startLineNumber = this._visibleLines.getStartLineNumber();\n            const endLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const line = this._visibleLines.getVisibleLine(lineNumber);\n                line.onOptionsChanged(this._viewLineOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let r = false;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            r = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n        }\n        return r;\n    }\n    onDecorationsChanged(e) {\n        if (true /*e.inlineDecorationsChanged*/) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n            }\n        }\n        return true;\n    }\n    onFlushed(e) {\n        const shouldRender = this._visibleLines.onFlushed(e);\n        this._maxLineWidth = 0;\n        return shouldRender;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onRevealRangeRequest(e) {\n        // Using the future viewport here in order to handle multiple\n        // incoming reveal range requests that might all desire to be animated\n        const desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n        if (desiredScrollTop === -1) {\n            // marker to abort the reveal range request\n            return false;\n        }\n        // validate the new desired scroll top\n        let newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n        if (e.revealHorizontal) {\n            if (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n                // Two or more lines? => scroll to base (That's how you see most of the two lines)\n                newScrollPosition = {\n                    scrollTop: newScrollPosition.scrollTop,\n                    scrollLeft: 0\n                };\n            }\n            else if (e.range) {\n                // We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n                this._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n            else if (e.selections && e.selections.length > 0) {\n                this._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n        }\n        else {\n            this._horizontalRevealRequest = null;\n        }\n        const scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n        const scrollType = (scrollTopDelta <= this._lineHeight ? 1 /* ScrollType.Immediate */ : e.scrollType);\n        this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n        return true;\n    }\n    onScrollChanged(e) {\n        if (this._horizontalRevealRequest && e.scrollLeftChanged) {\n            // cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n            this._horizontalRevealRequest = null;\n        }\n        if (this._horizontalRevealRequest && e.scrollTopChanged) {\n            const min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            const max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            if (e.scrollTop < min || e.scrollTop > max) {\n                // cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n                this._horizontalRevealRequest = null;\n            }\n        }\n        this.domNode.setWidth(e.scrollWidth);\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        return this._visibleLines.onZonesChanged(e);\n    }\n    onThemeChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    // ---- end view event handlers\n    // ----------- HELPERS FOR OTHERS\n    getPositionFromDOMInfo(spanNode, offset) {\n        const viewLineDomNode = this._getViewLineDomNode(spanNode);\n        if (viewLineDomNode === null) {\n            // Couldn't find view line node\n            return null;\n        }\n        const lineNumber = this._getLineNumberFor(viewLineDomNode);\n        if (lineNumber === -1) {\n            // Couldn't find view line node\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n            // lineNumber is outside range\n            return null;\n        }\n        if (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n            // Line is empty\n            return new Position(lineNumber, 1);\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return null;\n        }\n        let column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(spanNode, offset);\n        const minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n        if (column < minColumn) {\n            column = minColumn;\n        }\n        return new Position(lineNumber, column);\n    }\n    _getViewLineDomNode(node) {\n        while (node && node.nodeType === 1) {\n            if (node.className === ViewLine.CLASS_NAME) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n        return null;\n    }\n    /**\n     * @returns the line number of this view line dom node.\n     */\n    _getLineNumberFor(domNode) {\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            if (domNode === line.getDomNode()) {\n                return lineNumber;\n            }\n        }\n        return -1;\n    }\n    getLineWidth(lineNumber) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return -1;\n        }\n        const context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n        this._updateLineWidthsSlowIfDomDidLayout(context);\n        return result;\n    }\n    linesVisibleRangesForRange(_range, includeNewLines) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        const originalEndLineNumber = _range.endLineNumber;\n        const range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n        if (!range) {\n            return null;\n        }\n        const visibleRanges = [];\n        let visibleRangesLen = 0;\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        let nextLineModelLineNumber = 0;\n        if (includeNewLines) {\n            nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n            if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n                continue;\n            }\n            const startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n            const continuesInNextLine = lineNumber !== range.endLineNumber;\n            const endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n            const visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n            if (!visibleRangesForLine) {\n                continue;\n            }\n            if (includeNewLines && lineNumber < originalEndLineNumber) {\n                const currentLineModelLineNumber = nextLineModelLineNumber;\n                nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n                if (currentLineModelLineNumber !== nextLineModelLineNumber) {\n                    visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n                }\n            }\n            visibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine);\n        }\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        if (visibleRangesLen === 0) {\n            return null;\n        }\n        return visibleRanges;\n    }\n    _visibleRangesForLineRange(lineNumber, startColumn, endColumn) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        if (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n            return null;\n        }\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        return result;\n    }\n    visibleRangeForPosition(position) {\n        const visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n        if (!visibleRanges) {\n            return null;\n        }\n        return new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n    }\n    /**\n     * Updates the max line width if it is fast to compute.\n     * Returns true if all lines were taken into account.\n     * Returns false if some lines need to be reevaluated (in a slow fashion).\n     */\n    _updateLineWidthsFast() {\n        return this._updateLineWidths(true);\n    }\n    _updateLineWidthsSlow() {\n        this._updateLineWidths(false);\n    }\n    /**\n     * Update the line widths using DOM layout information after someone else\n     * has caused a synchronous layout.\n     */\n    _updateLineWidthsSlowIfDomDidLayout(domReadingContext) {\n        if (!domReadingContext.didDomLayout) {\n            // only proceed if we just did a layout\n            return;\n        }\n        if (this._asyncUpdateLineWidths.isScheduled()) {\n            // reading widths is not scheduled => widths are up-to-date\n            return;\n        }\n        this._asyncUpdateLineWidths.cancel();\n        this._updateLineWidthsSlow();\n    }\n    _updateLineWidths(fast) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let localMaxLineWidth = 1;\n        let allWidthsComputed = true;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (fast && !visibleLine.getWidthIsFast()) {\n                // Cannot compute width in a fast way for this line\n                allWidthsComputed = false;\n                continue;\n            }\n            localMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n        }\n        if (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n            // we know the max line width for all the lines\n            this._maxLineWidth = 0;\n        }\n        this._ensureMaxLineWidth(localMaxLineWidth);\n        return allWidthsComputed;\n    }\n    _checkMonospaceFontAssumptions() {\n        // Problems with monospace assumptions are more apparent for longer lines,\n        // as small rounding errors start to sum up, so we will select the longest\n        // line for a closer inspection\n        let longestLineNumber = -1;\n        let longestWidth = -1;\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (visibleLine.needsMonospaceFontCheck()) {\n                const lineWidth = visibleLine.getWidth(null);\n                if (lineWidth > longestWidth) {\n                    longestWidth = lineWidth;\n                    longestLineNumber = lineNumber;\n                }\n            }\n        }\n        if (longestLineNumber === -1) {\n            return;\n        }\n        if (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                visibleLine.onMonospaceAssumptionsInvalidated();\n            }\n        }\n    }\n    prepareRender() {\n        throw new Error('Not supported');\n    }\n    render() {\n        throw new Error('Not supported');\n    }\n    renderText(viewportData) {\n        // (1) render lines - ensures lines are in the DOM\n        this._visibleLines.renderLines(viewportData);\n        this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n        this.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n        this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n        // (2) compute horizontal scroll position:\n        //  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n        //  - it might change `scrollWidth` and `scrollLeft`\n        if (this._horizontalRevealRequest) {\n            const horizontalRevealRequest = this._horizontalRevealRequest;\n            // Check that we have the line that contains the horizontal range in the viewport\n            if (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n                this._horizontalRevealRequest = null;\n                // allow `visibleRangesForRange2` to work\n                this.onDidRender();\n                // compute new scroll position\n                const newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n                if (newScrollLeft) {\n                    if (!this._isViewportWrapping) {\n                        // ensure `scrollWidth` is large enough\n                        this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n                    }\n                    // set `scrollLeft`\n                    this._context.viewModel.viewLayout.setScrollPosition({\n                        scrollLeft: newScrollLeft.scrollLeft\n                    }, horizontalRevealRequest.scrollType);\n                }\n            }\n        }\n        // Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n        if (!this._updateLineWidthsFast()) {\n            // Computing the width of some lines would be slow => delay it\n            this._asyncUpdateLineWidths.schedule();\n        }\n        else {\n            this._asyncUpdateLineWidths.cancel();\n        }\n        if (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                if (visibleLine.needsMonospaceFontCheck()) {\n                    this._asyncCheckMonospaceFontAssumptions.schedule();\n                    break;\n                }\n            }\n        }\n        // (3) handle scrolling\n        this._linesContent.setLayerHinting(this._canUseLayerHinting);\n        this._linesContent.setContain('strict');\n        const adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n        this._linesContent.setTop(-adjustedScrollTop);\n        this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n    }\n    // --- width\n    _ensureMaxLineWidth(lineWidth) {\n        const iLineWidth = Math.ceil(lineWidth);\n        if (this._maxLineWidth < iLineWidth) {\n            this._maxLineWidth = iLineWidth;\n            this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        }\n    }\n    _computeScrollTopToRevealRange(viewport, source, minimalReveal, range, selections, verticalType) {\n        const viewportStartY = viewport.top;\n        const viewportHeight = viewport.height;\n        const viewportEndY = viewportStartY + viewportHeight;\n        let boxIsSingleRange;\n        let boxStartY;\n        let boxEndY;\n        if (selections && selections.length > 0) {\n            let minLineNumber = selections[0].startLineNumber;\n            let maxLineNumber = selections[0].endLineNumber;\n            for (let i = 1, len = selections.length; i < len; i++) {\n                const selection = selections[i];\n                minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n                maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n            }\n            boxIsSingleRange = false;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n        }\n        else if (range) {\n            boxIsSingleRange = true;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n        }\n        else {\n            return -1;\n        }\n        const shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n        let paddingTop = 0;\n        let paddingBottom = 0;\n        if (!shouldIgnoreScrollOff) {\n            const maxLinesInViewport = (viewportHeight / this._lineHeight);\n            const surroundingLines = Math.max(this._cursorSurroundingLines, this._stickyScrollEnabled ? this._maxNumberStickyLines : 0);\n            const context = Math.min(maxLinesInViewport / 2, surroundingLines);\n            paddingTop = context * this._lineHeight;\n            paddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n        }\n        else {\n            if (!minimalReveal) {\n                // Reveal one more line above (this case is hit when dragging)\n                paddingTop = this._lineHeight;\n            }\n        }\n        if (!minimalReveal) {\n            if (verticalType === 0 /* viewEvents.VerticalRevealType.Simple */ || verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */) {\n                // Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n                paddingBottom += this._lineHeight;\n            }\n        }\n        boxStartY -= paddingTop;\n        boxEndY += paddingBottom;\n        let newScrollTop;\n        if (boxEndY - boxStartY > viewportHeight) {\n            // the box is larger than the viewport ... scroll to its top\n            if (!boxIsSingleRange) {\n                // do not reveal multiple cursors if there are more than fit the viewport\n                return -1;\n            }\n            newScrollTop = boxStartY;\n        }\n        else if (verticalType === 5 /* viewEvents.VerticalRevealType.NearTop */ || verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */) {\n            if (verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n                const desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n                // Try to scroll just above the box with the desired gap\n                const desiredScrollTop = boxStartY - desiredGapAbove;\n                // But ensure that the box is not pushed out of viewport\n                const minScrollTop = boxEndY - viewportHeight;\n                newScrollTop = Math.max(minScrollTop, desiredScrollTop);\n            }\n        }\n        else if (verticalType === 1 /* viewEvents.VerticalRevealType.Center */ || verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */) {\n            if (verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // Box is outside the viewport... center it\n                const boxMiddleY = (boxStartY + boxEndY) / 2;\n                newScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n            }\n        }\n        else {\n            newScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === 3 /* viewEvents.VerticalRevealType.Top */, verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */);\n        }\n        return newScrollTop;\n    }\n    _computeScrollLeftToReveal(horizontalRevealRequest) {\n        const viewport = this._context.viewLayout.getCurrentViewport();\n        const layoutInfo = this._context.configuration.options.get(146 /* EditorOption.layoutInfo */);\n        const viewportStartX = viewport.left;\n        const viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n        let boxStartX = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let boxEndX = 0;\n        if (horizontalRevealRequest.type === 'range') {\n            const visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n            if (!visibleRanges) {\n                return null;\n            }\n            for (const visibleRange of visibleRanges.ranges) {\n                boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n            }\n        }\n        else {\n            for (const selection of horizontalRevealRequest.selections) {\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    return null;\n                }\n                const visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n                if (!visibleRanges) {\n                    return null;\n                }\n                for (const visibleRange of visibleRanges.ranges) {\n                    boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                    boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n                }\n            }\n        }\n        if (!horizontalRevealRequest.minimalReveal) {\n            boxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n            boxEndX += this._revealHorizontalRightPadding;\n        }\n        if (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n            return null;\n        }\n        const newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n        return {\n            scrollLeft: newScrollLeft,\n            maxHorizontalOffset: boxEndX\n        };\n    }\n    _computeMinimumScrolling(viewportStart, viewportEnd, boxStart, boxEnd, revealAtStart, revealAtEnd) {\n        viewportStart = viewportStart | 0;\n        viewportEnd = viewportEnd | 0;\n        boxStart = boxStart | 0;\n        boxEnd = boxEnd | 0;\n        revealAtStart = !!revealAtStart;\n        revealAtEnd = !!revealAtEnd;\n        const viewportLength = viewportEnd - viewportStart;\n        const boxLength = boxEnd - boxStart;\n        if (boxLength < viewportLength) {\n            // The box would fit in the viewport\n            if (revealAtStart) {\n                return boxStart;\n            }\n            if (revealAtEnd) {\n                return Math.max(0, boxEnd - viewportLength);\n            }\n            if (boxStart < viewportStart) {\n                // The box is above the viewport\n                return boxStart;\n            }\n            else if (boxEnd > viewportEnd) {\n                // The box is below the viewport\n                return Math.max(0, boxEnd - viewportLength);\n            }\n        }\n        else {\n            // The box would not fit in the viewport\n            // Reveal the beginning of the box\n            return boxStart;\n        }\n        return viewportStart;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3542, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class LinesDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const linesDecorationsClassName = d.options.linesDecorationsClassName;\n            const zIndex = d.options.zIndex;\n            if (linesDecorationsClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n            }\n            const firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n            if (firstLineDecorationClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const left = this._decorationsLeft.toString();\n        const width = this._decorationsWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                let addition = '<div class=\"cldr ' + decoration.className;\n                if (decoration.tooltip !== null) {\n                    addition += '\" title=\"' + decoration.tooltip; // The tooltip is already escaped.\n                }\n                addition += common;\n                lineOutput += addition;\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAE9F;;;AACO,MAAM,gCAAgC,6MAAA,CAAA,eAAY;IACrD,YAAY,OAAO,CAAE;QACjB,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG;QAChB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,aAAa,QAAQ,GAAG,CAAC,IAAI,2BAA2B;QAC9D,IAAI,CAAC,gBAAgB,GAAG,WAAW,eAAe;QAClD,IAAI,CAAC,iBAAiB,GAAG,WAAW,gBAAgB;QACpD,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI;IACtC;IACA,UAAU;QACN,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI;QACrC,IAAI,CAAC,aAAa,GAAG;QACrB,KAAK,CAAC;IACV;IACA,2BAA2B;IAC3B,uBAAuB,CAAC,EAAE;QACtB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,aAAa,QAAQ,GAAG,CAAC,IAAI,2BAA2B;QAC9D,IAAI,CAAC,gBAAgB,GAAG,WAAW,eAAe;QAClD,IAAI,CAAC,iBAAiB,GAAG,WAAW,gBAAgB;QACpD,OAAO;IACX;IACA,qBAAqB,CAAC,EAAE;QACpB,OAAO;IACX;IACA,UAAU,CAAC,EAAE;QACT,OAAO;IACX;IACA,eAAe,CAAC,EAAE;QACd,OAAO;IACX;IACA,eAAe,CAAC,EAAE;QACd,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,OAAO,EAAE,gBAAgB;IAC7B;IACA,eAAe,CAAC,EAAE;QACd,OAAO;IACX;IACA,yBAAyB;IACzB,gBAAgB,GAAG,EAAE;QACjB,MAAM,cAAc,IAAI,wBAAwB;QAChD,MAAM,IAAI,EAAE;QACZ,IAAI,OAAO;QACX,IAAK,IAAI,IAAI,GAAG,MAAM,YAAY,MAAM,EAAE,IAAI,KAAK,IAAK;YACpD,MAAM,IAAI,WAAW,CAAC,EAAE;YACxB,MAAM,4BAA4B,EAAE,OAAO,CAAC,yBAAyB;YACrE,MAAM,SAAS,EAAE,OAAO,CAAC,MAAM;YAC/B,IAAI,2BAA2B;gBAC3B,CAAC,CAAC,OAAO,GAAG,IAAI,6MAAA,CAAA,qBAAkB,CAAC,EAAE,KAAK,CAAC,eAAe,EAAE,EAAE,KAAK,CAAC,aAAa,EAAE,2BAA2B,EAAE,OAAO,CAAC,uBAAuB,IAAI,MAAM;YAC7J;YACA,MAAM,+BAA+B,EAAE,OAAO,CAAC,4BAA4B;YAC3E,IAAI,8BAA8B;gBAC9B,CAAC,CAAC,OAAO,GAAG,IAAI,6MAAA,CAAA,qBAAkB,CAAC,EAAE,KAAK,CAAC,eAAe,EAAE,EAAE,KAAK,CAAC,eAAe,EAAE,8BAA8B,EAAE,OAAO,CAAC,uBAAuB,IAAI,MAAM;YAClK;QACJ;QACA,OAAO;IACX;IACA,cAAc,GAAG,EAAE;QACf,MAAM,yBAAyB,IAAI,YAAY,CAAC,eAAe;QAC/D,MAAM,uBAAuB,IAAI,YAAY,CAAC,aAAa;QAC3D,MAAM,WAAW,IAAI,CAAC,OAAO,CAAC,wBAAwB,sBAAsB,IAAI,CAAC,eAAe,CAAC;QACjG,MAAM,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ;QAC3C,MAAM,QAAQ,IAAI,CAAC,iBAAiB,CAAC,QAAQ;QAC7C,MAAM,SAAS,mBAAmB,OAAO,cAAc,QAAQ;QAC/D,MAAM,SAAS,EAAE;QACjB,IAAK,IAAI,aAAa,wBAAwB,cAAc,sBAAsB,aAAc;YAC5F,MAAM,YAAY,aAAa;YAC/B,MAAM,cAAc,QAAQ,CAAC,UAAU,CAAC,cAAc;YACtD,IAAI,aAAa;YACjB,KAAK,MAAM,cAAc,YAAa;gBAClC,IAAI,WAAW,sBAAsB,WAAW,SAAS;gBACzD,IAAI,WAAW,OAAO,KAAK,MAAM;oBAC7B,YAAY,cAAc,WAAW,OAAO,EAAE,kCAAkC;gBACpF;gBACA,YAAY;gBACZ,cAAc;YAClB;YACA,MAAM,CAAC,UAAU,GAAG;QACxB;QACA,IAAI,CAAC,aAAa,GAAG;IACzB;IACA,OAAO,eAAe,EAAE,UAAU,EAAE;QAChC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,OAAO;QACX;QACA,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,gBAAgB;IAC3D;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3652, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const marginClassName = d.options.marginClassName;\n            const zIndex = d.options.zIndex;\n            if (marginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAE9F;;;AACO,MAAM,yCAAyC,6MAAA,CAAA,eAAY;IAC9D,YAAY,OAAO,CAAE;QACjB,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI;IACtC;IACA,UAAU;QACN,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI;QACrC,IAAI,CAAC,aAAa,GAAG;QACrB,KAAK,CAAC;IACV;IACA,2BAA2B;IAC3B,uBAAuB,CAAC,EAAE;QACtB,OAAO;IACX;IACA,qBAAqB,CAAC,EAAE;QACpB,OAAO;IACX;IACA,UAAU,CAAC,EAAE;QACT,OAAO;IACX;IACA,eAAe,CAAC,EAAE;QACd,OAAO;IACX;IACA,eAAe,CAAC,EAAE;QACd,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,OAAO,EAAE,gBAAgB;IAC7B;IACA,eAAe,CAAC,EAAE;QACd,OAAO;IACX;IACA,yBAAyB;IACzB,gBAAgB,GAAG,EAAE;QACjB,MAAM,cAAc,IAAI,wBAAwB;QAChD,MAAM,IAAI,EAAE;QACZ,IAAI,OAAO;QACX,IAAK,IAAI,IAAI,GAAG,MAAM,YAAY,MAAM,EAAE,IAAI,KAAK,IAAK;YACpD,MAAM,IAAI,WAAW,CAAC,EAAE;YACxB,MAAM,kBAAkB,EAAE,OAAO,CAAC,eAAe;YACjD,MAAM,SAAS,EAAE,OAAO,CAAC,MAAM;YAC/B,IAAI,iBAAiB;gBACjB,CAAC,CAAC,OAAO,GAAG,IAAI,6MAAA,CAAA,qBAAkB,CAAC,EAAE,KAAK,CAAC,eAAe,EAAE,EAAE,KAAK,CAAC,aAAa,EAAE,iBAAiB,MAAM;YAC9G;QACJ;QACA,OAAO;IACX;IACA,cAAc,GAAG,EAAE;QACf,MAAM,yBAAyB,IAAI,YAAY,CAAC,eAAe;QAC/D,MAAM,uBAAuB,IAAI,YAAY,CAAC,aAAa;QAC3D,MAAM,WAAW,IAAI,CAAC,OAAO,CAAC,wBAAwB,sBAAsB,IAAI,CAAC,eAAe,CAAC;QACjG,MAAM,SAAS,EAAE;QACjB,IAAK,IAAI,aAAa,wBAAwB,cAAc,sBAAsB,aAAc;YAC5F,MAAM,YAAY,aAAa;YAC/B,MAAM,cAAc,QAAQ,CAAC,UAAU,CAAC,cAAc;YACtD,IAAI,aAAa;YACjB,KAAK,MAAM,cAAc,YAAa;gBAClC,cAAc,sBAAsB,WAAW,SAAS,GAAG;YAC/D;YACA,MAAM,CAAC,UAAU,GAAG;QACxB;QACA,IAAI,CAAC,aAAa,GAAG;IACzB;IACA,OAAO,eAAe,EAAE,UAAU,EAAE;QAChC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,OAAO;QACX;QACA,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,gBAAgB;IAC3D;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3742, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const allCharCodes = (() => {\n    const v = [];\n    for (let i = 32 /* Constants.START_CH_CODE */; i <= 126 /* Constants.END_CH_CODE */; i++) {\n        v.push(i);\n    }\n    v.push(65533 /* Constants.UNKNOWN_CODE */);\n    return v;\n})();\nexport const getCharIndex = (chCode, fontScale) => {\n    chCode -= 32 /* Constants.START_CH_CODE */;\n    if (chCode < 0 || chCode > 96 /* Constants.CHAR_COUNT */) {\n        if (fontScale <= 2) {\n            // for smaller scales, we can get away with using any ASCII character...\n            return (chCode + 96 /* Constants.CHAR_COUNT */) % 96 /* Constants.CHAR_COUNT */;\n        }\n        return 96 /* Constants.CHAR_COUNT */ - 1; // unknown symbol\n    }\n    return chCode;\n};\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;AACvF,MAAM,eAAe,CAAC;IACzB,MAAM,IAAI,EAAE;IACZ,IAAK,IAAI,IAAI,GAAG,2BAA2B,KAAI,KAAK,IAAI,yBAAyB,KAAI,IAAK;QACtF,EAAE,IAAI,CAAC;IACX;IACA,EAAE,IAAI,CAAC,MAAM,0BAA0B;IACvC,OAAO;AACX,CAAC;AACM,MAAM,eAAe,CAAC,QAAQ;IACjC,UAAU,GAAG,2BAA2B;IACxC,IAAI,SAAS,KAAK,SAAS,GAAG,wBAAwB,KAAI;QACtD,IAAI,aAAa,GAAG;YAChB,wEAAwE;YACxE,OAAO,CAAC,SAAS,GAAG,wBAAwB,GAAE,IAAI,GAAG,wBAAwB;QACjF;QACA,OAAO,GAAG,wBAAwB,MAAK,GAAG,iBAAiB;IAC/D;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3774, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3871, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nconst charTable = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15\n};\nconst decodeData = (str) => {\n    const output = new Uint8ClampedArray(str.length / 2);\n    for (let i = 0; i < str.length; i += 2) {\n        output[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n    }\n    return output;\n};\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n    const chars = '0123456789ABCDEF';\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n        output += chars[data[i] >> 4] + chars[data[i] & 0xf];\n    }\n    return output;\n};\n*/\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps = {\n    1: createSingleCallFunction(() => decodeData('0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792')),\n    2: createSingleCallFunction(() => decodeDatan};\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;;AACA,MAAM,YAAY;IACd,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACP;AACA,MAAM,aAAa,CAAC;IAChB,MAAM,SAAS,IAAI,kBAAkB,IAAI,MAAM,GAAG;IAClD,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,KAAK,EAAG;QACpC,MAAM,CAAC,KAAK,EAAE,GAAG,AAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAM,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG;IACzE;IACA,OAAO;AACX;AAgBO,MAAM,mBAAmB;IAC5B,GAAG,CAAA,GAAA,6KAAA,CAAA,2BAAwB,AAAD,EAAE,IAAM,WAAW;IAC7C,GAAG,CAAA,GAAA,6KAAA,CAAA,2BAAwB,AAAD,EAAE,IAAM,WAAW;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3914, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n    /**\n     * Creates a new character renderer factory with the given scale.\n     */\n    static create(scale, fontFamily) {\n        // renderers are immutable. By default we'll 'create' a new minimap\n        // character renderer whenever we switch editors, no need to do extra work.\n        if (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n            return this.lastCreated;\n        }\n        let factory;\n        if (prebakedMiniMaps[scale]) {\n            factory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n        }\n        else {\n            factory = MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(fontFamily).data, scale);\n        }\n        this.lastFontFamily = fontFamily;\n        this.lastCreated = factory;\n        return factory;\n    }\n    /**\n     * Creates the font sample data, writing to a canvas.\n     */\n    static createSampleData(fontFamily) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.style.height = `${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px`;\n        canvas.height = 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n        canvas.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        canvas.style.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ + 'px';\n        ctx.fillStyle = '#ffffff';\n        ctx.font = `bold ${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        let x = 0;\n        for (const code of allCharCodes) {\n            ctx.fillText(String.fromCharCode(code), x, 16 /* Constants.SAMPLED_CHAR_HEIGHT */ / 2);\n            x += 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        }\n        return ctx.getImageData(0, 0, 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */, 16 /* Constants.SAMPLED_CHAR_HEIGHT */);\n    }\n    /**\n     * Creates a character renderer from the canvas sample data.\n     */\n    static createFromSampleData(source, scale) {\n        const expectedLength = 16 /* Constants.SAMPLED_CHAR_HEIGHT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */ * 96 /* Constants.CHAR_COUNT */;\n        if (source.length !== expectedLength) {\n            throw new Error('Unexpected source in MinimapCharRenderer');\n        }\n        const charData = MinimapCharRendererFactory._downsample(source, scale);\n        return new MinimapCharRenderer(charData, scale);\n    }\n    static _downsampleChar(source, sourceOffset, dest, destOffset, scale) {\n        const width = 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const height = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale;\n        let targetIndex = destOffset;\n        let brightest = 0;\n        // This is essentially an ad-hoc rescaling algorithm. Standard approaches\n        // like bicubic interpolation are awesome for scaling between image sizes,\n        // but don't work so well when scaling to very small pixel values, we end\n        // up with blurry, indistinct forms.\n        //\n        // The approach taken here is simply mapping each source pixel to the target\n        // pixels, and taking the weighted values for all pixels in each, and then\n        // averaging them out. Finally we apply an intensity boost in _downsample,\n        // since when scaling to the smallest pixel sizes there's more black space\n        // which causes characters to be much less distinct.\n        for (let y = 0; y < height; y++) {\n            // 1. For this destination pixel, get the source pixels we're sampling\n            // from (x1, y1) to the next pixel (x2, y2)\n            const sourceY1 = (y / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            const sourceY2 = ((y + 1) / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            for (let x = 0; x < width; x++) {\n                const sourceX1 = (x / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                const sourceX2 = ((x + 1) / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                // 2. Sample all of them, summing them up and weighting them. Similar\n                // to bilinear interpolation.\n                let value = 0;\n                let samples = 0;\n                for (let sy = sourceY1; sy < sourceY2; sy++) {\n                    const sourceRow = sourceOffset + Math.floor(sy) * 3840 /* Constants.RGBA_SAMPLED_ROW_WIDTH */;\n                    const yBalance = 1 - (sy - Math.floor(sy));\n                    for (let sx = sourceX1; sx < sourceX2; sx++) {\n                        const xBalance = 1 - (sx - Math.floor(sx));\n                        const sourceIndex = sourceRow + Math.floor(sx) * 4 /* Constants.RGBA_CHANNELS_CNT */;\n                        const weight = xBalance * yBalance;\n                        samples += weight;\n                        value += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n                    }\n                }\n                const final = value / samples;\n                brightest = Math.max(brightest, final);\n                dest[targetIndex++] = toUint8(final);\n            }\n        }\n        return brightest;\n    }\n    static _downsample(data, scale) {\n        const pixelsPerCharacter = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale * 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const resultLen = pixelsPerCharacter * 96 /* Constants.CHAR_COUNT */;\n        const result = new Uint8ClampedArray(resultLen);\n        let resultOffset = 0;\n        let sourceOffset = 0;\n        let brightest = 0;\n        for (let charIndex = 0; charIndex < 96 /* Constants.CHAR_COUNT */; charIndex++) {\n            brightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n            resultOffset += pixelsPerCharacter;\n            sourceOffset += 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        }\n        if (brightest > 0) {\n            const adjust = 255 / brightest;\n            for (let i = 0; i < resultLen; i++) {\n                result[i] *= adjust;\n            }\n        }\n        return result;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4048, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/rgba.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { ViewModelDecoration } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity, editorForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../base/browser/fonts.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nconst GUTTER_DECORATION_WIDTH = 2;\nclass MinimapOptions {\n    constructor(configuration, theme, tokensColorTracker) {\n        const options = configuration.options;\n        const pixelRatio = options.get(144 /* EditorOption.pixelRatio */);\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const minimapLayout = layoutInfo.minimap;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const minimapOpts = options.get(73 /* EditorOption.minimap */);\n        this.renderMinimap = minimapLayout.renderMinimap;\n        this.size = minimapOpts.size;\n        this.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n        this.scrollBeyondLastLine = options.get(106 /* EditorOption.scrollBeyondLastLine */);\n        this.paddingTop = options.get(84 /* EditorOption.padding */).top;\n        this.paddingBottom = options.get(84 /* EditorOption.padding */).bottom;\n        this.showSlider = minimapOpts.showSlider;\n        this.autohide = minimapOpts.autohide;\n        this.pixelRatio = pixelRatio;\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.minimapLeft = minimapLayout.minimapLeft;\n        this.minimapWidth = minimapLayout.minimapWidth;\n        this.minimapHeight = layoutInfo.height;\n        this.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n        this.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n        this.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n        this.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n        this.isSampling = minimapLayout.minimapIsSampling;\n        this.editorHeight = layoutInfo.height;\n        this.fontScale = minimapLayout.minimapScale;\n        this.minimapLineHeight = minimapLayout.minimapLineHeight;\n        this.minimapCharWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.fontScale;\n        this.sectionHeaderFontFamily = DEFAULT_FONT_FAMILY;\n        this.sectionHeaderFontSize = minimapOpts.sectionHeaderFontSize * pixelRatio;\n        this.sectionHeaderLetterSpacing = minimapOpts.sectionHeaderLetterSpacing; // intentionally not multiplying by pixelRatio\n        this.sectionHeaderFontColor = MinimapOptions._getSectionHeaderColor(theme, tokensColorTracker.getColor(1 /* ColorId.DefaultForeground */));\n        this.charRenderer = createSingleCallFunction(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n        this.defaultBackgroundColor = tokensColorTracker.getColor(2 /* ColorId.DefaultBackground */);\n        this.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n        this.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n    }\n    static _getMinimapBackground(theme, defaultBackgroundColor) {\n        const themeColor = theme.getColor(minimapBackground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultBackgroundColor;\n    }\n    static _getMinimapForegroundOpacity(theme) {\n        const themeColor = theme.getColor(minimapForegroundOpacity);\n        if (themeColor) {\n            return RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n        }\n        return 255;\n    }\n    static _getSectionHeaderColor(theme, defaultForegroundColor) {\n        const themeColor = theme.getColor(editorForeground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultForegroundColor;\n    }\n    equals(other) {\n        return (this.renderMinimap === other.renderMinimap\n            && this.size === other.size\n            && this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n            && this.paddingTop === other.paddingTop\n            && this.paddingBottom === other.paddingBottom\n            && this.showSlider === other.showSlider\n            && this.autohide === other.autohide\n            && this.pixelRatio === other.pixelRatio\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.lineHeight === other.lineHeight\n            && this.minimapLeft === other.minimapLeft\n            && this.minimapWidth === other.minimapWidth\n            && this.minimapHeight === other.minimapHeight\n            && this.canvasInnerWidth === other.canvasInnerWidth\n            && this.canvasInnerHeight === other.canvasInnerHeight\n            && this.canvasOuterWidth === other.canvasOuterWidth\n            && this.canvasOuterHeight === other.canvasOuterHeight\n            && this.isSampling === other.isSampling\n            && this.editorHeight === other.editorHeight\n            && this.fontScale === other.fontScale\n            && this.minimapLineHeight === other.minimapLineHeight\n            && this.minimapCharWidth === other.minimapCharWidth\n            && this.sectionHeaderFontSize === other.sectionHeaderFontSize\n            && this.sectionHeaderLetterSpacing === other.sectionHeaderLetterSpacing\n            && this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n            && this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n            && this.foregroundAlpha === other.foregroundAlpha);\n    }\n}\nclass MinimapLayout {\n    constructor(\n    /**\n     * The given editor scrollTop (input).\n     */\n    scrollTop, \n    /**\n     * The given editor scrollHeight (input).\n     */\n    scrollHeight, sliderNeeded, _computedSliderRatio, \n    /**\n     * slider dom node top (in CSS px)\n     */\n    sliderTop, \n    /**\n     * slider dom node height (in CSS px)\n     */\n    sliderHeight, \n    /**\n     * empty lines to reserve at the top of the minimap.\n     */\n    topPaddingLineCount, \n    /**\n     * minimap render start line number.\n     */\n    startLineNumber, \n    /**\n     * minimap render end line number.\n     */\n    endLineNumber) {\n        this.scrollTop = scrollTop;\n        this.scrollHeight = scrollHeight;\n        this.sliderNeeded = sliderNeeded;\n        this._computedSliderRatio = _computedSliderRatio;\n        this.sliderTop = sliderTop;\n        this.sliderHeight = sliderHeight;\n        this.topPaddingLineCount = topPaddingLineCount;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollTopFromDelta(delta) {\n        return Math.round(this.scrollTop + delta / this._computedSliderRatio);\n    }\n    getDesiredScrollTopFromTouchLocation(pageY) {\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n    }\n    /**\n     * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n     */\n    intersectWithViewport(range) {\n        const startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n        const endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n        if (startLineNumber > endLineNumber) {\n            // entirely outside minimap's viewport\n            return null;\n        }\n        return [startLineNumber, endLineNumber];\n    }\n    /**\n     * Get the inner minimap y coordinate for a line number.\n     */\n    getYForLineNumber(lineNumber, minimapLineHeight) {\n        return +(lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n    }\n    static create(options, viewportStartLineNumber, viewportEndLineNumber, viewportStartLineNumberVerticalOffset, viewportHeight, viewportContainsWhitespaceGaps, lineCount, realLineCount, scrollTop, scrollHeight, previousLayout) {\n        const pixelRatio = options.pixelRatio;\n        const minimapLineHeight = options.minimapLineHeight;\n        const minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n        const lineHeight = options.lineHeight;\n        if (options.minimapHeightIsEditorHeight) {\n            let logicalScrollHeight = (realLineCount * options.lineHeight\n                + options.paddingTop\n                + options.paddingBottom);\n            if (options.scrollBeyondLastLine) {\n                logicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n            }\n            const sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n            const maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n            // The slider can move from 0 to `maxMinimapSliderTop`\n            // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n            const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n            const sliderTop = (scrollTop * computedSliderRatio);\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            const maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n            const topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n        }\n        // The visible line count in a viewport can change due to a number of reasons:\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n        //    e.g. for a line height of 20, and a viewport height of 600\n        //          * scrollTop = 0  => visible lines are [1, 30]\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n        //          * scrollTop = 20 => visible lines are [2, 31]\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n        // We must first establish a desirable slider height.\n        let sliderHeight;\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n            // case b) from above: there are whitespace gaps in the viewport.\n            // In this case, the height of the slider directly reflects the visible line count.\n            const viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        else {\n            // The slider has a stable height\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        const extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n        let extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n        if (options.scrollBeyondLastLine) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            extraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n        }\n        let maxMinimapSliderTop;\n        if (extraLinesAtTheBottom > 0) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\n            maxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n        }\n        else {\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n            maxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n        }\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n        // The slider can move from 0 to `maxMinimapSliderTop`\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n        const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n        const sliderTop = (scrollTop * computedSliderRatio);\n        if (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n            // All lines fit in the minimap\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n        }\n        else {\n            let consideringStartLineNumber;\n            if (viewportStartLineNumber > 1) {\n                consideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n            }\n            else {\n                consideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n            }\n            let topPaddingLineCount;\n            let startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n            if (startLineNumber < extraLinesAtTheTop) {\n                topPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n                startLineNumber = 1;\n            }\n            else {\n                topPaddingLineCount = 0;\n                startLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n            }\n            // Avoid flickering caused by a partial viewport start line\n            // by being consistent w.r.t. the previous layout decision\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n                if (previousLayout.scrollTop > scrollTop) {\n                    // Scrolling up => never increase `startLineNumber`\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n                if (previousLayout.scrollTop < scrollTop) {\n                    // Scrolling down => never decrease `startLineNumber`\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n            }\n            const endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n            const partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n            let sliderTopAligned;\n            if (scrollTop >= options.paddingTop) {\n                sliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            else {\n                sliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            return new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n        }\n    }\n}\nclass MinimapLine {\n    static { this.INVALID = new MinimapLine(-1); }\n    constructor(dy) {\n        this.dy = dy;\n    }\n    onContentChanged() {\n        this.dy = -1;\n    }\n    onTokensChanged() {\n        this.dy = -1;\n    }\n}\nclass RenderData {\n    constructor(renderedLayout, imageData, lines) {\n        this.renderedLayout = renderedLayout;\n        this._imageData = imageData;\n        this._renderedLines = new RenderedLinesCollection({\n            createLine: () => MinimapLine.INVALID\n        });\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\n    }\n    /**\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n     */\n    linesEquals(layout) {\n        if (!this.scrollEquals(layout)) {\n            return false;\n        }\n        const tmp = this._renderedLines._get();\n        const lines = tmp.lines;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].dy === -1) {\n                // This line is invalid\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Check if the current RenderData matches the new layout's scroll position\n     */\n    scrollEquals(layout) {\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\n    }\n    _get() {\n        const tmp = this._renderedLines._get();\n        return {\n            imageData: this._imageData,\n            rendLineNumberStart: tmp.rendLineNumberStart,\n            lines: tmp.lines\n        };\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        return this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n    }\n    onTokensChanged(ranges) {\n        return this._renderedLines.onTokensChanged(ranges);\n    }\n}\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n    constructor(ctx, WIDTH, HEIGHT, background) {\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n        this._buffers = [\n            ctx.createImageData(WIDTH, HEIGHT),\n            ctx.createImageData(WIDTH, HEIGHT)\n        ];\n        this._lastUsedBuffer = 0;\n    }\n    getBuffer() {\n        // rotate buffers\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n        const result = this._buffers[this._lastUsedBuffer];\n        // fill with background color\n        result.data.set(this._backgroundFillData);\n        return result;\n    }\n    static _createBackgroundFillData(WIDTH, HEIGHT, background) {\n        const backgroundR = background.r;\n        const backgroundG = background.g;\n        const backgroundB = background.b;\n        const backgroundA = background.a;\n        const result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n        let offset = 0;\n        for (let i = 0; i < HEIGHT; i++) {\n            for (let j = 0; j < WIDTH; j++) {\n                result[offset] = backgroundR;\n                result[offset + 1] = backgroundG;\n                result[offset + 2] = backgroundB;\n                result[offset + 3] = backgroundA;\n                offset += 4;\n            }\n        }\n        return result;\n    }\n}\nclass MinimapSamplingState {\n    static compute(options, viewLineCount, oldSamplingState) {\n        if (options.renderMinimap === 0 /* RenderMinimap.None */ || !options.isSampling) {\n            return [null, []];\n        }\n        // ratio is intentionally not part of the layout to avoid the layout changing all the time\n        // so we need to recompute it again...\n        const { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n            viewLineCount: viewLineCount,\n            scrollBeyondLastLine: options.scrollBeyondLastLine,\n            paddingTop: options.paddingTop,\n            paddingBottom: options.paddingBottom,\n            height: options.editorHeight,\n            lineHeight: options.lineHeight,\n            pixelRatio: options.pixelRatio\n        });\n        const ratio = viewLineCount / minimapLineCount;\n        const halfRatio = ratio / 2;\n        if (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n            const result = [];\n            result[0] = 1;\n            if (minimapLineCount > 1) {\n                for (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n                    result[i] = Math.round(i * ratio + halfRatio);\n                }\n                result[minimapLineCount - 1] = viewLineCount;\n            }\n            return [new MinimapSamplingState(ratio, result), []];\n        }\n        const oldMinimapLines = oldSamplingState.minimapLines;\n        const oldLength = oldMinimapLines.length;\n        const result = [];\n        let oldIndex = 0;\n        let oldDeltaLineCount = 0;\n        let minViewLineNumber = 1;\n        const MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n        let events = [];\n        let lastEvent = null;\n        for (let i = 0; i < minimapLineCount; i++) {\n            const fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n            const toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n            while (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                        lastEvent.deleteToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount--;\n                }\n                oldIndex++;\n            }\n            let selectedViewLineNumber;\n            if (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n                // reuse the old sampled line\n                selectedViewLineNumber = oldMinimapLines[oldIndex];\n                oldIndex++;\n            }\n            else {\n                if (i === 0) {\n                    selectedViewLineNumber = 1;\n                }\n                else if (i + 1 === minimapLineCount) {\n                    selectedViewLineNumber = viewLineCount;\n                }\n                else {\n                    selectedViewLineNumber = Math.round(i * ratio + halfRatio);\n                }\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n                        lastEvent.insertToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount++;\n                }\n            }\n            result[i] = selectedViewLineNumber;\n            minViewLineNumber = selectedViewLineNumber;\n        }\n        if (events.length < MAX_EVENT_COUNT) {\n            while (oldIndex < oldLength) {\n                const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                    lastEvent.deleteToLineNumber++;\n                }\n                else {\n                    lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                    events.push(lastEvent);\n                }\n                oldDeltaLineCount--;\n                oldIndex++;\n            }\n        }\n        else {\n            // too many events, just give up\n            events = [{ type: 'flush' }];\n        }\n        return [new MinimapSamplingState(ratio, result), events];\n    }\n    constructor(samplingRatio, minimapLines // a map of 0-based minimap line indexes to 1-based view line numbers\n    ) {\n        this.samplingRatio = samplingRatio;\n        this.minimapLines = minimapLines;\n    }\n    modelLineToMinimapLine(lineNumber) {\n        return Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n    }\n    /**\n     * Will return null if the model line ranges are not intersecting with a sampled model line.\n     */\n    modelLineRangeToMinimapLineRange(fromLineNumber, toLineNumber) {\n        let fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n        while (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n            fromLineIndex--;\n        }\n        let toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n        while (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n            toLineIndex++;\n        }\n        if (fromLineIndex === toLineIndex) {\n            const sampledLineNumber = this.minimapLines[fromLineIndex];\n            if (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n                // This line is not part of the sampled lines ==> nothing to do\n                return null;\n            }\n        }\n        return [fromLineIndex + 1, toLineIndex + 1];\n    }\n    /**\n     * Will always return a range, even if it is not intersecting with a sampled model line.\n     */\n    decorationLineRangeToMinimapLineRange(startLineNumber, endLineNumber) {\n        let minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n        let minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n        if (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n            if (minimapLineEnd === this.minimapLines.length) {\n                if (minimapLineStart > 1) {\n                    minimapLineStart--;\n                }\n            }\n            else {\n                minimapLineEnd++;\n            }\n        }\n        return [minimapLineStart, minimapLineEnd];\n    }\n    onLinesDeleted(e) {\n        // have the mapping be sticky\n        const deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        let changeStartIndex = this.minimapLines.length;\n        let changeEndIndex = 0;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            if (this.minimapLines[i] <= e.toLineNumber) {\n                // this line got deleted => move to previous available\n                this.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n                changeStartIndex = Math.min(changeStartIndex, i);\n                changeEndIndex = Math.max(changeEndIndex, i);\n            }\n            else {\n                this.minimapLines[i] -= deletedLineCount;\n            }\n        }\n        return [changeStartIndex, changeEndIndex];\n    }\n    onLinesInserted(e) {\n        // have the mapping be sticky\n        const insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            this.minimapLines[i] += insertedLineCount;\n        }\n    }\n}\nexport class Minimap extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._sectionHeaderCache = new LRUCache(10, 1.5);\n        this.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n        this._selections = [];\n        this._minimapSelections = null;\n        this.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        const [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n        this._samplingState = samplingState;\n        this._shouldCheckSampling = false;\n        this._actual = new InnerMinimap(context.theme, this);\n    }\n    dispose() {\n        this._actual.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this._actual.getDomNode();\n    }\n    _onOptionsMaybeChanged() {\n        const opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        if (this.options.equals(opts)) {\n            return false;\n        }\n        this.options = opts;\n        this._recreateLineSampling();\n        this._actual.onDidChangeOptions();\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        this._minimapSelections = null;\n        return this._actual.onSelectionChanged();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsMinimap) {\n            return this._actual.onDecorationsChanged();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        if (this._samplingState) {\n            this._shouldCheckSampling = true;\n        }\n        return this._actual.onFlushed();\n    }\n    onLinesChanged(e) {\n        if (this._samplingState) {\n            const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n            if (minimapLineRange) {\n                return this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onLinesChanged(e.fromLineNumber, e.count);\n        }\n    }\n    onLinesDeleted(e) {\n        if (this._samplingState) {\n            const [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n            if (changeStartIndex <= changeEndIndex) {\n                this._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n            }\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onLinesInserted(e) {\n        if (this._samplingState) {\n            this._samplingState.onLinesInserted(e);\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onScrollChanged(e) {\n        return this._actual.onScrollChanged();\n    }\n    onThemeChanged(e) {\n        this._actual.onThemeChanged();\n        this._onOptionsMaybeChanged();\n        return true;\n    }\n    onTokensChanged(e) {\n        if (this._samplingState) {\n            const ranges = [];\n            for (const range of e.ranges) {\n                const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n                if (minimapLineRange) {\n                    ranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n                }\n            }\n            if (ranges.length) {\n                return this._actual.onTokensChanged(ranges);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onTokensChanged(e.ranges);\n        }\n    }\n    onTokensColorsChanged(e) {\n        this._onOptionsMaybeChanged();\n        return this._actual.onTokensColorsChanged();\n    }\n    onZonesChanged(e) {\n        return this._actual.onZonesChanged();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._shouldCheckSampling) {\n            this._shouldCheckSampling = false;\n            this._recreateLineSampling();\n        }\n    }\n    render(ctx) {\n        let viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n        let viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n        if (this._samplingState) {\n            viewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n            viewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n        }\n        const minimapCtx = {\n            viewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n            scrollWidth: ctx.scrollWidth,\n            scrollHeight: ctx.scrollHeight,\n            viewportStartLineNumber: viewportStartLineNumber,\n            viewportEndLineNumber: viewportEndLineNumber,\n            viewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n            scrollTop: ctx.scrollTop,\n            scrollLeft: ctx.scrollLeft,\n            viewportWidth: ctx.viewportWidth,\n            viewportHeight: ctx.viewportHeight,\n        };\n        this._actual.render(minimapCtx);\n    }\n    //#region IMinimapModel\n    _recreateLineSampling() {\n        this._minimapSelections = null;\n        const wasSampling = Boolean(this._samplingState);\n        const [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n        this._samplingState = samplingState;\n        if (wasSampling && this._samplingState) {\n            // was sampling, is sampling\n            for (const event of events) {\n                switch (event.type) {\n                    case 'deleted':\n                        this._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n                        break;\n                    case 'inserted':\n                        this._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n                        break;\n                    case 'flush':\n                        this._actual.onFlushed();\n                        break;\n                }\n            }\n        }\n    }\n    getLineCount() {\n        if (this._samplingState) {\n            return this._samplingState.minimapLines.length;\n        }\n        return this._context.viewModel.getLineCount();\n    }\n    getRealLineCount() {\n        return this._context.viewModel.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineContent(lineNumber);\n    }\n    getLineMaxColumn(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineMaxColumn(lineNumber);\n    }\n    getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed) {\n        if (this._samplingState) {\n            const result = [];\n            for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n                if (needed[lineIndex]) {\n                    result[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n                }\n                else {\n                    result[lineIndex] = null;\n                }\n            }\n            return result;\n        }\n        return this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n    }\n    getSelections() {\n        if (this._minimapSelections === null) {\n            if (this._samplingState) {\n                this._minimapSelections = [];\n                for (const selection of this._selections) {\n                    const [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n                    this._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n                }\n            }\n            else {\n                this._minimapSelections = this._selections;\n            }\n        }\n        return this._minimapSelections;\n    }\n    getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        const decorations = this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n            .filter(decoration => !decoration.options.minimap?.sectionHeaderStyle);\n        if (this._samplingState) {\n            const result = [];\n            for (const decoration of decorations) {\n                if (!decoration.options.minimap) {\n                    continue;\n                }\n                const range = decoration.range;\n                const minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n                const minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n                result.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n            }\n            return result;\n        }\n        return decorations;\n    }\n    getSectionHeaderDecorationsInViewport(startLineNumber, endLineNumber) {\n        const minimapLineHeight = this.options.minimapLineHeight;\n        const sectionHeaderFontSize = this.options.sectionHeaderFontSize;\n        const headerHeightInMinimapLines = sectionHeaderFontSize / minimapLineHeight;\n        startLineNumber = Math.floor(Math.max(1, startLineNumber - headerHeightInMinimapLines));\n        return this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n            .filter(decoration => !!decoration.options.minimap?.sectionHeaderStyle);\n    }\n    _getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        let visibleRange;\n        if (this._samplingState) {\n            const modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n            const modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n            visibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n        }\n        else {\n            visibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n        }\n        return this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n    }\n    getSectionHeaderText(decoration, fitWidth) {\n        const headerText = decoration.options.minimap?.sectionHeaderText;\n        if (!headerText) {\n            return null;\n        }\n        const cachedText = this._sectionHeaderCache.get(headerText);\n        if (cachedText) {\n            return cachedText;\n        }\n        const fittedText = fitWidth(headerText);\n        this._sectionHeaderCache.set(headerText, fittedText);\n        return fittedText;\n    }\n    getOptions() {\n        return this._context.viewModel.model.getOptions();\n    }\n    revealLineNumber(lineNumber) {\n        if (this._samplingState) {\n            lineNumber = this._samplingState.minimapLines[lineNumber - 1];\n        }\n        this._context.viewModel.revealRange('mouse', false, new Range(lineNumber, 1, lineNumber, 1), 1 /* viewEvents.VerticalRevealType.Center */, 0 /* ScrollType.Smooth */);\n    }\n    setScrollTop(scrollTop) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollTop\n        }, 1 /* ScrollType.Immediate */);\n    }\n}\nclass InnerMinimap extends Disposable {\n    constructor(theme, model) {\n        super();\n        this._renderDecorations = false;\n        this._gestureInProgress = false;\n        this._theme = theme;\n        this._model = model;\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 9 /* PartFingerprint.Minimap */);\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._shadow = createFastDomNode(document.createElement('div'));\n        this._shadow.setClassName('minimap-shadow-hidden');\n        this._domNode.appendChild(this._shadow);\n        this._canvas = createFastDomNode(document.createElement('canvas'));\n        this._canvas.setPosition('absolute');\n        this._canvas.setLeft(0);\n        this._domNode.appendChild(this._canvas);\n        this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n        this._decorationsCanvas.setPosition('absolute');\n        this._decorationsCanvas.setClassName('minimap-decorations-layer');\n        this._decorationsCanvas.setLeft(0);\n        this._domNode.appendChild(this._decorationsCanvas);\n        this._slider = createFastDomNode(document.createElement('div'));\n        this._slider.setPosition('absolute');\n        this._slider.setClassName('minimap-slider');\n        this._slider.setLayerHinting(true);\n        this._slider.setContain('strict');\n        this._domNode.appendChild(this._slider);\n        this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n        this._sliderHorizontal.setPosition('absolute');\n        this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n        this._slider.appendChild(this._sliderHorizontal);\n        this._applyLayout();\n        this._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            const renderMinimap = this._model.options.renderMinimap;\n            if (renderMinimap === 0 /* RenderMinimap.None */) {\n                return;\n            }\n            if (!this._lastRenderData) {\n                return;\n            }\n            if (this._model.options.size !== 'proportional') {\n                if (e.button === 0 && this._lastRenderData) {\n                    // pretend the click occurred in the center of the slider\n                    const position = dom.getDomNodePagePosition(this._slider.domNode);\n                    const initialPosY = position.top + position.height / 2;\n                    this._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n                }\n                return;\n            }\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n            const lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n            let lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n            lineNumber = Math.min(lineNumber, this._model.getLineCount());\n            this._model.revealLineNumber(lineNumber);\n        });\n        this._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n        this._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.button === 0 && this._lastRenderData) {\n                this._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n            }\n        });\n        this._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n        this._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData) {\n                this._slider.toggleClassName('active', true);\n                this._gestureInProgress = true;\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData && this._gestureInProgress) {\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._gestureInProgress = false;\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    _startSliderDragging(e, initialPosY, initialSliderState) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPosX = e.pageX;\n        this._slider.toggleClassName('active', true);\n        const handlePointerMove = (posy, posx) => {\n            const minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n            const pointerOrthogonalDelta = Math.min(Math.abs(posx - initialPosX), Math.abs(posx - minimapPosition.left), Math.abs(posx - minimapPosition.left - minimapPosition.width));\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._model.setScrollTop(initialSliderState.scrollTop);\n                return;\n            }\n            const pointerDelta = posy - initialPosY;\n            this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n        };\n        if (e.pageY !== initialPosY) {\n            handlePointerMove(e.pageY, initialPosX);\n        }\n        this._sliderPointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, pointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX), () => {\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    scrollDueToTouchEvent(touch) {\n        const startY = this._domNode.domNode.getBoundingClientRect().top;\n        const scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n        this._model.setScrollTop(scrollTop);\n    }\n    dispose() {\n        this._pointerDownListener.dispose();\n        this._sliderPointerMoveMonitor.dispose();\n        this._sliderPointerDownListener.dispose();\n        this._gestureDisposable.dispose();\n        this._sliderTouchStartListener.dispose();\n        this._sliderTouchMoveListener.dispose();\n        this._sliderTouchEndListener.dispose();\n        super.dispose();\n    }\n    _getMinimapDomNodeClassName() {\n        const class_ = ['minimap'];\n        if (this._model.options.showSlider === 'always') {\n            class_.push('slider-always');\n        }\n        else {\n            class_.push('slider-mouseover');\n        }\n        if (this._model.options.autohide) {\n            class_.push('autohide');\n        }\n        return class_.join(' ');\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _applyLayout() {\n        this._domNode.setLeft(this._model.options.minimapLeft);\n        this._domNode.setWidth(this._model.options.minimapWidth);\n        this._domNode.setHeight(this._model.options.minimapHeight);\n        this._shadow.setHeight(this._model.options.minimapHeight);\n        this._canvas.setWidth(this._model.options.canvasOuterWidth);\n        this._canvas.setHeight(this._model.options.canvasOuterHeight);\n        this._canvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._canvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n        this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n        this._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._slider.setWidth(this._model.options.minimapWidth);\n    }\n    _getBuffer() {\n        if (!this._buffers) {\n            if (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._model.options.canvasInnerWidth, this._model.options.canvasInnerHeight, this._model.options.backgroundColor);\n            }\n        }\n        return this._buffers ? this._buffers.getBuffer() : null;\n    }\n    // ---- begin view event handlers\n    onDidChangeOptions() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._applyLayout();\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    }\n    onSelectionChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onDecorationsChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onFlushed() {\n        this._lastRenderData = null;\n        return true;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n        }\n        return false;\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._lastRenderData?.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n        return true;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._lastRenderData?.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n        return true;\n    }\n    onScrollChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onThemeChanged() {\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._renderDecorations = true;\n        return true;\n    }\n    onTokensChanged(ranges) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onTokensChanged(ranges);\n        }\n        return false;\n    }\n    onTokensColorsChanged() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        return true;\n    }\n    onZonesChanged() {\n        this._lastRenderData = null;\n        return true;\n    }\n    // --- end event handlers\n    render(renderingCtx) {\n        const renderMinimap = this._model.options.renderMinimap;\n        if (renderMinimap === 0 /* RenderMinimap.None */) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n            this._sliderHorizontal.setWidth(0);\n            this._sliderHorizontal.setHeight(0);\n            return;\n        }\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n        }\n        else {\n            this._shadow.setClassName('minimap-shadow-visible');\n        }\n        const layout = MinimapLayout.create(this._model.options, renderingCtx.viewportStartLineNumber, renderingCtx.viewportEndLineNumber, renderingCtx.viewportStartLineNumberVerticalOffset, renderingCtx.viewportHeight, renderingCtx.viewportContainsWhitespaceGaps, this._model.getLineCount(), this._model.getRealLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n        this._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n        this._slider.setTop(layout.sliderTop);\n        this._slider.setHeight(layout.sliderHeight);\n        // Compute horizontal slider coordinates\n        this._sliderHorizontal.setLeft(0);\n        this._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n        this._sliderHorizontal.setTop(0);\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\n        this.renderDecorations(layout);\n        this._lastRenderData = this.renderLines(layout);\n    }\n    renderDecorations(layout) {\n        if (this._renderDecorations) {\n            this._renderDecorations = false;\n            const selections = this._model.getSelections();\n            selections.sort(Range.compareRangesUsingStarts);\n            const decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n            decorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n            const { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const minimapCharWidth = this._model.options.minimapCharWidth;\n            const tabSize = this._model.getOptions().tabSize;\n            const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n            // We first need to render line highlights and then render decorations on top of those.\n            // But we need to pick a single color for each line, and use that as a line highlight.\n            // This needs to be the color of the decoration with the highest `zIndex`, but priority\n            // is given to the selection.\n            const highlightedLines = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, false);\n            this._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n            this._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n            const lineOffsetMap = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, null);\n            this._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderSectionHeaders(layout);\n        }\n    }\n    _renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        canvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n        let y1 = 0;\n        let y2 = 0;\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                highlightedLines.set(line, true);\n            }\n            const yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n            const yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n            if (y2 >= yy1) {\n                // merge into previous\n                y2 = yy2;\n            }\n            else {\n                if (y2 > y1) {\n                    // flush\n                    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n                }\n                y1 = yy1;\n                y2 = yy2;\n            }\n        }\n        if (y2 > y1) {\n            // flush\n            canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n        }\n    }\n    _renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight) {\n        const highlightColors = new Map();\n        // Loop backwards to hit first decorations with higher `zIndex`\n        for (let i = decorations.length - 1; i >= 0; i--) {\n            const decoration = decorations[i];\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions || minimapOptions.position !== 1 /* MinimapPosition.Inline */) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            let highlightColor = highlightColors.get(decorationColor.toString());\n            if (!highlightColor) {\n                highlightColor = decorationColor.transparent(0.5).toString();\n                highlightColors.set(decorationColor.toString(), highlightColor);\n            }\n            canvasContext.fillStyle = highlightColor;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                if (highlightedLines.has(line)) {\n                    continue;\n                }\n                highlightedLines.set(line, true);\n                const y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n                canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n            }\n        }\n    }\n    _renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            }\n        }\n    }\n    _renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        // Loop forwards to hit first decorations with lower `zIndex`\n        for (const decoration of decorations) {\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                switch (minimapOptions.position) {\n                    case 1 /* MinimapPosition.Inline */:\n                        this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n                        continue;\n                    case 2 /* MinimapPosition.Gutter */: {\n                        const y = layout.getYForLineNumber(line, minimapLineHeight);\n                        const x = 2;\n                        this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    renderDecorationOnLine(canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, minimapLineHeight, tabSize, charWidth, canvasInnerWidth) {\n        const y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n        // Skip rendering the line if it's vertically outside our viewport\n        if (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n            return;\n        }\n        const { startLineNumber, endLineNumber } = decorationRange;\n        const startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n        const endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n        const x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n        const x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n        this.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n    }\n    getXOffsetForPosition(lineOffsetMap, lineNumber, column, tabSize, charWidth, canvasInnerWidth) {\n        if (column === 1) {\n            return MINIMAP_GUTTER_WIDTH;\n        }\n        const minimumXOffset = (column - 1) * charWidth;\n        if (minimumXOffset >= canvasInnerWidth) {\n            // there is no need to look at actual characters,\n            // as this column is certainly after the minimap width\n            return canvasInnerWidth;\n        }\n        // Cache line offset data so that it is only read once per line\n        let lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n        if (!lineIndexToXOffset) {\n            const lineData = this._model.getLineContent(lineNumber);\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n            let prevx = MINIMAP_GUTTER_WIDTH;\n            for (let i = 1; i < lineData.length + 1; i++) {\n                const charCode = lineData.charCodeAt(i - 1);\n                const dx = charCode === 9 /* CharCode.Tab */\n                    ? tabSize * charWidth\n                    : strings.isFullWidthCharacter(charCode)\n                        ? 2 * charWidth\n                        : charWidth;\n                const x = prevx + dx;\n                if (x >= canvasInnerWidth) {\n                    // no need to keep on going, as we've hit the canvas width\n                    lineIndexToXOffset[i] = canvasInnerWidth;\n                    break;\n                }\n                lineIndexToXOffset[i] = x;\n                prevx = x;\n            }\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n        }\n        if (column - 1 < lineIndexToXOffset.length) {\n            return lineIndexToXOffset[column - 1];\n        }\n        // goes over the canvas width\n        return canvasInnerWidth;\n    }\n    renderDecoration(canvasContext, decorationColor, x, y, width, height) {\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n        canvasContext.fillRect(x, y, width, height);\n    }\n    _renderSectionHeaders(layout) {\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        const sectionHeaderFontSize = this._model.options.sectionHeaderFontSize;\n        const sectionHeaderLetterSpacing = this._model.options.sectionHeaderLetterSpacing;\n        const backgroundFillHeight = sectionHeaderFontSize * 1.5;\n        const { canvasInnerWidth } = this._model.options;\n        const backgroundColor = this._model.options.backgroundColor;\n        const backgroundFill = `rgb(${backgroundColor.r} ${backgroundColor.g} ${backgroundColor.b} / .7)`;\n        const foregroundColor = this._model.options.sectionHeaderFontColor;\n        const foregroundFill = `rgb(${foregroundColor.r} ${foregroundColor.g} ${foregroundColor.b})`;\n        const separatorStroke = foregroundFill;\n        const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n        canvasContext.letterSpacing = sectionHeaderLetterSpacing + 'px';\n        canvasContext.font = '500 ' + sectionHeaderFontSize + 'px ' + this._model.options.sectionHeaderFontFamily;\n        canvasContext.strokeStyle = separatorStroke;\n        canvasContext.lineWidth = 0.2;\n        const decorations = this._model.getSectionHeaderDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n        decorations.sort((a, b) => a.range.startLineNumber - b.range.startLineNumber);\n        const fitWidth = InnerMinimap._fitSectionHeader.bind(null, canvasContext, canvasInnerWidth - MINIMAP_GUTTER_WIDTH);\n        for (const decoration of decorations) {\n            const y = layout.getYForLineNumber(decoration.range.startLineNumber, minimapLineHeight) + sectionHeaderFontSize;\n            const backgroundFillY = y - sectionHeaderFontSize;\n            const separatorY = backgroundFillY + 2;\n            const headerText = this._model.getSectionHeaderText(decoration, fitWidth);\n            InnerMinimap._renderSectionLabel(canvasContext, headerText, decoration.options.minimap?.sectionHeaderStyle === 2 /* MinimapSectionHeaderStyle.Underlined */, backgroundFill, foregroundFill, canvasInnerWidth, backgroundFillY, backgroundFillHeight, y, separatorY);\n        }\n    }\n    static _fitSectionHeader(target, maxWidth, headerText) {\n        if (!headerText) {\n            return headerText;\n        }\n        const ellipsis = '…';\n        const width = target.measureText(headerText).width;\n        const ellipsisWidth = target.measureText(ellipsis).width;\n        if (width <= maxWidth || width <= ellipsisWidth) {\n            return headerText;\n        }\n        const len = headerText.length;\n        const averageCharWidth = width / headerText.length;\n        const maxCharCount = Math.floor((maxWidth - ellipsisWidth) / averageCharWidth) - 1;\n        // Find a halfway point that isn't after whitespace\n        let halfCharCount = Math.ceil(maxCharCount / 2);\n        while (halfCharCount > 0 && /\\s/.test(headerText[halfCharCount - 1])) {\n            --halfCharCount;\n        }\n        // Split with ellipsis\n        return headerText.substring(0, halfCharCount)\n            + ellipsis + headerText.substring(len - (maxCharCount - halfCharCount));\n    }\n    static _renderSectionLabel(target, headerText, hasSeparatorLine, backgroundFill, foregroundFill, minimapWidth, backgroundFillY, backgroundFillHeight, textY, separatorY) {\n        if (headerText) {\n            target.fillStyle = backgroundFill;\n            target.fillRect(0, backgroundFillY, minimapWidth, backgroundFillHeight);\n            target.fillStyle = foregroundFill;\n            target.fillText(headerText, MINIMAP_GUTTER_WIDTH, textY);\n        }\n        if (hasSeparatorLine) {\n            target.beginPath();\n            target.moveTo(0, separatorY);\n            target.lineTo(minimapWidth, separatorY);\n            target.closePath();\n            target.stroke();\n        }\n    }\n    renderLines(layout) {\n        const startLineNumber = layout.startLineNumber;\n        const endLineNumber = layout.endLineNumber;\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        // Check if nothing changed w.r.t. lines from last frame\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n            const _lastData = this._lastRenderData._get();\n            // Nice!! Nothing changed from last frame\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\n        }\n        // Oh well!! We need to repaint some lines...\n        const imageData = this._getBuffer();\n        if (!imageData) {\n            // 0 width or 0 height canvas, nothing to do\n            return null;\n        }\n        // Render untouched lines by using last rendered data.\n        const [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(imageData, layout.topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData);\n        // Fetch rendering info from view model for rest of lines that need rendering.\n        const lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n        const tabSize = this._model.getOptions().tabSize;\n        const defaultBackground = this._model.options.defaultBackgroundColor;\n        const background = this._model.options.backgroundColor;\n        const foregroundAlpha = this._model.options.foregroundAlpha;\n        const tokensColorTracker = this._model.tokensColorTracker;\n        const useLighterFont = tokensColorTracker.backgroundIsLight();\n        const renderMinimap = this._model.options.renderMinimap;\n        const charRenderer = this._model.options.charRenderer();\n        const fontScale = this._model.options.fontScale;\n        const minimapCharWidth = this._model.options.minimapCharWidth;\n        const baseCharHeight = (renderMinimap === 1 /* RenderMinimap.Text */ ? 2 /* Constants.BASE_CHAR_HEIGHT */ : 2 /* Constants.BASE_CHAR_HEIGHT */ + 1);\n        const renderMinimapLineHeight = baseCharHeight * fontScale;\n        const innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n        // Render the rest of lines\n        const backgroundA = background.a / 255;\n        const renderBackground = new RGBA8(Math.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r), Math.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g), Math.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b), 255);\n        let dy = layout.topPaddingLineCount * minimapLineHeight;\n        const renderedLines = [];\n        for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n            if (needed[lineIndex]) {\n                InnerMinimap._renderLine(imageData, renderBackground, background.a, useLighterFont, renderMinimap, minimapCharWidth, tokensColorTracker, foregroundAlpha, charRenderer, dy, innerLinePadding, tabSize, lineInfo[lineIndex], fontScale, minimapLineHeight);\n            }\n            renderedLines[lineIndex] = new MinimapLine(dy);\n            dy += minimapLineHeight;\n        }\n        const dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n        const dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n        const dirtyHeight = dirtyY2 - dirtyY1;\n        // Finally, paint to the canvas\n        const ctx = this._canvas.domNode.getContext('2d');\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n        // Save rendered data for reuse on next frame if possible\n        return new RenderData(layout, imageData, renderedLines);\n    }\n    static _renderUntouchedLines(target, topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n        const needed = [];\n        if (!lastRenderData) {\n            for (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n                needed[i] = true;\n            }\n            return [-1, -1, needed];\n        }\n        const _lastData = lastRenderData._get();\n        const lastTargetData = _lastData.imageData.data;\n        const lastStartLineNumber = _lastData.rendLineNumberStart;\n        const lastLines = _lastData.lines;\n        const lastLinesLength = lastLines.length;\n        const WIDTH = target.width;\n        const targetData = target.data;\n        const maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n        let dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n        let dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n        let copySourceStart = -1;\n        let copySourceEnd = -1;\n        let copyDestStart = -1;\n        let copyDestEnd = -1;\n        let dest_dy = topPaddingLineCount * minimapLineHeight;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - startLineNumber;\n            const lastLineIndex = lineNumber - lastStartLineNumber;\n            const source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n            if (source_dy === -1) {\n                needed[lineIndex] = true;\n                dest_dy += minimapLineHeight;\n                continue;\n            }\n            const sourceStart = source_dy * WIDTH * 4;\n            const sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n            const destStart = dest_dy * WIDTH * 4;\n            const destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n                // contiguous zone => extend copy request\n                copySourceEnd = sourceEnd;\n                copyDestEnd = destEnd;\n            }\n            else {\n                if (copySourceStart !== -1) {\n                    // flush existing copy request\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                        dirtyPixel1 = copySourceEnd;\n                    }\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                        dirtyPixel2 = copySourceStart;\n                    }\n                }\n                copySourceStart = sourceStart;\n                copySourceEnd = sourceEnd;\n                copyDestStart = destStart;\n                copyDestEnd = destEnd;\n            }\n            needed[lineIndex] = false;\n            dest_dy += minimapLineHeight;\n        }\n        if (copySourceStart !== -1) {\n            // flush existing copy request\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                dirtyPixel1 = copySourceEnd;\n            }\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                dirtyPixel2 = copySourceStart;\n            }\n        }\n        const dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n        const dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n        return [dirtyY1, dirtyY2, needed];\n    }\n    static _renderLine(target, backgroundColor, backgroundAlpha, useLighterFont, renderMinimap, charWidth, colorTracker, foregroundAlpha, minimapCharRenderer, dy, innerLinePadding, tabSize, lineData, fontScale, minimapLineHeight) {\n        const content = lineData.content;\n        const tokens = lineData.tokens;\n        const maxDx = target.width - charWidth;\n        const force1pxHeight = (minimapLineHeight === 1);\n        let dx = MINIMAP_GUTTER_WIDTH;\n        let charIndex = 0;\n        let tabsCharDelta = 0;\n        for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n            const tokenEndIndex = tokens.getEndOffset(tokenIndex);\n            const tokenColorId = tokens.getForeground(tokenIndex);\n            const tokenColor = colorTracker.getColor(tokenColorId);\n            for (; charIndex < tokenEndIndex; charIndex++) {\n                if (dx > maxDx) {\n                    // hit edge of minimap\n                    return;\n                }\n                const charCode = content.charCodeAt(charIndex);\n                if (charCode === 9 /* CharCode.Tab */) {\n                    const insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    // No need to render anything since tab is invisible\n                    dx += insertSpacesCount * charWidth;\n                }\n                else if (charCode === 32 /* CharCode.Space */) {\n                    // No need to render anything since space is invisible\n                    dx += charWidth;\n                }\n                else {\n                    // Render twice for a full width character\n                    const count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n                    for (let i = 0; i < count; i++) {\n                        if (renderMinimap === 2 /* RenderMinimap.Blocks */) {\n                            minimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n                        }\n                        else { // RenderMinimap.Text\n                            minimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n                        }\n                        dx += charWidth;\n                        if (dx > maxDx) {\n                            // hit edge of minimap\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nclass ContiguousLineMap {\n    constructor(startLineNumber, endLineNumber, defaultValue) {\n        this._startLineNumber = startLineNumber;\n        this._endLineNumber = endLineNumber;\n        this._defaultValue = defaultValue;\n        this._values = [];\n        for (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n            this._values[i] = defaultValue;\n        }\n    }\n    has(lineNumber) {\n        return (this.get(lineNumber) !== this._defaultValue);\n    }\n    set(lineNumber, value) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return;\n        }\n        this._values[lineNumber - this._startLineNumber] = value;\n    }\n    get(lineNumber) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return this._defaultValue;\n        }\n        return this._values[lineNumber - this._startLineNumber];\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5661, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport * as dom from '../../../../base/browser/dom.js';\nexport class ViewOverlayWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._widgets = {};\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        this._viewDomNodeRect = { top: 0, left: 0, width: 0, height: 0 };\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n        this._domNode.setClassName('overlayWidgets');\n        this.overflowingOverlayWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingOverlayWidgetsDomNode, 5 /* PartFingerprint.OverflowingOverlayWidgets */);\n        this.overflowingOverlayWidgetsDomNode.setClassName('overflowingOverlayWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        return true;\n    }\n    // ---- end view event handlers\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        if (widget.allowEditorOverflow) {\n            this.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n        }\n        else {\n            this._domNode.appendChild(domNode);\n        }\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n    }\n    setWidgetPosition(widget, position) {\n        const widgetData = this._widgets[widget.getId()];\n        const preference = position ? position.preference : null;\n        const stack = position?.stackOridinal;\n        if (widgetData.preference === preference && widgetData.stack === stack) {\n            this._updateMaxMinWidth();\n            return false;\n        }\n        widgetData.preference = preference;\n        widgetData.stack = stack;\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.remove();\n            this.setShouldRender();\n            this._updateMaxMinWidth();\n        }\n    }\n    _updateMaxMinWidth() {\n        let maxMinWidth = 0;\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            const widget = this._widgets[widgetId];\n            const widgetMinWidthInPx = widget.widget.getMinContentWidthInPx?.();\n            if (typeof widgetMinWidthInPx !== 'undefined') {\n                maxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n            }\n        }\n        this._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n    }\n    _renderWidget(widgetData, stackCoordinates) {\n        const domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.setTop('');\n            return;\n        }\n        const maxRight = (2 * this._verticalScrollbarWidth) + this._minimapWidth;\n        if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */ || widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n            if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n                const widgetHeight = domNode.domNode.clientHeight;\n                domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            }\n            else {\n                domNode.setTop(0);\n            }\n            if (widgetData.stack !== undefined) {\n                domNode.setTop(stackCoordinates[widgetData.preference]);\n                stackCoordinates[widgetData.preference] += domNode.domNode.clientWidth;\n            }\n            else {\n                domNode.setRight(maxRight);\n            }\n        }\n        else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n            domNode.domNode.style.right = '50%';\n            if (widgetData.stack !== undefined) {\n                domNode.setTop(stackCoordinates[2 /* OverlayWidgetPositionPreference.TOP_CENTER */]);\n                stackCoordinates[2 /* OverlayWidgetPositionPreference.TOP_CENTER */] += domNode.domNode.clientHeight;\n            }\n            else {\n                domNode.setTop(0);\n            }\n        }\n        else {\n            const { top, left } = widgetData.preference;\n            const fixedOverflowWidgets = this._context.configuration.options.get(42 /* EditorOption.fixedOverflowWidgets */);\n            if (fixedOverflowWidgets && widgetData.widget.allowEditorOverflow) {\n                // top, left are computed relative to the editor and we need them relative to the page\n                const editorBoundingBox = this._viewDomNodeRect;\n                domNode.setTop(top + editorBoundingBox.top);\n                domNode.setLeft(left + editorBoundingBox.left);\n                domNode.setPosition('fixed');\n            }\n            else {\n                domNode.setTop(top);\n                domNode.setLeft(left);\n                domNode.setPosition('absolute');\n            }\n        }\n    }\n    prepareRender(ctx) {\n        this._viewDomNodeRect = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        const keys = Object.keys(this._widgets);\n        const stackCoordinates = Array.from({ length: 2 /* OverlayWidgetPositionPreference.TOP_CENTER */ + 1 }, () => 0);\n        keys.sort((a, b) => (this._widgets[a].stack || 0) - (this._widgets[b].stack || 0));\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId], stackCoordinates);\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5840, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground, editorMultiCursorSecondaryForeground, editorMultiCursorPrimaryForeground } from '../../../common/core/editorColorRegistry.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\nclass Settings {\n    constructor(config, theme) {\n        const options = config.options;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.pixelRatio = options.get(144 /* EditorOption.pixelRatio */);\n        this.overviewRulerLanes = options.get(83 /* EditorOption.overviewRulerLanes */);\n        this.renderBorder = options.get(82 /* EditorOption.overviewRulerBorder */);\n        const borderColor = theme.getColor(editorOverviewRulerBorder);\n        this.borderColor = borderColor ? borderColor.toString() : null;\n        this.hideCursor = options.get(59 /* EditorOption.hideCursorInOverviewRuler */);\n        const cursorColorSingle = theme.getColor(editorCursorForeground);\n        this.cursorColorSingle = cursorColorSingle ? cursorColorSingle.transparent(0.7).toString() : null;\n        const cursorColorPrimary = theme.getColor(editorMultiCursorPrimaryForeground);\n        this.cursorColorPrimary = cursorColorPrimary ? cursorColorPrimary.transparent(0.7).toString() : null;\n        const cursorColorSecondary = theme.getColor(editorMultiCursorSecondaryForeground);\n        this.cursorColorSecondary = cursorColorSecondary ? cursorColorSecondary.transparent(0.7).toString() : null;\n        this.themeType = theme.type;\n        const minimapOpts = options.get(73 /* EditorOption.minimap */);\n        const minimapEnabled = minimapOpts.enabled;\n        const minimapSide = minimapOpts.side;\n        const themeColor = theme.getColor(editorOverviewRulerBackground);\n        const defaultBackground = TokenizationRegistry.getDefaultBackground();\n        if (themeColor) {\n            this.backgroundColor = themeColor;\n        }\n        else if (minimapEnabled && minimapSide === 'right') {\n            this.backgroundColor = defaultBackground;\n        }\n        else {\n            this.backgroundColor = null;\n        }\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const position = layoutInfo.overviewRuler;\n        this.top = position.top;\n        this.right = position.right;\n        this.domWidth = position.width;\n        this.domHeight = position.height;\n        if (this.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this.canvasWidth = 0;\n            this.canvasHeight = 0;\n        }\n        else {\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n        }\n        const [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n        this.x = x;\n        this.w = w;\n    }\n    _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\n        const remainingWidth = canvasWidth - canvasLeftOffset;\n        if (laneCount >= 3) {\n            const leftWidth = Math.floor(remainingWidth / 3);\n            const rightWidth = Math.floor(remainingWidth / 3);\n            const centerWidth = remainingWidth - leftWidth - rightWidth;\n            const leftOffset = canvasLeftOffset;\n            const centerOffset = leftOffset + leftWidth;\n            const rightOffset = leftOffset + leftWidth + centerWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    centerOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    centerOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    centerWidth, // Center\n                    leftWidth + centerWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + centerWidth + rightWidth, // Left | Right\n                    centerWidth + rightWidth, // Center | Right\n                    leftWidth + centerWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else if (laneCount === 2) {\n            const leftWidth = Math.floor(remainingWidth / 2);\n            const rightWidth = remainingWidth - leftWidth;\n            const leftOffset = canvasLeftOffset;\n            const rightOffset = leftOffset + leftWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    leftOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    leftOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    leftWidth, // Center\n                    leftWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + rightWidth, // Left | Right\n                    leftWidth + rightWidth, // Center | Right\n                    leftWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else {\n            const offset = canvasLeftOffset;\n            const width = remainingWidth;\n            return [\n                [\n                    0,\n                    offset, // Left\n                    offset, // Center\n                    offset, // Left | Center\n                    offset, // Right\n                    offset, // Left | Right\n                    offset, // Center | Right\n                    offset, // Left | Center | Right\n                ], [\n                    0,\n                    width, // Left\n                    width, // Center\n                    width, // Left | Center\n                    width, // Right\n                    width, // Left | Right\n                    width, // Center | Right\n                    width, // Left | Center | Right\n                ]\n            ];\n        }\n    }\n    equals(other) {\n        return (this.lineHeight === other.lineHeight\n            && this.pixelRatio === other.pixelRatio\n            && this.overviewRulerLanes === other.overviewRulerLanes\n            && this.renderBorder === other.renderBorder\n            && this.borderColor === other.borderColor\n            && this.hideCursor === other.hideCursor\n            && this.cursorColorSingle === other.cursorColorSingle\n            && this.cursorColorPrimary === other.cursorColorPrimary\n            && this.cursorColorSecondary === other.cursorColorSecondary\n            && this.themeType === other.themeType\n            && Color.equals(this.backgroundColor, other.backgroundColor)\n            && this.top === other.top\n            && this.right === other.right\n            && this.domWidth === other.domWidth\n            && this.domHeight === other.domHeight\n            && this.canvasWidth === other.canvasWidth\n            && this.canvasHeight === other.canvasHeight);\n    }\n}\nexport class DecorationsOverviewRuler extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n        this._renderedDecorations = [];\n        this._renderedCursorPositions = [];\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName('decorationsOverviewRuler');\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateSettings(false);\n        this._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n            if (e.changedColorMap) {\n                this._updateSettings(true);\n            }\n        });\n        this._cursorPositions = [{ position: new Position(1, 1), color: this._settings.cursorColorSingle }];\n    }\n    dispose() {\n        super.dispose();\n        this._tokensColorTrackerListener.dispose();\n    }\n    _updateSettings(renderNow) {\n        const newSettings = new Settings(this._context.configuration, this._context.theme);\n        if (this._settings && this._settings.equals(newSettings)) {\n            // nothing to do\n            return false;\n        }\n        this._settings = newSettings;\n        this._domNode.setTop(this._settings.top);\n        this._domNode.setRight(this._settings.right);\n        this._domNode.setWidth(this._settings.domWidth);\n        this._domNode.setHeight(this._settings.domHeight);\n        this._domNode.domNode.width = this._settings.canvasWidth;\n        this._domNode.domNode.height = this._settings.canvasHeight;\n        if (renderNow) {\n            this._render();\n        }\n        return true;\n    }\n    // ---- begin view event handlers\n    _markRenderingIsNeeded() {\n        this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        return true;\n    }\n    _markRenderingIsMaybeNeeded() {\n        this._actualShouldRender = 1 /* ShouldRenderValue.Maybe */;\n        return true;\n    }\n    onConfigurationChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    onCursorStateChanged(e) {\n        this._cursorPositions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            let color = this._settings.cursorColorSingle;\n            if (len > 1) {\n                color = i === 0 ? this._settings.cursorColorPrimary : this._settings.cursorColorSecondary;\n            }\n            this._cursorPositions.push({ position: e.selections[i].getPosition(), color });\n        }\n        this._cursorPositions.sort((a, b) => Position.compare(a.position, b.position));\n        return this._markRenderingIsMaybeNeeded();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsOverviewRuler) {\n            return this._markRenderingIsMaybeNeeded();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n    }\n    onZonesChanged(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onThemeChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(editorCtx) {\n        this._render();\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n    }\n    _render() {\n        const backgroundColor = this._settings.backgroundColor;\n        if (this._settings.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n            this._domNode.setDisplay('none');\n            return;\n        }\n        const decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n        decorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.position.lineNumber === b.position.lineNumber && a.color === b.color)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */) {\n            // both decorations and cursor positions are unchanged, nothing to do\n            return;\n        }\n        this._renderedDecorations = decorations;\n        this._renderedCursorPositions = this._cursorPositions;\n        this._domNode.setDisplay('block');\n        const canvasWidth = this._settings.canvasWidth;\n        const canvasHeight = this._settings.canvasHeight;\n        const lineHeight = this._settings.lineHeight;\n        const viewLayout = this._context.viewLayout;\n        const outerHeight = this._context.viewLayout.getScrollHeight();\n        const heightRatio = canvasHeight / outerHeight;\n        const minDecorationHeight = (6 /* Constants.MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\n        const halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n        const canvasCtx = this._domNode.domNode.getContext('2d');\n        if (backgroundColor) {\n            if (backgroundColor.isOpaque()) {\n                // We have a background color which is opaque, we can just paint the entire surface with it\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n            else {\n                // We have a background color which is transparent, we need to first clear the surface and\n                // then fill it\n                canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n        }\n        else {\n            // We don't have a background color\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        }\n        const x = this._settings.x;\n        const w = this._settings.w;\n        for (const decorationGroup of decorations) {\n            const color = decorationGroup.color;\n            const decorationGroupData = decorationGroup.data;\n            canvasCtx.fillStyle = color;\n            let prevLane = 0;\n            let prevY1 = 0;\n            let prevY2 = 0;\n            for (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n                const lane = decorationGroupData[3 * i];\n                const startLineNumber = decorationGroupData[3 * i + 1];\n                const endLineNumber = decorationGroupData[3 * i + 2];\n                let y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n                let y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n                const height = y2 - y1;\n                if (height < minDecorationHeight) {\n                    let yCenter = ((y1 + y2) / 2) | 0;\n                    if (yCenter < halfMinDecorationHeight) {\n                        yCenter = halfMinDecorationHeight;\n                    }\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n                        yCenter = canvasHeight - halfMinDecorationHeight;\n                    }\n                    y1 = yCenter - halfMinDecorationHeight;\n                    y2 = yCenter + halfMinDecorationHeight;\n                }\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n                    }\n                    prevLane = lane;\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n        }\n        // Draw cursors\n        if (!this._settings.hideCursor) {\n            const cursorHeight = (2 * this._settings.pixelRatio) | 0;\n            const halfCursorHeight = (cursorHeight / 2) | 0;\n            const cursorX = this._settings.x[7 /* OverviewRulerLane.Full */];\n            const cursorW = this._settings.w[7 /* OverviewRulerLane.Full */];\n            let prevY1 = -100;\n            let prevY2 = -100;\n            let prevColor = null;\n            for (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n                const color = this._cursorPositions[i].color;\n                if (!color) {\n                    continue;\n                }\n                const cursor = this._cursorPositions[i].position;\n                let yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n                if (yCenter < halfCursorHeight) {\n                    yCenter = halfCursorHeight;\n                }\n                else if (yCenter + halfCursorHeight > canvasHeight) {\n                    yCenter = canvasHeight - halfCursorHeight;\n                }\n                const y1 = yCenter - halfCursorHeight;\n                const y2 = y1 + cursorHeight;\n                if (y1 > prevY2 + 1 || color !== prevColor) {\n                    // flush prev\n                    if (i !== 0 && prevColor) {\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n                    }\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n                prevColor = color;\n                canvasCtx.fillStyle = color;\n            }\n            if (prevColor) {\n                canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n            }\n        }\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n            canvasCtx.beginPath();\n            canvasCtx.lineWidth = 1;\n            canvasCtx.strokeStyle = this._settings.borderColor;\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(0, canvasHeight);\n            canvasCtx.moveTo(1, 0);\n            canvasCtx.lineTo(canvasWidth, 0);\n            canvasCtx.stroke();\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6253, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\nexport class OverviewRuler extends ViewEventHandler {\n    constructor(context, cssClassName) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName(cssClassName);\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._zoneManager = new OverviewZoneManager((lineNumber) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n        this._zoneManager.setDOMWidth(0);\n        this._zoneManager.setDOMHeight(0);\n        this._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n        this._zoneManager.setLineHeight(options.get(67 /* EditorOption.lineHeight */));\n        this._zoneManager.setPixelRatio(options.get(144 /* EditorOption.pixelRatio */));\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n            this._zoneManager.setLineHeight(options.get(67 /* EditorOption.lineHeight */));\n            this._render();\n        }\n        if (e.hasChanged(144 /* EditorOption.pixelRatio */)) {\n            this._zoneManager.setPixelRatio(options.get(144 /* EditorOption.pixelRatio */));\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n        return true;\n    }\n    onFlushed(e) {\n        this._render();\n        return true;\n    }\n    onScrollChanged(e) {\n        if (e.scrollHeightChanged) {\n            this._zoneManager.setOuterHeight(e.scrollHeight);\n            this._render();\n        }\n        return true;\n    }\n    onZonesChanged(e) {\n        this._render();\n        return true;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    setLayout(position) {\n        this._domNode.setTop(position.top);\n        this._domNode.setRight(position.right);\n        let hasChanged = false;\n        hasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n        hasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n        if (hasChanged) {\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n    }\n    setZones(zones) {\n        this._zoneManager.setZones(zones);\n        this._render();\n    }\n    _render() {\n        if (this._zoneManager.getOuterHeight() === 0) {\n            return false;\n        }\n        const width = this._zoneManager.getCanvasWidth();\n        const height = this._zoneManager.getCanvasHeight();\n        const colorZones = this._zoneManager.resolveColorZones();\n        const id2Color = this._zoneManager.getId2Color();\n        const ctx = this._domNode.domNode.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        if (colorZones.length > 0) {\n            this._renderOneLane(ctx, colorZones, id2Color, width);\n        }\n        return true;\n    }\n    _renderOneLane(ctx, colorZones, id2Color, width) {\n        let currentColorId = 0;\n        let currentFrom = 0;\n        let currentTo = 0;\n        for (const zone of colorZones) {\n            const zoneColorId = zone.colorId;\n            const zoneFrom = zone.from;\n            const zoneTo = zone.to;\n            if (zoneColorId !== currentColorId) {\n                ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                currentColorId = zoneColorId;\n                ctx.fillStyle = id2Color[currentColorId];\n                currentFrom = zoneFrom;\n                currentTo = zoneTo;\n            }\n            else {\n                if (currentTo >= zoneFrom) {\n                    currentTo = Math.max(currentTo, zoneTo);\n                }\n                else {\n                    ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                    currentFrom = zoneFrom;\n                    currentTo = zoneTo;\n                }\n            }\n        }\n        ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6389, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './rulers.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Rulers extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('view-rulers');\n        this._renderedRulers = [];\n        const options = this._context.configuration.options;\n        this._rulers = options.get(103 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._rulers = options.get(103 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    _ensureRulersCount() {\n        const currentCount = this._renderedRulers.length;\n        const desiredCount = this._rulers.length;\n        if (currentCount === desiredCount) {\n            // Nothing to do\n            return;\n        }\n        if (currentCount < desiredCount) {\n            const { tabSize } = this._context.viewModel.model.getOptions();\n            const rulerWidth = tabSize;\n            let addCount = desiredCount - currentCount;\n            while (addCount > 0) {\n                const node = createFastDomNode(document.createElement('div'));\n                node.setClassName('view-ruler');\n                node.setWidth(rulerWidth);\n                this.domNode.appendChild(node);\n                this._renderedRulers.push(node);\n                addCount--;\n            }\n            return;\n        }\n        let removeCount = currentCount - desiredCount;\n        while (removeCount > 0) {\n            const node = this._renderedRulers.pop();\n            this.domNode.removeChild(node);\n            removeCount--;\n        }\n    }\n    render(ctx) {\n        this._ensureRulersCount();\n        for (let i = 0, len = this._rulers.length; i < len; i++) {\n            const node = this._renderedRulers[i];\n            const ruler = this._rulers[i];\n            node.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n            node.setHeight(Math.min(ctx.scrollHeight, 1000000));\n            node.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n        }\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAE9F;AACA;;;;AACO,MAAM,eAAe,sLAAA,CAAA,WAAQ;IAChC,YAAY,OAAO,CAAE;QACjB,KAAK,CAAC;QACN,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ;QAClC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe;QACzC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,EAAE;QACzB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,IAAI,uBAAuB;QACtD,IAAI,CAAC,+BAA+B,GAAG,QAAQ,GAAG,CAAC,GAAG,yBAAyB,KAAI,8BAA8B;IACrH;IACA,UAAU;QACN,KAAK,CAAC;IACV;IACA,2BAA2B;IAC3B,uBAAuB,CAAC,EAAE;QACtB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,IAAI,uBAAuB;QACtD,IAAI,CAAC,+BAA+B,GAAG,QAAQ,GAAG,CAAC,GAAG,yBAAyB,KAAI,8BAA8B;QACjH,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,OAAO,EAAE,mBAAmB;IAChC;IACA,yBAAyB;IACzB,cAAc,GAAG,EAAE;IACf,kBAAkB;IACtB;IACA,qBAAqB;QACjB,MAAM,eAAe,IAAI,CAAC,eAAe,CAAC,MAAM;QAChD,MAAM,eAAe,IAAI,CAAC,OAAO,CAAC,MAAM;QACxC,IAAI,iBAAiB,cAAc;YAC/B,gBAAgB;YAChB;QACJ;QACA,IAAI,eAAe,cAAc;YAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU;YAC5D,MAAM,aAAa;YACnB,IAAI,WAAW,eAAe;YAC9B,MAAO,WAAW,EAAG;gBACjB,MAAM,OAAO,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;gBACtD,KAAK,YAAY,CAAC;gBAClB,KAAK,QAAQ,CAAC;gBACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBAC1B;YACJ;YACA;QACJ;QACA,IAAI,cAAc,eAAe;QACjC,MAAO,cAAc,EAAG;YACpB,MAAM,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG;YACrC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACzB;QACJ;IACJ;IACA,OAAO,GAAG,EAAE;QACR,IAAI,CAAC,kBAAkB;QACvB,IAAK,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,KAAK,IAAK;YACrD,MAAM,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;YACpC,MAAM,QAAQ,IAAI,CAAC,OAAO,CAAC,EAAE;YAC7B,KAAK,YAAY,CAAC,MAAM,KAAK,GAAG,CAAC,UAAU,EAAE,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;YACrE,KAAK,SAAS,CAAC,KAAK,GAAG,CAAC,IAAI,YAAY,EAAE;YAC1C,KAAK,OAAO,CAAC,MAAM,MAAM,GAAG,IAAI,CAAC,+BAA+B;QACpE;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6474, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAE9F;AACA;;;;AACO,MAAM,iCAAiC,sLAAA,CAAA,WAAQ;IAClD,YAAY,OAAO,CAAE;QACjB,KAAK,CAAC;QACN,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,WAAW,GAAG;QACnB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,YAAY,QAAQ,GAAG,CAAC,IAAI,0BAA0B;QAC5D,IAAI,CAAC,WAAW,GAAG,UAAU,UAAU;QACvC,IAAI,CAAC,QAAQ,GAAG,CAAA,GAAA,+KAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS,aAAa,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ;QACnC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe;IAC9C;IACA,UAAU;QACN,KAAK,CAAC;IACV;IACA,oBAAoB;QAChB,MAAM,gBAAiB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,GAAG;QAC7D,IAAI,IAAI,CAAC,WAAW,KAAK,eAAe;YACpC,IAAI,CAAC,WAAW,GAAG;YACnB,OAAO;QACX;QACA,OAAO;IACX;IACA,aAAa;QACT,OAAO,IAAI,CAAC,QAAQ;IACxB;IACA,eAAe;QACX,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,aAAa,QAAQ,GAAG,CAAC,IAAI,2BAA2B;QAC9D,IAAI,WAAW,OAAO,CAAC,aAAa,KAAK,KAAM,WAAW,OAAO,CAAC,YAAY,GAAG,KAAK,WAAW,OAAO,CAAC,WAAW,KAAK,GAAI;YACzH,IAAI,CAAC,MAAM,GAAG,WAAW,KAAK;QAClC,OACK;YACD,IAAI,CAAC,MAAM,GAAG,WAAW,KAAK,GAAG,WAAW,sBAAsB;QACtE;IACJ;IACA,2BAA2B;IAC3B,uBAAuB,CAAC,EAAE;QACtB,MAAM,UAAU,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO;QACnD,MAAM,YAAY,QAAQ,GAAG,CAAC,IAAI,0BAA0B;QAC5D,IAAI,CAAC,WAAW,GAAG,UAAU,UAAU;QACvC,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,iBAAiB;QACtB,OAAO;IACX;IACA,gBAAgB,CAAC,EAAE;QACf,IAAI,CAAC,UAAU,GAAG,EAAE,SAAS;QAC7B,OAAO,IAAI,CAAC,iBAAiB;IACjC;IACA,yBAAyB;IACzB,cAAc,GAAG,EAAE;IACf,kBAAkB;IACtB;IACA,OAAO,GAAG,EAAE;QACR,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM;QAClC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,sBAAsB;IACxE;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6550, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    static { this.SELECTION_CLASS_NAME = 'selected-text'; }\n    static { this.SELECTION_TOP_LEFT = 'top-left-radius'; }\n    static { this.SELECTION_BOTTOM_LEFT = 'bottom-left-radius'; }\n    static { this.SELECTION_TOP_RIGHT = 'top-right-radius'; }\n    static { this.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius'; }\n    static { this.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background'; }\n    static { this.ROUNDED_PIECE_WIDTH = 10; }\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(102 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, bottom, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"'\n            + 'top:' + top.toString() + 'px;'\n            + 'bottom:' + bottom.toString() + 'px;'\n            + 'left:' + left.toString() + 'px;'\n            + 'width:' + width.toString() + 'px;'\n            + '\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            const bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6888, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.paddingLeft = paddingLeft;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport var CursorPlurality;\n(function (CursorPlurality) {\n    CursorPlurality[CursorPlurality[\"Single\"] = 0] = \"Single\";\n    CursorPlurality[CursorPlurality[\"MultiPrimary\"] = 1] = \"MultiPrimary\";\n    CursorPlurality[CursorPlurality[\"MultiSecondary\"] = 2] = \"MultiSecondary\";\n})(CursorPlurality || (CursorPlurality = {}));\nexport class ViewCursor {\n    constructor(context, plurality) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._pluralityClass = '';\n        this.setPlurality(plurality);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    setPlurality(plurality) {\n        switch (plurality) {\n            default:\n            case CursorPlurality.Single:\n                this._pluralityClass = '';\n                break;\n            case CursorPlurality.MultiPrimary:\n                this._pluralityClass = 'cursor-primary';\n                break;\n            case CursorPlurality.MultiSecondary:\n                this._pluralityClass = 'cursor-secondary';\n                break;\n        }\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position, pauseAnimation) {\n        if (pauseAnimation) {\n            this._domNode.domNode.style.transitionProperty = 'none';\n        }\n        else {\n            this._domNode.domNode.style.transitionProperty = '';\n        }\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        let textContentClassName = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            const window = dom.getWindow(this._domNode.domNode);\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(window, this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                    textContentClassName = this._getTokenClassName(position);\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(window, 1);\n            }\n            let left = visibleRange.left;\n            let paddingLeft = 0;\n            if (width >= 2 && left >= 1) {\n                // shift the cursor a bit between the characters\n                paddingLeft = 1;\n                left -= paddingLeft;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            textContent = nextGrapheme;\n            textContentClassName = this._getTokenClassName(position);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n    }\n    _getTokenClassName(position) {\n        const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n        const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n        return lineData.tokens.getClassName(tokenIndex);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${this._pluralityClass} ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7111, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor, CursorPlurality } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground, editorMultiCursorPrimaryForeground, editorMultiCursorPrimaryBackground, editorMultiCursorSecondaryForeground, editorMultiCursorSecondaryBackground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\nexport class ViewCursors extends ViewPart {\n    static { this.BLINK_INTERVAL = 500; }\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(92 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context, CursorPlurality.Single);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new WindowIntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(92 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions, reason) {\n        const pauseAnimation = (this._secondaryCursors.length !== secondaryPositions.length\n            || (this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */));\n        this._primaryCursor.setPlurality(secondaryPositions.length ? CursorPlurality.MultiPrimary : CursorPlurality.Single);\n        this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context, CursorPlurality.MultiSecondary);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */);\n        const isSolid = (blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const cursorThemes = [\n        { class: '.cursor', foreground: editorCursorForeground, background: editorCursorBackground },\n        { class: '.cursor-primary', foreground: editorMultiCursorPrimaryForeground, background: editorMultiCursorPrimaryBackground },\n        { class: '.cursor-secondary', foreground: editorMultiCursorSecondaryForeground, background: editorMultiCursorSecondaryBackground },\n    ];\n    for (const cursorTheme of cursorThemes) {\n        const caret = theme.getColor(cursorTheme.foreground);\n        if (caret) {\n            let caretBackground = theme.getColor(cursorTheme.background);\n            if (!caretBackground) {\n                caretBackground = caret.opposite();\n            }\n            collector.addRule(`.monaco-editor .cursors-layer ${cursorTheme.class} { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .cursors-layer.has-selection ${cursorTheme.class} { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n            }\n        }\n    }\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7465, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        return zone.ordinal ?? zone.afterColumn ?? 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n        const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.remove();\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.remove();\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7799, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/whitespace.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._options = new WhitespaceOptions(this._context.configuration);\n        this._selection = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const newOptions = new WhitespaceOptions(this._context.configuration);\n        if (this._options.equals(newOptions)) {\n            return e.hasChanged(146 /* EditorOption.layoutInfo */);\n        }\n        this._options = newOptions;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selection = e.selections;\n        if (this._options.renderWhitespace === 'selection') {\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._options.renderWhitespace === 'none') {\n            this._renderResult = null;\n            return;\n        }\n        const startLineNumber = ctx.visibleRange.startLineNumber;\n        const endLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = endLineNumber - startLineNumber + 1;\n        const needed = new Array(lineCount);\n        for (let i = 0; i < lineCount; i++) {\n            needed[i] = true;\n        }\n        const viewportData = this._context.viewModel.getMinimapLinesRenderingData(ctx.viewportData.startLineNumber, ctx.viewportData.endLineNumber, needed);\n        this._renderResult = [];\n        for (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n            const lineData = viewportData.data[lineIndex];\n            let selectionsOnLine = null;\n            if (this._options.renderWhitespace === 'selection') {\n                const selections = this._selection;\n                for (const selection of selections) {\n                    if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                        // Selection does not intersect line\n                        continue;\n                    }\n                    const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                    const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                    if (startColumn < endColumn) {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n            this._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n        }\n    }\n    _applyRenderWhitespace(ctx, lineNumber, selections, lineData) {\n        if (this._options.renderWhitespace === 'selection' && !selections) {\n            return '';\n        }\n        if (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n            return '';\n        }\n        const color = this._context.theme.getColor(editorWhitespaces);\n        const USE_SVG = this._options.renderWithSVG;\n        const lineContent = lineData.content;\n        const len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n        const continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n        const fauxIndentLength = lineData.minColumn - 1;\n        const onlyBoundary = (this._options.renderWhitespace === 'boundary');\n        const onlyTrailing = (this._options.renderWhitespace === 'trailing');\n        const lineHeight = this._options.lineHeight;\n        const middotWidth = this._options.middotWidth;\n        const wsmiddotWidth = this._options.wsmiddotWidth;\n        const spaceWidth = this._options.spaceWidth;\n        const wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n        const middotDiff = Math.abs(middotWidth - spaceWidth);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        // U+00B7 - MIDDLE DOT\n        const renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n        const canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n        let result = '';\n        let lineIsEmptyOrWhitespace = false;\n        let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n        let lastNonWhitespaceIndex;\n        if (firstNonWhitespaceIndex === -1) {\n            lineIsEmptyOrWhitespace = true;\n            firstNonWhitespaceIndex = len;\n            lastNonWhitespaceIndex = len;\n        }\n        else {\n            lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        }\n        let currentSelectionIndex = 0;\n        let currentSelection = selections && selections[currentSelectionIndex];\n        let maxLeft = 0;\n        for (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n            const chCode = lineContent.charCodeAt(charIndex);\n            if (currentSelection && charIndex >= currentSelection.endOffset) {\n                currentSelectionIndex++;\n                currentSelection = selections && selections[currentSelectionIndex];\n            }\n            if (chCode !== 9 /* CharCode.Tab */ && chCode !== 32 /* CharCode.Space */) {\n                continue;\n            }\n            if (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n                // If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n                continue;\n            }\n            if (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === 32 /* CharCode.Space */) {\n                // rendering only boundary whitespace\n                const prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n                if (prevChCode !== 32 /* CharCode.Space */ && nextChCode !== 32 /* CharCode.Space */) {\n                    continue;\n                }\n            }\n            if (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n                const prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const isSingleTrailingSpace = (chCode === 32 /* CharCode.Space */ && (prevCharCode !== 32 /* CharCode.Space */ && prevCharCode !== 9 /* CharCode.Tab */));\n                if (isSingleTrailingSpace) {\n                    continue;\n                }\n            }\n            if (selections && (!currentSelection || currentSelection.startOffset > charIndex || currentSelection.endOffset <= charIndex)) {\n                // If rendering whitespace on selection, check that the charIndex falls within a selection\n                continue;\n            }\n            const visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n            if (!visibleRange) {\n                continue;\n            }\n            if (USE_SVG) {\n                maxLeft = Math.max(maxLeft, visibleRange.left);\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n                }\n                else {\n                    result += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n                }\n            }\n            else {\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n                }\n                else {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n                }\n            }\n        }\n        if (USE_SVG) {\n            maxLeft = Math.round(maxLeft + spaceWidth);\n            return (`<svg style=\"bottom:0;position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n                + result\n                + `</svg>`);\n        }\n        return result;\n    }\n    _renderArrow(lineHeight, spaceWidth, left) {\n        const strokeWidth = spaceWidth / 7;\n        const width = spaceWidth;\n        const dy = lineHeight / 2;\n        const dx = left;\n        const p1 = { x: 0, y: strokeWidth / 2 };\n        const p2 = { x: 100 / 125 * width, y: p1.y };\n        const p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n        const p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n        const p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n        const p6 = { x: p5.x, y: -p5.y };\n        const p7 = { x: p4.x, y: -p4.y };\n        const p8 = { x: p3.x, y: -p3.y };\n        const p9 = { x: p2.x, y: -p2.y };\n        const p10 = { x: p1.x, y: -p1.y };\n        const p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n        const parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n        return `<path d=\"M ${parts}\" />`;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nclass WhitespaceOptions {\n    constructor(config) {\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            // whitespace is rendered in the view line\n            this.renderWhitespace = 'none';\n            this.renderWithSVG = false;\n        }\n        else if (experimentalWhitespaceRendering === 'svg') {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = true;\n        }\n        else {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = false;\n        }\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(118 /* EditorOption.stopRenderingLineAfter */);\n    }\n    equals(other) {\n        return (this.renderWhitespace === other.renderWhitespace\n            && this.renderWithSVG === other.renderWithSVG\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}