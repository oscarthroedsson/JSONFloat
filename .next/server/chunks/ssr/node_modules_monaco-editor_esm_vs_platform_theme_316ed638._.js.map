{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F,GAC9F;;CAEC;;;;;AACM,IAAI;AACX,CAAC,SAAU,WAAW;IAClB,WAAW,CAAC,OAAO,GAAG;IACtB,WAAW,CAAC,QAAQ,GAAG;IACvB,WAAW,CAAC,qBAAqB,GAAG;IACpC,WAAW,CAAC,sBAAsB,GAAG;AACzC,CAAC,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC;AAC5B,SAAS,eAAe,MAAM;IACjC,OAAO,WAAW,YAAY,kBAAkB,IAAI,WAAW,YAAY,mBAAmB;AAClG;AACO,SAAS,OAAO,MAAM;IACzB,OAAO,WAAW,YAAY,IAAI,IAAI,WAAW,YAAY,kBAAkB;AACnF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js"],"sourcesContent":["import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AACO,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,kBAAe,AAAD,EAAE;AACtC,SAAS,iBAAiB,EAAE;IAC/B,OAAO;QAAE;IAAG;AAChB;AACO,SAAS,qBAAqB,IAAI;IACrC,OAAQ;QACJ,KAAK,qLAAA,CAAA,cAAW,CAAC,IAAI;YAAE,OAAO;QAC9B,KAAK,qLAAA,CAAA,cAAW,CAAC,kBAAkB;YAAE,OAAO;QAC5C,KAAK,qLAAA,CAAA,cAAW,CAAC,mBAAmB;YAAE,OAAO;QAC7C;YAAS,OAAO;IACpB;AACJ;AAEO,MAAM,aAAa;IACtB,qBAAqB;AACzB;AACA,MAAM;IACF,aAAc;QACV,IAAI,CAAC,mBAAmB,GAAG,EAAE;QAC7B,IAAI,CAAC,mBAAmB,GAAG,EAAE;QAC7B,IAAI,CAAC,gCAAgC,GAAG,IAAI,wKAAA,CAAA,UAAO;IACvD;IACA,mBAAmB,WAAW,EAAE;QAC5B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC;QAC3C,OAAO,CAAA,GAAA,4KAAA,CAAA,eAAY,AAAD,EAAE;YAChB,MAAM,MAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK;QACzC;IACJ;IACA,yBAAyB;QACrB,OAAO,IAAI,CAAC,mBAAmB;IACnC;AACJ;AACA,MAAM,kBAAkB,IAAI;AAC5B,2LAAA,CAAA,WAAiB,CAAC,GAAG,CAAC,WAAW,mBAAmB,EAAE;AAC/C,SAAS,2BAA2B,WAAW;IAClD,OAAO,gBAAgB,kBAAkB,CAAC;AAC9C;AAIO,MAAM,iBAAiB,4KAAA,CAAA,aAAU;IACpC,YAAY,YAAY,CAAE;QACtB,KAAK;QACL,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,KAAK,GAAG,aAAa,aAAa;QACvC,2BAA2B;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAA,QAAS,IAAI,CAAC,aAAa,CAAC;IACvF;IACA,cAAc,KAAK,EAAE;QACjB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,YAAY;IACrB;IACA,eAAe;IACX,yBAAyB;IAC7B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colorUtils.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport * as nls from '../../../nls.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\nexport function isColorDefaults(value) {\n    return value !== null && typeof value === 'object' && 'light' in value && 'dark' in value;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nexport const DEFAULT_COLOR_CONFIG_VALUE = 'default';\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (needsTransparency) {\n            propertySchema.pattern = '^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$';\n            propertySchema.patternErrorMessage = nls.localize('transparecyRequired', 'This color must be transparent or it will obscure content');\n        }\n        this.colorSchema.properties[id] = {\n            description,\n            oneOf: [\n                propertySchema,\n                { type: 'string', const: DEFAULT_COLOR_CONFIG_VALUE, description: nls.localize('useDefault', 'Use the default color.') }\n            ]\n        };\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc?.defaults) {\n            const colorValue = isColorDefaults(colorDesc.defaults) ? colorDesc.defaults[theme.type] : colorDesc.defaults;\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return resolveColorValue(transform.value, theme)?.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return resolveColorValue(transform.value, theme)?.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return resolveColorValue(transform.value, theme)?.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return resolveColorValue(transform.value, theme)?.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nexport function lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/baseColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', null, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text link\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\n// ------ text preformat\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#000000', hcLight: '#FFFFFF' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textPreformatBackground = registerColor('textPreformat.background', { light: '#0000001A', dark: '#FFFFFF1A', hcDark: '#FFFFFF', hcLight: '#09345f' }, nls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n// ------ text block quote\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#f2f2f2', dark: '#222222', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n// ------ text code block\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/miscColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n// ----- sash\nexport const sashHoverBorder = registerColor('sash.hoverBorder', focusBorder, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n// ----- badge\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n// ----- scrollbar\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n// ----- progress bar\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/editorColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lessProminent, darken, lighten } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { scrollbarShadow, badgeBackground } from './miscColors.js';\n// ----- editor\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', editorBackground, nls.localize('editorStickyScrollBackground', \"Background color of sticky scroll in the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Background color of sticky scroll on hover in the editor\"));\nexport const editorStickyScrollBorder = registerColor('editorStickyScroll.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorStickyScrollBorder', \"Border color of sticky scroll in the editor\"));\nexport const editorStickyScrollShadow = registerColor('editorStickyScroll.shadow', scrollbarShadow, nls.localize('editorStickyScrollShadow', \" Shadow color of sticky scroll in the editor\"));\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', foreground, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', null, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\nexport const editorErrorBackground = registerColor('editorError.background', null, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', null, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', null, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n// ----- editor selection\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n// ----- editor find\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchForeground = registerColor('editor.findMatchForeground', null, nls.localize('editorFindMatchForeground', \"Text color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchHighlightForeground = registerColor('editor.findMatchHighlightForeground', null, nls.localize('findMatchHighlightForeground', \"Foreground color of the other search matches.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n// ----- editor hover\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', editorWidgetBackground, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', editorWidgetForeground, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', editorWidgetBorder, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n// ----- editor inlay hint\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', editorInlayHintForeground, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', editorInlayHintBackground, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n// ----- editor lightbulb\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\nexport const editorLightBulbAiForeground = registerColor('editorLightBulbAi.foreground', editorLightBulbForeground, nls.localize('editorLightBulbAiForeground', \"The color used for the lightbulb AI icon.\"));\n// ----- editor snippet\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', null, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', null, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n// ----- diff editor\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', null, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', null, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', null, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', null, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground', 'sideBar.background', nls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground', 'foreground', nls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground', { dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n// ----- widget\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\n// ----- toolbar\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n// ----- breadcumbs\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', transparent(foreground, 0.8), nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', editorBackground, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', editorWidgetBackground, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n// ----- merge\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', transparent(mergeCurrentHeaderBackground, contentTransparency), nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', transparent(mergeIncomingHeaderBackground, contentTransparency), nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', transparent(mergeCommonHeaderBackground, contentTransparency), nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', '#A0A0A0CC', nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n// ----- problems\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', editorErrorForeground, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', editorWarningForeground, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', editorInfoForeground, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/minimapColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { editorInfoForeground, editorWarningForeground, editorWarningBorder, editorInfoBorder } from './editorColors.js';\nimport { scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground } from './miscColors.js';\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapInfo = registerColor('minimap.infoHighlight', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapBackground = registerColor('minimap.background', null, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', Color.fromHex('#000f'), nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', transparent(scrollbarSliderBackground, 0.5), nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', transparent(scrollbarSliderHoverBackground, 0.5), nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', transparent(scrollbarSliderActiveBackground, 0.5), nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/chartsColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nimport { foreground } from './baseColors.js';\nimport { editorErrorForeground, editorInfoForeground, editorWarningForeground } from './editorColors.js';\nimport { minimapFindMatch } from './minimapColors.js';\nexport const chartsForeground = registerColor('charts.foreground', foreground, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', transparent(foreground, .5), nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', editorErrorForeground, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', editorInfoForeground, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', editorWarningForeground, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', minimapFindMatch, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;;;;;AAC9F;AAAA;AACA;AACA;AACA;AACA;;;;;;AACO,MAAM,mBAAmB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,qBAAqB,oMAAA,CAAA,aAAU,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oBAAoB;AACzG,MAAM,cAAc,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gBAAgB,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,aAAU,EAAE,KAAK,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,eAAe;AAC3G,MAAM,YAAY,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,cAAc,sMAAA,CAAA,wBAAqB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,aAAa;AAC/F,MAAM,aAAa,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,eAAe,sMAAA,CAAA,uBAAoB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,cAAc;AACjG,MAAM,eAAe,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,iBAAiB,sMAAA,CAAA,0BAAuB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gBAAgB;AAC1G,MAAM,eAAe,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,iBAAiB,uMAAA,CAAA,mBAAgB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gBAAgB;AACnG,MAAM,cAAc,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gBAAgB;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ;IAAW,SAAS;AAAU,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,eAAe;AAC5J,MAAM,eAAe,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,iBAAiB;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ;IAAW,SAAS;AAAU,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1216, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/inputColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lighten, darken } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground } from './editorColors.js';\n// ----- input\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', foreground, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n// ----- input validation\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n// ----- select\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\n// ------ button\nexport const buttonForeground = registerColor('button.foreground', Color.white, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', transparent(buttonForeground, .4), nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', contrastBorder, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n// ------ radio\nexport const radioActiveForeground = registerColor('radio.activeForeground', inputActiveOptionForeground, nls.localize('radioActiveForeground', \"Foreground color of active radio option.\"));\nexport const radioActiveBackground = registerColor('radio.activeBackground', inputActiveOptionBackground, nls.localize('radioBackground', \"Background color of active radio option.\"));\nexport const radioActiveBorder = registerColor('radio.activeBorder', inputActiveOptionBorder, nls.localize('radioActiveBorder', \"Border color of the active radio option.\"));\nexport const radioInactiveForeground = registerColor('radio.inactiveForeground', null, nls.localize('radioInactiveForeground', \"Foreground color of inactive radio option.\"));\nexport const radioInactiveBackground = registerColor('radio.inactiveBackground', null, nls.localize('radioInactiveBackground', \"Background color of inactive radio option.\"));\nexport const radioInactiveBorder = registerColor('radio.inactiveBorder', { light: transparent(radioActiveForeground, .2), dark: transparent(radioActiveForeground, .2), hcDark: transparent(radioActiveForeground, .4), hcLight: transparent(radioActiveForeground, .2) }, nls.localize('radioInactiveBorder', \"Border color of the inactive radio option.\"));\nexport const radioInactiveHoverBackground = registerColor('radio.inactiveHoverBackground', inputActiveOptionHoverBackground, nls.localize('radioHoverBackground', \"Background color of inactive active radio option when hovering.\"));\n// ------ checkbox\nexport const checkboxBackground = registerColor('checkbox.background', selectBackground, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', editorWidgetBackground, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', selectForeground, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', selectBorder, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', iconForeground, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n// ------ keybinding label\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC9F;AAAA;AACA,6BAA6B;AAC7B;AACA;AACA,4BAA4B;AAC5B;AACA;;;;;;AAEO,MAAM,kBAAkB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,oBAAoB;IAAE,MAAM;IAAW,OAAO,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,sBAAsB;AACjL,MAAM,kBAAkB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,oBAAoB,oMAAA,CAAA,aAAU,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,sBAAsB;AACzG,MAAM,cAAc,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gBAAgB;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kBAAkB;AAC/J,MAAM,0BAA0B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,4BAA4B;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,8BAA8B;AAC7M,MAAM,mCAAmC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,+BAA+B;IAAE,MAAM;IAAa,OAAO;IAAa,QAAQ;IAAM,SAAS;AAAK,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,+BAA+B;AAC1M,MAAM,8BAA8B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gCAAgC;IAAE,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,cAAW,EAAE;IAAM,OAAO,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,cAAW,EAAE;IAAM,QAAQ,wKAAA,CAAA,QAAK,CAAC,WAAW;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,WAAW;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gCAAgC;AACrQ,MAAM,8BAA8B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gCAAgC;IAAE,MAAM,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,OAAO,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,QAAQ,oMAAA,CAAA,aAAU;IAAE,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gCAAgC;AACnN,MAAM,6BAA6B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,+BAA+B;IAAE,OAAO,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,aAAU,EAAE;IAAM,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,aAAU,EAAE;IAAM,QAAQ,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,aAAU,EAAE;IAAM,SAAS,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,aAAU,EAAE;AAAK,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,8BAA8B;AAErR,MAAM,gCAAgC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,kCAAkC;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,iCAAiC;AACtN,MAAM,gCAAgC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,kCAAkC;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ;IAAM,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,iCAAiC;AACpM,MAAM,4BAA4B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,8BAA8B;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,6BAA6B;AAChN,MAAM,mCAAmC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,qCAAqC;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oCAAoC;AAC/N,MAAM,mCAAmC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,qCAAqC;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ;IAAM,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oCAAoC;AAC7M,MAAM,+BAA+B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,iCAAiC;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gCAAgC;AACzN,MAAM,iCAAiC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mCAAmC;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kCAAkC;AACzN,MAAM,iCAAiC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mCAAmC;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ;IAAM,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kCAAkC;AACvM,MAAM,6BAA6B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,+BAA+B;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,8BAA8B;AAEnN,MAAM,mBAAmB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,uBAAuB;IAAE,MAAM;IAAW,OAAO,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,sBAAsB;AACrL,MAAM,uBAAuB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,2BAA2B;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,0BAA0B;AACrL,MAAM,mBAAmB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,uBAAuB;IAAE,MAAM;IAAW,OAAO,oMAAA,CAAA,aAAU;IAAE,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,sBAAsB;AACnL,MAAM,eAAe,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mBAAmB;IAAE,MAAM;IAAkB,OAAO;IAAW,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kBAAkB;AAEpL,MAAM,mBAAmB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,qBAAqB,wKAAA,CAAA,QAAK,CAAC,KAAK,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oBAAoB;AAC1G,MAAM,kBAAkB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,oBAAoB,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,kBAAkB,KAAK,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,mBAAmB;AAC7H,MAAM,mBAAmB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,qBAAqB;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ;IAAM,SAAS;AAAU,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oBAAoB;AACtK,MAAM,wBAAwB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,0BAA0B;IAAE,MAAM,CAAA,GAAA,0LAAA,CAAA,UAAO,AAAD,EAAE,kBAAkB;IAAM,OAAO,CAAA,GAAA,0LAAA,CAAA,SAAM,AAAD,EAAE,kBAAkB;IAAM,QAAQ;IAAkB,SAAS;AAAiB,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,yBAAyB;AACjP,MAAM,eAAe,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,iBAAiB,oMAAA,CAAA,iBAAc,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gBAAgB;AACjG,MAAM,4BAA4B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,8BAA8B;IAAE,MAAM,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,OAAO,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,6BAA6B;AAC7M,MAAM,4BAA4B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,8BAA8B;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ;IAAM,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,6BAA6B;AACnM,MAAM,iCAAiC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mCAAmC;IAAE,MAAM,CAAA,GAAA,0LAAA,CAAA,UAAO,AAAD,EAAE,2BAA2B;IAAM,OAAO,CAAA,GAAA,0LAAA,CAAA,SAAM,AAAD,EAAE,2BAA2B;IAAM,QAAQ;IAAM,SAAS;AAAK,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kCAAkC;AAEtQ,MAAM,wBAAwB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,0BAA0B,6BAA6B,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,yBAAyB;AACzI,MAAM,wBAAwB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,0BAA0B,6BAA6B,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,mBAAmB;AACnI,MAAM,oBAAoB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,sBAAsB,yBAAyB,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,qBAAqB;AACzH,MAAM,0BAA0B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,4BAA4B,MAAM,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,2BAA2B;AACxH,MAAM,0BAA0B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,4BAA4B,MAAM,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,2BAA2B;AACxH,MAAM,sBAAsB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,wBAAwB;IAAE,OAAO,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,uBAAuB;IAAK,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,uBAAuB;IAAK,QAAQ,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,uBAAuB;IAAK,SAAS,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,uBAAuB;AAAI,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,uBAAuB;AACxS,MAAM,+BAA+B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,iCAAiC,kCAAkC,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,wBAAwB;AAE3J,MAAM,qBAAqB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,uBAAuB,kBAAkB,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,uBAAuB;AACtH,MAAM,2BAA2B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,6BAA6B,sMAAA,CAAA,yBAAsB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,8BAA8B;AAC/I,MAAM,qBAAqB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,uBAAuB,kBAAkB,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,uBAAuB;AACtH,MAAM,iBAAiB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mBAAmB,cAAc,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,mBAAmB;AACtG,MAAM,uBAAuB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,yBAAyB,oMAAA,CAAA,iBAAc,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,0BAA0B;AAE3H,MAAM,4BAA4B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,8BAA8B;IAAE,MAAM,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK,KAAK;IAAQ,OAAO,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK,KAAK;IAAO,QAAQ,wKAAA,CAAA,QAAK,CAAC,WAAW;IAAE,SAAS,wKAAA,CAAA,QAAK,CAAC,WAAW;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,6BAA6B;AACnR,MAAM,4BAA4B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,8BAA8B;IAAE,MAAM,wKAAA,CAAA,QAAK,CAAC,OAAO,CAAC;IAAY,OAAO,wKAAA,CAAA,QAAK,CAAC,OAAO,CAAC;IAAY,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,6BAA6B;AACvO,MAAM,wBAAwB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,0BAA0B;IAAE,MAAM,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,IAAI,IAAI,IAAI;IAAO,OAAO,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK,KAAK;IAAO,QAAQ,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK;IAAO,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,yBAAyB;AACjR,MAAM,8BAA8B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gCAAgC;IAAE,MAAM,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,IAAI,IAAI,IAAI;IAAO,OAAO,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK,KAAK;IAAO,QAAQ,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK;IAAO,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,+BAA+B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1480, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/listColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, darken, lighten, transparent, ifDefinedThenElse } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground, editorFindMatchHighlightBorder, editorFindMatchHighlight, widgetShadow, editorWidgetForeground } from './editorColors.js';\nexport const listFocusBackground = registerColor('list.focusBackground', null, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', null, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', null, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', null, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', null, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', null, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', null, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', null, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', null, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropOverBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items over other items when using the mouse.\"));\nexport const listDropBetweenBackground = registerColor('list.dropBetweenBackground', { dark: iconForeground, light: iconForeground, hcDark: null, hcLight: null }, nls.localize('listDropBetweenBackground', \"List/Tree drag and drop border color when moving items between items when using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', widgetShadow, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized.\"));\n// ------ tree\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', transparent(treeIndentGuidesStroke, 0.4), nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\n// ------ table\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\n// ------ action list\nexport const editorActionListBackground = registerColor('editorActionList.background', editorWidgetBackground, nls.localize('editorActionListBackground', \"Action List background color.\"));\nexport const editorActionListForeground = registerColor('editorActionList.foreground', editorWidgetForeground, nls.localize('editorActionListForeground', \"Action List foreground color.\"));\nexport const editorActionListFocusForeground = registerColor('editorActionList.focusForeground', listActiveSelectionForeground, nls.localize('editorActionListFocusForeground', \"Action List foreground color for the focused item.\"));\nexport const editorActionListFocusBackground = registerColor('editorActionList.focusBackground', listActiveSelectionBackground, nls.localize('editorActionListFocusBackground', \"Action List background color for the focused item.\"));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1681, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/menuColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { selectForeground, selectBackground } from './inputColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground } from './listColors.js';\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', selectForeground, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', selectBackground, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', listActiveSelectionForeground, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', listActiveSelectionBackground, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;;;;AAC9F;AAAA;AACA,6BAA6B;AAC7B;AACA,4BAA4B;AAC5B;AACA;AACA;;;;;;AACO,MAAM,aAAa,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,eAAe;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,cAAc;AACzJ,MAAM,iBAAiB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mBAAmB,qMAAA,CAAA,mBAAgB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kBAAkB;AACzG,MAAM,iBAAiB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mBAAmB,qMAAA,CAAA,mBAAgB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kBAAkB;AACzG,MAAM,0BAA0B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,4BAA4B,oMAAA,CAAA,gCAA6B,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,2BAA2B;AACjJ,MAAM,0BAA0B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,4BAA4B,oMAAA,CAAA,gCAA6B,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,2BAA2B;AACjJ,MAAM,sBAAsB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,wBAAwB;IAAE,MAAM;IAAM,OAAO;IAAM,QAAQ,oMAAA,CAAA,uBAAoB;IAAE,SAAS,oMAAA,CAAA,uBAAoB;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,uBAAuB;AAChM,MAAM,0BAA0B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,4BAA4B;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,oMAAA,CAAA,iBAAc;IAAE,SAAS,oMAAA,CAAA,iBAAc;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,2BAA2B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1734, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/quickpickColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\nexport const quickInputBackground = registerColor('quickInput.background', editorWidgetBackground, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', editorWidgetForeground, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', null, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', listActiveSelectionForeground, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', listActiveSelectionIconForeground, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;;;;;;AAC9F;AAAA;AACA,6BAA6B;AAC7B;AACA;AACA,4BAA4B;AAC5B;AACA;;;;;;AACO,MAAM,uBAAuB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,yBAAyB,sMAAA,CAAA,yBAAsB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oBAAoB;AAC7H,MAAM,uBAAuB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,yBAAyB,sMAAA,CAAA,yBAAsB,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,oBAAoB;AAC7H,MAAM,4BAA4B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,8BAA8B;IAAE,MAAM,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,KAAK,KAAK,KAAK;IAAS,OAAO,IAAI,wKAAA,CAAA,QAAK,CAAC,IAAI,wKAAA,CAAA,OAAI,CAAC,GAAG,GAAG,GAAG;IAAQ,QAAQ;IAAW,SAAS,wKAAA,CAAA,QAAK,CAAC,KAAK;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,yBAAyB;AAC7P,MAAM,wBAAwB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,0BAA0B;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS;AAAU,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,yBAAyB;AAC5L,MAAM,oBAAoB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,sBAAsB;IAAE,MAAM;IAAW,OAAO;IAAW,QAAQ,wKAAA,CAAA,QAAK,CAAC,KAAK;IAAE,SAAS;AAAU,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,qBAAqB;AAChL,MAAM,2CAA2C,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,mCAAmC,MAAM,IAAI,WAAW,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,+CAA+C;AACnL,MAAM,gCAAgC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,kCAAkC,oMAAA,CAAA,gCAA6B,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kCAAkC;AACpK,MAAM,oCAAoC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,sCAAsC,oMAAA,CAAA,oCAAiC,EAAE,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,sCAAsC;AACpL,MAAM,gCAAgC,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,kCAAkC;IAAE,MAAM,CAAA,GAAA,0LAAA,CAAA,QAAK,AAAD,EAAE,0CAA0C,oMAAA,CAAA,gCAA6B;IAAG,OAAO,CAAA,GAAA,0LAAA,CAAA,QAAK,AAAD,EAAE,0CAA0C,oMAAA,CAAA,gCAA6B;IAAG,QAAQ;IAAM,SAAS;AAAK,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,kCAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1796, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/searchColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground } from './baseColors.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from './editorColors.js';\nexport const searchResultsInfoForeground = registerColor('search.resultsInfoForeground', { light: foreground, dark: transparent(foreground, 0.65), hcDark: foreground, hcLight: foreground }, nls.localize('search.resultsInfoForeground', \"Color of the text in the search viewlet's completion message.\"));\n// ----- search editor (Distinct from normal editor find match to allow for better differentiation)\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;AAC9F;AAAA;AACA,6BAA6B;AAC7B;AACA,4BAA4B;AAC5B;AACA;;;;;AACO,MAAM,8BAA8B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gCAAgC;IAAE,OAAO,oMAAA,CAAA,aAAU;IAAE,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,oMAAA,CAAA,aAAU,EAAE;IAAO,QAAQ,oMAAA,CAAA,aAAU;IAAE,SAAS,oMAAA,CAAA,aAAU;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,gCAAgC;AAEpO,MAAM,wBAAwB,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,oCAAoC;IAAE,OAAO,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,sMAAA,CAAA,2BAAwB,EAAE;IAAO,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,sMAAA,CAAA,2BAAwB,EAAE;IAAO,QAAQ,sMAAA,CAAA,2BAAwB;IAAE,SAAS,sMAAA,CAAA,2BAAwB;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,2BAA2B;AACxS,MAAM,8BAA8B,CAAA,GAAA,0LAAA,CAAA,gBAAa,AAAD,EAAE,gCAAgC;IAAE,OAAO,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,sMAAA,CAAA,iCAA8B,EAAE;IAAO,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD,EAAE,sMAAA,CAAA,iCAA8B,EAAE;IAAO,QAAQ,sMAAA,CAAA,iCAA8B;IAAE,SAAS,sMAAA,CAAA,iCAA8B;AAAC,GAAG,CAAA,GAAA,oKAAA,CAAA,WAAY,AAAD,EAAE,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1839, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport * from './colorUtils.js';\n// Make sure all color files are exported\nexport * from './colors/baseColors.js';\nexport * from './colors/chartsColors.js';\nexport * from './colors/editorColors.js';\nexport * from './colors/inputColors.js';\nexport * from './colors/listColors.js';\nexport * from './colors/menuColors.js';\nexport * from './colors/minimapColors.js';\nexport * from './colors/miscColors.js';\nexport * from './colors/quickpickColors.js';\nexport * from './colors/searchColors.js';\n"],"names":[],"mappings":"AAAA;;;8FAG8F;AAC9F;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js"],"sourcesContent":["import { keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropOverBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, listDropBetweenBackground, radioActiveBackground, radioActiveForeground, radioInactiveBackground, radioInactiveForeground, radioInactiveBorder, radioInactiveHoverBackground, radioActiveBorder } from '../common/colorRegistry.js';\nimport { Color } from '../../../base/common/color.js';\nfunction overrideStyles(override, styles) {\n    const result = { ...styles };\n    for (const key in override) {\n        const val = override[key];\n        result[key] = val !== undefined ? asCssVariable(val) : undefined;\n    }\n    return result;\n}\nexport const defaultKeybindingLabelStyles = {\n    keybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n    keybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n    keybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n    keybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n    keybindingLabelShadow: asCssVariable(widgetShadow)\n};\nexport const defaultButtonStyles = {\n    buttonForeground: asCssVariable(buttonForeground),\n    buttonSeparator: asCssVariable(buttonSeparator),\n    buttonBackground: asCssVariable(buttonBackground),\n    buttonHoverBackground: asCssVariable(buttonHoverBackground),\n    buttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n    buttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n    buttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n    buttonBorder: asCssVariable(buttonBorder),\n};\nexport const defaultProgressBarStyles = {\n    progressBarBackground: asCssVariable(progressBarBackground)\n};\nexport const defaultToggleStyles = {\n    inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n    inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n    inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\nexport const defaultRadioStyles = {\n    activeForeground: asCssVariable(radioActiveForeground),\n    activeBackground: asCssVariable(radioActiveBackground),\n    activeBorder: asCssVariable(radioActiveBorder),\n    inactiveForeground: asCssVariable(radioInactiveForeground),\n    inactiveBackground: asCssVariable(radioInactiveBackground),\n    inactiveBorder: asCssVariable(radioInactiveBorder),\n    inactiveHoverBackground: asCssVariable(radioInactiveHoverBackground),\n};\nexport const defaultCheckboxStyles = {\n    checkboxBackground: asCssVariable(checkboxBackground),\n    checkboxBorder: asCssVariable(checkboxBorder),\n    checkboxForeground: asCssVariable(checkboxForeground)\n};\nexport const defaultDialogStyles = {\n    dialogBackground: asCssVariable(editorWidgetBackground),\n    dialogForeground: asCssVariable(editorWidgetForeground),\n    dialogShadow: asCssVariable(widgetShadow),\n    dialogBorder: asCssVariable(contrastBorder),\n    errorIconForeground: asCssVariable(problemsErrorIconForeground),\n    warningIconForeground: asCssVariable(problemsWarningIconForeground),\n    infoIconForeground: asCssVariable(problemsInfoIconForeground),\n    textLinkForeground: asCssVariable(textLinkForeground)\n};\nexport const defaultInputBoxStyles = {\n    inputBackground: asCssVariable(inputBackground),\n    inputForeground: asCssVariable(inputForeground),\n    inputBorder: asCssVariable(inputBorder),\n    inputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n    inputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n    inputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n    inputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n    inputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n    inputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n    inputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n    inputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n    inputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\nexport const defaultFindWidgetStyles = {\n    listFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n    listFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n    listFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n    listFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n    inputBoxStyles: defaultInputBoxStyles,\n    toggleStyles: defaultToggleStyles\n};\nexport const defaultCountBadgeStyles = {\n    badgeBackground: asCssVariable(badgeBackground),\n    badgeForeground: asCssVariable(badgeForeground),\n    badgeBorder: asCssVariable(contrastBorder)\n};\nexport const defaultBreadcrumbsWidgetStyles = {\n    breadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n    breadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n    breadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\nexport const defaultListStyles = {\n    listBackground: undefined,\n    listInactiveFocusForeground: undefined,\n    listFocusBackground: asCssVariable(listFocusBackground),\n    listFocusForeground: asCssVariable(listFocusForeground),\n    listFocusOutline: asCssVariable(listFocusOutline),\n    listActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n    listFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n    listFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n    listInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n    listInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n    listInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n    listInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listDropOverBackground: asCssVariable(listDropOverBackground),\n    listDropBetweenBackground: asCssVariable(listDropBetweenBackground),\n    listSelectionOutline: asCssVariable(activeContrastBorder),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    treeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n    treeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n    treeStickyScrollBackground: undefined,\n    treeStickyScrollBorder: undefined,\n    treeStickyScrollShadow: asCssVariable(scrollbarShadow),\n    tableColumnsBorder: asCssVariable(tableColumnsBorder),\n    tableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\nexport function getListStyles(override) {\n    return overrideStyles(override, defaultListStyles);\n}\nexport const defaultSelectBoxStyles = {\n    selectBackground: asCssVariable(selectBackground),\n    selectListBackground: asCssVariable(selectListBackground),\n    selectForeground: asCssVariable(selectForeground),\n    decoratorRightForeground: asCssVariable(pickerGroupForeground),\n    selectBorder: asCssVariable(selectBorder),\n    focusBorder: asCssVariable(focusBorder),\n    listFocusBackground: asCssVariable(quickInputListFocusBackground),\n    listInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n    listFocusForeground: asCssVariable(quickInputListFocusForeground),\n    listFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    selectListBorder: asCssVariable(editorWidgetBorder),\n    listBackground: undefined,\n    listActiveSelectionBackground: undefined,\n    listActiveSelectionForeground: undefined,\n    listActiveSelectionIconForeground: undefined,\n    listFocusAndSelectionBackground: undefined,\n    listDropOverBackground: undefined,\n    listDropBetweenBackground: undefined,\n    listInactiveSelectionBackground: undefined,\n    listInactiveSelectionForeground: undefined,\n    listInactiveFocusBackground: undefined,\n    listInactiveFocusOutline: undefined,\n    listSelectionOutline: undefined,\n    listFocusAndSelectionForeground: undefined,\n    listFocusAndSelectionOutline: undefined,\n    listInactiveFocusForeground: undefined,\n    tableColumnsBorder: undefined,\n    tableOddRowsBackgroundColor: undefined,\n    treeIndentGuidesStroke: undefined,\n    treeInactiveIndentGuidesStroke: undefined,\n    treeStickyScrollBackground: undefined,\n    treeStickyScrollBorder: undefined,\n    treeStickyScrollShadow: undefined\n};\nexport const defaultMenuStyles = {\n    shadowColor: asCssVariable(widgetShadow),\n    borderColor: asCssVariable(menuBorder),\n    foregroundColor: asCssVariable(menuForeground),\n    backgroundColor: asCssVariable(menuBackground),\n    selectionForegroundColor: asCssVariable(menuSelectionForeground),\n    selectionBackgroundColor: asCssVariable(menuSelectionBackground),\n    selectionBorderColor: asCssVariable(menuSelectionBorder),\n    separatorColor: asCssVariable(menuSeparatorBackground),\n    scrollbarShadow: asCssVariable(scrollbarShadow),\n    scrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n    scrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n    scrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2105, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { getCodiconFontCharacters } from '../../../base/common/codiconsUtil.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    const codiconFontCharacters = getCodiconFontCharacters();\n    for (const icon in codiconFontCharacters) {\n        const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n        iconRegistry.registerIcon(icon, { fontCharacter });\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const disposable = new DisposableStore();\n    const onDidChangeEmmiter = disposable.add(new Emitter());\n    const iconRegistry = getIconRegistry();\n    disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n    if (themeService) {\n        disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n    }\n    return {\n        dispose: () => disposable.dispose(),\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const rules = [];\n            const rootAttribs = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    continue;\n                }\n                const fontContribution = definition.font;\n                const fontFamilyVar = `--vscode-icon-${contribution.id}-font-family`;\n                const contentVar = `--vscode-icon-${contribution.id}-content`;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    rootAttribs.push(`${fontFamilyVar}: ${asCSSPropertyValue(fontContribution.id)};`, `${contentVar}: '${definition.fontCharacter}';`);\n                    rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`);\n                }\n                else {\n                    rootAttribs.push(`${contentVar}: '${definition.fontCharacter}'; ${fontFamilyVar}: 'codicon';`);\n                    rules.push(`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            rules.push(`:root { ${rootAttribs.join(' ')} }`);\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}