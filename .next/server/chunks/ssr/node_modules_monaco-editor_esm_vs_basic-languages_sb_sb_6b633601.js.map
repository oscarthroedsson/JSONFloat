{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/oscarthroedsson/Documents/code/myownprojects/JSONFloat/node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/sb/sb.ts\nvar conf = {\n  comments: {\n    lineComment: \"'\"\n  },\n  brackets: [\n    [\"(\", \")\"],\n    [\"[\", \"]\"],\n    [\"If\", \"EndIf\"],\n    [\"While\", \"EndWhile\"],\n    [\"For\", \"EndFor\"],\n    [\"Sub\", \"EndSub\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".sb\",\n  ignoreCase: true,\n  brackets: [\n    { token: \"delimiter.array\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    // Special bracket statement pairs\n    { token: \"keyword.tag-if\", open: \"If\", close: \"EndIf\" },\n    { token: \"keyword.tag-while\", open: \"While\", close: \"EndWhile\" },\n    { token: \"keyword.tag-for\", open: \"For\", close: \"EndFor\" },\n    { token: \"keyword.tag-sub\", open: \"Sub\", close: \"EndSub\" }\n  ],\n  keywords: [\n    \"Else\",\n    \"ElseIf\",\n    \"EndFor\",\n    \"EndIf\",\n    \"EndSub\",\n    \"EndWhile\",\n    \"For\",\n    \"Goto\",\n    \"If\",\n    \"Step\",\n    \"Sub\",\n    \"Then\",\n    \"To\",\n    \"While\"\n  ],\n  tagwords: [\"If\", \"Sub\", \"While\", \"For\"],\n  operators: [\">\", \"<\", \"<>\", \"<=\", \">=\", \"And\", \"Or\", \"+\", \"-\", \"*\", \"/\", \"=\"],\n  // we include these common regular expressions\n  identifier: /[a-zA-Z_][\\w]*/,\n  symbols: /[=><:+\\-*\\/%\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // whitespace\n      { include: \"@whitespace\" },\n      // classes\n      [/(@identifier)(?=[.])/, \"type\"],\n      // identifiers, tagwords, and keywords\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@operators\": \"operator\",\n            \"@default\": \"variable.name\"\n          }\n        }\n      ],\n      // methods, properties, and events\n      [\n        /([.])(@identifier)/,\n        {\n          cases: {\n            $2: [\"delimiter\", \"type.member\"],\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // numbers\n      [/\\d*\\.\\d+/, \"number.float\"],\n      [/\\d+/, \"number\"],\n      // delimiters and operators\n      [/[()\\[\\]]/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"operator\",\n            \"@default\": \"delimiter\"\n          }\n        }\n      ],\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-teminated string\n      [/\"/, \"string\", \"@string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(\\').*$/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"C?/, \"string\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"AAAA;;;;;+EAK+E,GAG/E,+BAA+B;;;;;AAC/B,IAAI,OAAO;IACT,UAAU;QACR,aAAa;IACf;IACA,UAAU;QACR;YAAC;YAAK;SAAI;QACV;YAAC;YAAK;SAAI;QACV;YAAC;YAAM;SAAQ;QACf;YAAC;YAAS;SAAW;QACrB;YAAC;YAAO;SAAS;QACjB;YAAC;YAAO;SAAS;KAClB;IACD,kBAAkB;QAChB;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;gBAAC;gBAAU;aAAU;QAAC;QACtD;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;gBAAC;gBAAU;aAAU;QAAC;QACtD;YAAE,MAAM;YAAK,OAAO;YAAK,OAAO;gBAAC;gBAAU;aAAU;QAAC;KACvD;AACH;AACA,IAAI,WAAW;IACb,cAAc;IACd,cAAc;IACd,YAAY;IACZ,UAAU;QACR;YAAE,OAAO;YAAmB,MAAM;YAAK,OAAO;QAAI;QAClD;YAAE,OAAO;YAAyB,MAAM;YAAK,OAAO;QAAI;QACxD,kCAAkC;QAClC;YAAE,OAAO;YAAkB,MAAM;YAAM,OAAO;QAAQ;QACtD;YAAE,OAAO;YAAqB,MAAM;YAAS,OAAO;QAAW;QAC/D;YAAE,OAAO;YAAmB,MAAM;YAAO,OAAO;QAAS;QACzD;YAAE,OAAO;YAAmB,MAAM;YAAO,OAAO;QAAS;KAC1D;IACD,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,UAAU;QAAC;QAAM;QAAO;QAAS;KAAM;IACvC,WAAW;QAAC;QAAK;QAAK;QAAM;QAAM;QAAM;QAAO;QAAM;QAAK;QAAK;QAAK;QAAK;KAAI;IAC7E,8CAA8C;IAC9C,YAAY;IACZ,SAAS;IACT,SAAS;IACT,uCAAuC;IACvC,WAAW;QACT,MAAM;YACJ,aAAa;YACb;gBAAE,SAAS;YAAc;YACzB,UAAU;YACV;gBAAC;gBAAwB;aAAO;YAChC,sCAAsC;YACtC;gBACE;gBACA;oBACE,OAAO;wBACL,aAAa;4BAAE,OAAO;wBAAa;wBACnC,cAAc;wBACd,YAAY;oBACd;gBACF;aACD;YACD,kCAAkC;YAClC;gBACE;gBACA;oBACE,OAAO;wBACL,IAAI;4BAAC;4BAAa;yBAAc;wBAChC,YAAY;oBACd;gBACF;aACD;YACD,UAAU;YACV;gBAAC;gBAAY;aAAe;YAC5B;gBAAC;gBAAO;aAAS;YACjB,2BAA2B;YAC3B;gBAAC;gBAAY;aAAY;YACzB;gBACE;gBACA;oBACE,OAAO;wBACL,cAAc;wBACd,YAAY;oBACd;gBACF;aACD;YACD,UAAU;YACV;gBAAC;gBAAmB;aAAiB;YACrC,uBAAuB;YACvB;gBAAC;gBAAK;gBAAU;aAAU;SAC3B;QACD,YAAY;YACV;gBAAC;gBAAc;aAAG;YAClB;gBAAC;gBAAW;aAAU;SACvB;QACD,QAAQ;YACN;gBAAC;gBAAW;aAAS;YACrB;gBAAC;gBAAY;aAAgB;YAC7B;gBAAC;gBAAO;aAAwB;YAChC;gBAAC;gBAAO;gBAAU;aAAO;SAC1B;IACH;AACF","ignoreList":[0],"debugId":null}}]
}